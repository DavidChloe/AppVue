{
  "version": 3,
  "sources": ["../../vuetify/src/components/VTextField/VTextField.tsx", "../../vuetify/src/components/VCounter/VCounter.tsx", "../../vuetify/src/util/globals.ts", "../../vuetify/src/util/helpers.ts", "../../vuetify/src/util/anchor.ts", "../../vuetify/src/util/box.ts", "../../vuetify/src/util/animation.ts", "../../vuetify/src/util/color/APCA.ts", "../../vuetify/src/util/console.ts", "../../vuetify/src/util/colorUtils.ts", "../../vuetify/src/util/propsFactory.ts", "../../vuetify/src/composables/component.ts", "../../vuetify/src/util/getCurrentInstance.ts", "../../vuetify/src/util/injectSelf.ts", "../../vuetify/src/composables/defaults.ts", "../../vuetify/src/util/defineComponent.tsx", "../../vuetify/src/util/easing.ts", "../../vuetify/src/util/useRender.ts", "../../vuetify/src/components/transitions/createTransition.ts", "../../vuetify/src/components/transitions/expand-transition.ts", "../../vuetify/src/components/transitions/dialog-transition.tsx", "../../vuetify/src/components/transitions/index.ts", "../../vuetify/src/composables/transition.ts", "../../vuetify/src/components/VField/VField.tsx", "../../vuetify/src/components/VLabel/VLabel.tsx", "../../vuetify/src/composables/theme.ts", "../../vuetify/src/components/VField/VFieldLabel.tsx", "../../vuetify/src/components/VDefaultsProvider/VDefaultsProvider.tsx", "../../vuetify/src/components/VIcon/VIcon.tsx", "../../vuetify/src/composables/color.ts", "../../vuetify/src/composables/icons.tsx", "../../vuetify/src/composables/size.ts", "../../vuetify/src/composables/tag.ts", "../../vuetify/src/composables/toggleScope.ts", "../../vuetify/src/composables/proxiedModel.ts", "../../vuetify/src/composables/locale.ts", "../../vuetify/src/components/VInput/InputIcon.tsx", "../../vuetify/src/composables/focus.ts", "../../vuetify/src/components/VProgressLinear/VProgressLinear.tsx", "../../vuetify/src/composables/intersectionObserver.ts", "../../vuetify/src/composables/location.ts", "../../vuetify/src/composables/rounded.ts", "../../vuetify/src/composables/loader.tsx", "../../vuetify/src/components/VInput/VInput.tsx", "../../vuetify/src/components/VMessages/VMessages.tsx", "../../vuetify/src/composables/density.ts", "../../vuetify/src/composables/dimensions.ts", "../../vuetify/src/composables/form.ts", "../../vuetify/src/composables/validation.ts", "../../vuetify/src/composables/forwardRefs.ts", "../../vuetify/src/directives/intersect/index.ts"],
  "sourcesContent": ["// Styles\nimport './VTextField.sass'\n\n// Components\nimport { VCounter } from '@/components/VCounter/VCounter'\nimport { makeVFieldProps, VField } from '@/components/VField/VField'\nimport { makeVInputProps, VInput } from '@/components/VInput/VInput'\n\n// Composables\nimport { useFocus } from '@/composables/focus'\nimport { forwardRefs } from '@/composables/forwardRefs'\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Directives\nimport Intersect from '@/directives/intersect'\n\n// Utilities\nimport { cloneVNode, computed, nextTick, ref } from 'vue'\nimport { callEvent, filterInputAttrs, genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { VCounterSlot } from '@/components/VCounter/VCounter'\nimport type { VFieldSlots } from '@/components/VField/VField'\nimport type { VInputSlots } from '@/components/VInput/VInput'\n\nconst activeTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month']\n\nexport const makeVTextFieldProps = propsFactory({\n  autofocus: Boolean,\n  counter: [Boolean, Number, String],\n  counterValue: [Number, Function] as PropType<number | ((value: any) => number)>,\n  prefix: String,\n  placeholder: String,\n  persistentPlaceholder: Boolean,\n  persistentCounter: Boolean,\n  suffix: String,\n  role: String,\n  type: {\n    type: String,\n    default: 'text',\n  },\n  modelModifiers: Object as PropType<Record<string, boolean>>,\n\n  ...makeVInputProps(),\n  ...makeVFieldProps(),\n}, 'VTextField')\n\nexport type VTextFieldSlots = Omit<VInputSlots & VFieldSlots, 'default'> & {\n  default: never\n  counter: VCounterSlot\n}\n\nexport const VTextField = genericComponent<VTextFieldSlots>()({\n  name: 'VTextField',\n\n  directives: { Intersect },\n\n  inheritAttrs: false,\n\n  props: makeVTextFieldProps(),\n\n  emits: {\n    'click:control': (e: MouseEvent) => true,\n    'mousedown:control': (e: MouseEvent) => true,\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (val: string) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const model = useProxiedModel(props, 'modelValue')\n    const { isFocused, focus, blur } = useFocus(props)\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value)\n        : typeof props.counterValue === 'number' ? props.counterValue\n        : (model.value ?? '').toString().length\n    })\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength as unknown as undefined\n\n      if (\n        !props.counter ||\n        (typeof props.counter !== 'number' &&\n        typeof props.counter !== 'string')\n      ) return undefined\n\n      return props.counter\n    })\n\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant))\n\n    function onIntersect (\n      isIntersecting: boolean,\n      entries: IntersectionObserverEntry[]\n    ) {\n      if (!props.autofocus || !isIntersecting) return\n\n      (entries[0].target as HTMLInputElement)?.focus?.()\n    }\n\n    const vInputRef = ref<VInput>()\n    const vFieldRef = ref<VField>()\n    const inputRef = ref<HTMLInputElement>()\n    const isActive = computed(() => (\n      activeTypes.includes(props.type) ||\n      props.persistentPlaceholder ||\n      isFocused.value ||\n      props.active\n    ))\n    function onFocus () {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus()\n      }\n\n      if (!isFocused.value) focus()\n    }\n    function onControlMousedown (e: MouseEvent) {\n      emit('mousedown:control', e)\n\n      if (e.target === inputRef.value) return\n\n      onFocus()\n      e.preventDefault()\n    }\n    function onControlClick (e: MouseEvent) {\n      onFocus()\n\n      emit('click:control', e)\n    }\n    function onClear (e: MouseEvent) {\n      e.stopPropagation()\n\n      onFocus()\n\n      nextTick(() => {\n        model.value = null\n\n        callEvent(props['onClick:clear'], e)\n      })\n    }\n    function onInput (e: Event) {\n      const el = e.target as HTMLInputElement\n      model.value = el.value\n      if (\n        props.modelModifiers?.trim &&\n        ['text', 'search', 'password', 'tel', 'url'].includes(props.type)\n      ) {\n        const caretPosition = [el.selectionStart, el.selectionEnd]\n        nextTick(() => {\n          el.selectionStart = caretPosition[0]\n          el.selectionEnd = caretPosition[1]\n        })\n      }\n    }\n\n    useRender(() => {\n      const hasCounter = !!(slots.counter || (props.counter !== false && props.counter != null))\n      const hasDetails = !!(hasCounter || slots.details)\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs)\n      const { modelValue: _, ...inputProps } = VInput.filterProps(props)\n      const fieldProps = VField.filterProps(props)\n\n      return (\n        <VInput\n          ref={ vInputRef }\n          v-model={ model.value }\n          class={[\n            'v-text-field',\n            {\n              'v-text-field--prefixed': props.prefix,\n              'v-text-field--suffixed': props.suffix,\n              'v-input--plain-underlined': isPlainOrUnderlined.value,\n            },\n            props.class,\n          ]}\n          style={ props.style }\n          { ...rootAttrs }\n          { ...inputProps }\n          centerAffix={ !isPlainOrUnderlined.value }\n          focused={ isFocused.value }\n        >\n          {{\n            ...slots,\n            default: ({\n              id,\n              isDisabled,\n              isDirty,\n              isReadonly,\n              isValid,\n            }) => (\n              <VField\n                ref={ vFieldRef }\n                onMousedown={ onControlMousedown }\n                onClick={ onControlClick }\n                onClick:clear={ onClear }\n                onClick:prependInner={ props['onClick:prependInner'] }\n                onClick:appendInner={ props['onClick:appendInner'] }\n                role={ props.role }\n                { ...fieldProps }\n                id={ id.value }\n                active={ isActive.value || isDirty.value }\n                dirty={ isDirty.value || props.dirty }\n                disabled={ isDisabled.value }\n                focused={ isFocused.value }\n                error={ isValid.value === false }\n              >\n                {{\n                  ...slots,\n                  default: ({\n                    props: { class: fieldClass, ...slotProps },\n                  }) => {\n                    const inputNode = (\n                      <input\n                        ref={ inputRef }\n                        value={ model.value }\n                        onInput={ onInput }\n                        v-intersect={[{\n                          handler: onIntersect,\n                        }, null, ['once']]}\n                        autofocus={ props.autofocus }\n                        readonly={ isReadonly.value }\n                        disabled={ isDisabled.value }\n                        name={ props.name }\n                        placeholder={ props.placeholder }\n                        size={ 1 }\n                        type={ props.type }\n                        onFocus={ onFocus }\n                        onBlur={ blur }\n                        { ...slotProps }\n                        { ...inputAttrs }\n                      />\n                    )\n\n                    return (\n                      <>\n                        { props.prefix && (\n                          <span class=\"v-text-field__prefix\">\n                            <span class=\"v-text-field__prefix__text\">\n                              { props.prefix }\n                            </span>\n                          </span>\n                        )}\n\n                        { slots.default ? (\n                          <div\n                            class={ fieldClass }\n                            data-no-activator=\"\"\n                          >\n                            { slots.default() }\n                            { inputNode }\n                          </div>\n                        ) : cloneVNode(inputNode, { class: fieldClass })}\n\n                        { props.suffix && (\n                          <span class=\"v-text-field__suffix\">\n                            <span class=\"v-text-field__suffix__text\">\n                              { props.suffix }\n                            </span>\n                          </span>\n                        )}\n                      </>\n                    )\n                  },\n                }}\n              </VField>\n            ),\n            details: hasDetails ? slotProps => (\n              <>\n                { slots.details?.(slotProps) }\n\n                { hasCounter && (\n                  <>\n                    <span />\n\n                    <VCounter\n                      active={ props.persistentCounter || isFocused.value }\n                      value={ counterValue.value }\n                      max={ max.value }\n                      disabled={ props.disabled }\n                      v-slots:default={ slots.counter }\n                    />\n                  </>\n                )}\n              </>\n            ) : undefined,\n          }}\n        </VInput>\n      )\n    })\n\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef)\n  },\n})\n\nexport type VTextField = InstanceType<typeof VTextField>\n", "// Styles\nimport './VCounter.sass'\n\n// Components\nimport { VSlideYTransition } from '@/components/transitions'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { Component } from 'vue'\n\nexport const makeVCounterProps = propsFactory({\n  active: Boolean,\n  disabled: Boolean,\n  max: [Number, String],\n  value: {\n    type: [Number, String],\n    default: 0,\n  },\n\n  ...makeComponentProps(),\n  ...makeTransitionProps({\n    transition: { component: VSlideYTransition as Component },\n  }),\n}, 'VCounter')\n\nexport type VCounterSlot = {\n  counter: string\n  max: string | number | undefined\n  value: string | number | undefined\n}\n\ntype VCounterSlots = {\n  default: VCounterSlot\n}\n\nexport const VCounter = genericComponent<VCounterSlots>()({\n  name: 'VCounter',\n\n  functional: true,\n\n  props: makeVCounterProps(),\n\n  setup (props, { slots }) {\n    const counter = computed(() => {\n      return props.max ? `${props.value} / ${props.max}` : String(props.value)\n    })\n\n    useRender(() => (\n      <MaybeTransition transition={ props.transition }>\n        <div\n          v-show={ props.active }\n          class={[\n            'v-counter',\n            {\n              'text-error': props.max && !props.disabled &&\n                parseFloat(props.value) > parseFloat(props.max),\n            },\n            props.class,\n          ]}\n          style={ props.style }\n        >\n          { slots.default\n            ? slots.default({\n              counter: counter.value,\n              max: props.max,\n              value: props.value,\n            })\n            : counter.value\n          }\n        </div>\n      </MaybeTransition>\n    ))\n\n    return {}\n  },\n})\n\nexport type VCounter = InstanceType<typeof VCounter>\n", "export const IN_BROWSER = typeof window !== 'undefined'\nexport const SUPPORTS_INTERSECTION = IN_BROWSER && 'IntersectionObserver' in window\nexport const SUPPORTS_TOUCH = IN_BROWSER && ('ontouchstart' in window || window.navigator.maxTouchPoints > 0)\nexport const SUPPORTS_EYE_DROPPER = IN_BROWSER && 'EyeDropper' in window\n", "// Utilities\nimport { capitalize, Comment, computed, Fragment, isVNode, reactive, shallowRef, toRefs, unref, watchEffect } from 'vue'\nimport { IN_BROWSER } from '@/util/globals'\n\n// Types\nimport type {\n  ComponentInternalInstance,\n  ComponentPublicInstance,\n  ComputedGetter,\n  InjectionKey,\n  PropType,\n  Ref,\n  ToRefs,\n  VNode,\n  VNodeArrayChildren,\n  VNodeChild,\n} from 'vue'\n\nexport function getNestedValue (obj: any, path: (string | number)[], fallback?: any): any {\n  const last = path.length - 1\n\n  if (last < 0) return obj === undefined ? fallback : obj\n\n  for (let i = 0; i < last; i++) {\n    if (obj == null) {\n      return fallback\n    }\n    obj = obj[path[i]]\n  }\n\n  if (obj == null) return fallback\n\n  return obj[path[last]] === undefined ? fallback : obj[path[last]]\n}\n\nexport function deepEqual (a: any, b: any): boolean {\n  if (a === b) return true\n\n  if (\n    a instanceof Date &&\n    b instanceof Date &&\n    a.getTime() !== b.getTime()\n  ) {\n    // If the values are Date, compare them as timestamps\n    return false\n  }\n\n  if (a !== Object(a) || b !== Object(b)) {\n    // If the values aren't objects, they were already checked for equality\n    return false\n  }\n\n  const props = Object.keys(a)\n\n  if (props.length !== Object.keys(b).length) {\n    // Different number of props, don't bother to check\n    return false\n  }\n\n  return props.every(p => deepEqual(a[p], b[p]))\n}\n\nexport function getObjectValueByPath (obj: any, path?: string | null, fallback?: any): any {\n  // credit: http://stackoverflow.com/questions/6491463/accessing-nested-javascript-objects-with-string-key#comment55278413_6491621\n  if (obj == null || !path || typeof path !== 'string') return fallback\n  if (obj[path] !== undefined) return obj[path]\n  path = path.replace(/\\[(\\w+)\\]/g, '.$1') // convert indexes to properties\n  path = path.replace(/^\\./, '') // strip a leading dot\n  return getNestedValue(obj, path.split('.'), fallback)\n}\n\nexport type SelectItemKey<T = Record<string, any>> =\n  | boolean | null | undefined // Ignored\n  | string // Lookup by key, can use dot notation for nested objects\n  | readonly (string | number)[] // Nested lookup by key, each array item is a key in the next level\n  | ((item: T, fallback?: any) => any)\n\nexport function getPropertyFromItem (\n  item: any,\n  property: SelectItemKey,\n  fallback?: any\n): any {\n  if (property === true) return item === undefined ? fallback : item\n\n  if (property == null || typeof property === 'boolean') return fallback\n\n  if (item !== Object(item)) {\n    if (typeof property !== 'function') return fallback\n\n    const value = property(item, fallback)\n\n    return typeof value === 'undefined' ? fallback : value\n  }\n\n  if (typeof property === 'string') return getObjectValueByPath(item, property, fallback)\n\n  if (Array.isArray(property)) return getNestedValue(item, property, fallback)\n\n  if (typeof property !== 'function') return fallback\n\n  const value = property(item, fallback)\n\n  return typeof value === 'undefined' ? fallback : value\n}\n\nexport function createRange (length: number, start = 0): number[] {\n  return Array.from({ length }, (v, k) => start + k)\n}\n\nexport function getZIndex (el?: Element | null): number {\n  if (!el || el.nodeType !== Node.ELEMENT_NODE) return 0\n\n  const index = Number(window.getComputedStyle(el).getPropertyValue('z-index'))\n\n  if (!index) return getZIndex(el.parentNode as Element)\n  return index\n}\n\nexport function convertToUnit (str: number, unit?: string): string\nexport function convertToUnit (str: string | number | null | undefined, unit?: string): string | undefined\nexport function convertToUnit (str: string | number | null | undefined, unit = 'px'): string | undefined {\n  if (str == null || str === '') {\n    return undefined\n  }\n  const num = Number(str)\n  if (isNaN(num)) {\n    return String(str)\n  } else if (!isFinite(num)) {\n    return undefined\n  } else {\n    return `${num}${unit}`\n  }\n}\n\nexport function isObject (obj: any): obj is Record<string, any> {\n  return obj !== null && typeof obj === 'object' && !Array.isArray(obj)\n}\n\nexport function isPlainObject (obj: any): obj is Record<string, any> {\n  let proto\n  return obj !== null && typeof obj === 'object' && (\n    (proto = Object.getPrototypeOf(obj)) === Object.prototype ||\n    proto === null\n  )\n}\n\nexport function refElement (obj?: ComponentPublicInstance<any> | HTMLElement): HTMLElement | undefined {\n  if (obj && '$el' in obj) {\n    const el = obj.$el as HTMLElement\n    if (el?.nodeType === Node.TEXT_NODE) {\n      // Multi-root component, use the first element\n      return el.nextElementSibling as HTMLElement\n    }\n    return el\n  }\n  return obj as HTMLElement\n}\n\n// KeyboardEvent.keyCode aliases\nexport const keyCodes = Object.freeze({\n  enter: 13,\n  tab: 9,\n  delete: 46,\n  esc: 27,\n  space: 32,\n  up: 38,\n  down: 40,\n  left: 37,\n  right: 39,\n  end: 35,\n  home: 36,\n  del: 46,\n  backspace: 8,\n  insert: 45,\n  pageup: 33,\n  pagedown: 34,\n  shift: 16,\n})\n\nexport const keyValues: Record<string, string> = Object.freeze({\n  enter: 'Enter',\n  tab: 'Tab',\n  delete: 'Delete',\n  esc: 'Escape',\n  space: 'Space',\n  up: 'ArrowUp',\n  down: 'ArrowDown',\n  left: 'ArrowLeft',\n  right: 'ArrowRight',\n  end: 'End',\n  home: 'Home',\n  del: 'Delete',\n  backspace: 'Backspace',\n  insert: 'Insert',\n  pageup: 'PageUp',\n  pagedown: 'PageDown',\n  shift: 'Shift',\n})\n\nexport function keys<O extends {}> (o: O) {\n  return Object.keys(o) as (keyof O)[]\n}\n\nexport function has<T extends string> (obj: object, key: T[]): obj is Record<T, unknown> {\n  return key.every(k => obj.hasOwnProperty(k))\n}\n\ntype MaybePick<\n  T extends object,\n  U extends Extract<keyof T, string>\n> = Record<string, unknown> extends T ? Partial<Pick<T, U>> : Pick<T, U>\n\n// Array of keys\nexport function pick<\n  T extends object,\n  U extends Extract<keyof T, string>\n> (obj: T, paths: U[]): MaybePick<T, U> {\n  const found: any = {}\n\n  for (const key of paths) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      found[key] = obj[key]\n    }\n  }\n\n  return found\n}\n\n// Array of keys\nexport function pickWithRest<\n  T extends object,\n  U extends Extract<keyof T, string>,\n  E extends Extract<keyof T, string>\n> (obj: T, paths: U[], exclude?: E[]): [yes: MaybePick<T, Exclude<U, E>>, no: Omit<T, Exclude<U, E>>]\n// Array of keys or RegExp to test keys against\nexport function pickWithRest<\n  T extends object,\n  U extends Extract<keyof T, string>,\n  E extends Extract<keyof T, string>\n> (obj: T, paths: (U | RegExp)[], exclude?: E[]): [yes: Partial<T>, no: Partial<T>]\nexport function pickWithRest<\n  T extends object,\n  U extends Extract<keyof T, string>,\n  E extends Extract<keyof T, string>\n> (obj: T, paths: (U | RegExp)[], exclude?: E[]): [yes: Partial<T>, no: Partial<T>] {\n  const found = Object.create(null)\n  const rest = Object.create(null)\n\n  for (const key in obj) {\n    if (\n      paths.some(path => path instanceof RegExp\n        ? path.test(key)\n        : path === key\n      ) && !exclude?.some(path => path === key)\n    ) {\n      found[key] = obj[key]\n    } else {\n      rest[key] = obj[key]\n    }\n  }\n\n  return [found, rest]\n}\n\nexport function omit<\n  T extends object,\n  U extends Extract<keyof T, string>\n> (obj: T, exclude: U[]): Omit<T, U> {\n  const clone = { ...obj }\n\n  exclude.forEach(prop => delete clone[prop])\n\n  return clone\n}\n\nconst onRE = /^on[^a-z]/\nexport const isOn = (key: string) => onRE.test(key)\n\nconst bubblingEvents = [\n  'onAfterscriptexecute',\n  'onAnimationcancel',\n  'onAnimationend',\n  'onAnimationiteration',\n  'onAnimationstart',\n  'onAuxclick',\n  'onBeforeinput',\n  'onBeforescriptexecute',\n  'onChange',\n  'onClick',\n  'onCompositionend',\n  'onCompositionstart',\n  'onCompositionupdate',\n  'onContextmenu',\n  'onCopy',\n  'onCut',\n  'onDblclick',\n  'onFocusin',\n  'onFocusout',\n  'onFullscreenchange',\n  'onFullscreenerror',\n  'onGesturechange',\n  'onGestureend',\n  'onGesturestart',\n  'onGotpointercapture',\n  'onInput',\n  'onKeydown',\n  'onKeypress',\n  'onKeyup',\n  'onLostpointercapture',\n  'onMousedown',\n  'onMousemove',\n  'onMouseout',\n  'onMouseover',\n  'onMouseup',\n  'onMousewheel',\n  'onPaste',\n  'onPointercancel',\n  'onPointerdown',\n  'onPointerenter',\n  'onPointerleave',\n  'onPointermove',\n  'onPointerout',\n  'onPointerover',\n  'onPointerup',\n  'onReset',\n  'onSelect',\n  'onSubmit',\n  'onTouchcancel',\n  'onTouchend',\n  'onTouchmove',\n  'onTouchstart',\n  'onTransitioncancel',\n  'onTransitionend',\n  'onTransitionrun',\n  'onTransitionstart',\n  'onWheel',\n]\n\nconst compositionIgnoreKeys = [\n  'ArrowUp',\n  'ArrowDown',\n  'ArrowRight',\n  'ArrowLeft',\n  'Enter',\n  'Escape',\n  'Tab',\n  ' ',\n]\n\nexport function isComposingIgnoreKey (e: KeyboardEvent): boolean {\n  return e.isComposing && compositionIgnoreKeys.includes(e.key)\n}\n\n/**\n * Filter attributes that should be applied to\n * the root element of an input component. Remaining\n * attributes should be passed to the <input> element inside.\n */\nexport function filterInputAttrs (attrs: Record<string, unknown>) {\n  const [events, props] = pickWithRest(attrs, [onRE])\n  const inputEvents = omit(events, bubblingEvents)\n  const [rootAttrs, inputAttrs] = pickWithRest(props, ['class', 'style', 'id', /^data-/])\n  Object.assign(rootAttrs, events)\n  Object.assign(inputAttrs, inputEvents)\n  return [rootAttrs, inputAttrs]\n}\n\n/**\n * Returns the set difference of B and A, i.e. the set of elements in B but not in A\n */\nexport function arrayDiff (a: any[], b: any[]): any[] {\n  const diff: any[] = []\n  for (let i = 0; i < b.length; i++) {\n    if (!a.includes(b[i])) diff.push(b[i])\n  }\n  return diff\n}\n\ntype IfAny<T, Y, N> = 0 extends (1 & T) ? Y : N;\nexport function wrapInArray<T> (\n  v: T | null | undefined\n): T extends readonly any[]\n    ? IfAny<T, T[], T>\n    : NonNullable<T>[] {\n  return v == null\n    ? []\n    : Array.isArray(v)\n      ? v as any : [v]\n}\n\nexport function defaultFilter (value: any, search: string | null, item: any) {\n  return value != null &&\n    search != null &&\n    typeof value !== 'boolean' &&\n    value.toString().toLocaleLowerCase().indexOf(search.toLocaleLowerCase()) !== -1\n}\n\nexport function debounce (fn: Function, delay: MaybeRef<number>) {\n  let timeoutId = 0 as any\n  const wrap = (...args: any[]) => {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => fn(...args), unref(delay))\n  }\n  wrap.clear = () => {\n    clearTimeout(timeoutId)\n  }\n  wrap.immediate = fn\n  return wrap\n}\n\nexport function throttle<T extends (...args: any[]) => any> (fn: T, limit: number) {\n  let throttling = false\n  return (...args: Parameters<T>): void | ReturnType<T> => {\n    if (!throttling) {\n      throttling = true\n      setTimeout(() => throttling = false, limit)\n      return fn(...args)\n    }\n  }\n}\n\nexport function clamp (value: number, min = 0, max = 1) {\n  return Math.max(min, Math.min(max, value))\n}\n\nexport function getDecimals (value: number) {\n  const trimmedStr = value.toString().trim()\n  return trimmedStr.includes('.')\n    ? (trimmedStr.length - trimmedStr.indexOf('.') - 1)\n    : 0\n}\n\nexport function padEnd (str: string, length: number, char = '0') {\n  return str + char.repeat(Math.max(0, length - str.length))\n}\n\nexport function padStart (str: string, length: number, char = '0') {\n  return char.repeat(Math.max(0, length - str.length)) + str\n}\n\nexport function chunk (str: string, size = 1) {\n  const chunked: string[] = []\n  let index = 0\n  while (index < str.length) {\n    chunked.push(str.substr(index, size))\n    index += size\n  }\n  return chunked\n}\n\nexport function chunkArray (array: any[], size = 1) {\n  return Array.from({ length: Math.ceil(array.length / size) }, (v, i) =>\n    array.slice(i * size, i * size + size)\n  )\n}\n\nexport function humanReadableFileSize (bytes: number, base: 1000 | 1024 = 1000): string {\n  if (bytes < base) {\n    return `${bytes} B`\n  }\n\n  const prefix = base === 1024 ? ['Ki', 'Mi', 'Gi'] : ['k', 'M', 'G']\n  let unit = -1\n  while (Math.abs(bytes) >= base && unit < prefix.length - 1) {\n    bytes /= base\n    ++unit\n  }\n  return `${bytes.toFixed(1)} ${prefix[unit]}B`\n}\n\nexport function mergeDeep (\n  source: Record<string, any> = {},\n  target: Record<string, any> = {},\n  arrayFn?: (a: unknown[], b: unknown[]) => unknown[],\n) {\n  const out: Record<string, any> = {}\n\n  for (const key in source) {\n    out[key] = source[key]\n  }\n\n  for (const key in target) {\n    const sourceProperty = source[key]\n    const targetProperty = target[key]\n\n    // Only continue deep merging if\n    // both properties are plain objects\n    if (isPlainObject(sourceProperty) && isPlainObject(targetProperty)) {\n      out[key] = mergeDeep(sourceProperty, targetProperty, arrayFn)\n\n      continue\n    }\n\n    if (arrayFn && Array.isArray(sourceProperty) && Array.isArray(targetProperty)) {\n      out[key] = arrayFn(sourceProperty, targetProperty)\n\n      continue\n    }\n\n    out[key] = targetProperty\n  }\n\n  return out\n}\n\nexport function flattenFragments (nodes: VNode[]): VNode[] {\n  return nodes.map(node => {\n    if (node.type === Fragment) {\n      return flattenFragments(node.children as VNode[])\n    } else {\n      return node\n    }\n  }).flat()\n}\n\nexport function toKebabCase (str = '') {\n  if (toKebabCase.cache.has(str)) return toKebabCase.cache.get(str)!\n  const kebab = str\n    .replace(/[^a-z]/gi, '-')\n    .replace(/\\B([A-Z])/g, '-$1')\n    .toLowerCase()\n  toKebabCase.cache.set(str, kebab)\n  return kebab\n}\ntoKebabCase.cache = new Map<string, string>()\n\nexport type MaybeRef<T> = T | Ref<T>\n\nexport function findChildrenWithProvide (\n  key: InjectionKey<any> | symbol,\n  vnode?: VNodeChild,\n): ComponentInternalInstance[] {\n  if (!vnode || typeof vnode !== 'object') return []\n\n  if (Array.isArray(vnode)) {\n    return vnode.map(child => findChildrenWithProvide(key, child)).flat(1)\n  } else if (vnode.suspense) {\n    return findChildrenWithProvide(key, vnode.ssContent!)\n  } else if (Array.isArray(vnode.children)) {\n    return vnode.children.map(child => findChildrenWithProvide(key, child)).flat(1)\n  } else if (vnode.component) {\n    if (Object.getOwnPropertySymbols(vnode.component.provides).includes(key as symbol)) {\n      return [vnode.component]\n    } else if (vnode.component.subTree) {\n      return findChildrenWithProvide(key, vnode.component.subTree).flat(1)\n    }\n  }\n\n  return []\n}\n\nexport class CircularBuffer<T = never> {\n  readonly #arr: Array<T> = []\n  #pointer = 0\n\n  constructor (public readonly size: number) {}\n\n  push (val: T) {\n    this.#arr[this.#pointer] = val\n    this.#pointer = (this.#pointer + 1) % this.size\n  }\n\n  values (): T[] {\n    return this.#arr.slice(this.#pointer).concat(this.#arr.slice(0, this.#pointer))\n  }\n}\n\nexport type UnionToIntersection<U> =\n  (U extends any ? (k: U) => void : never) extends ((k: infer I) => void) ? I : never\n\nexport function getEventCoordinates (e: MouseEvent | TouchEvent) {\n  if ('touches' in e) {\n    return { clientX: e.touches[0].clientX, clientY: e.touches[0].clientY }\n  }\n\n  return { clientX: e.clientX, clientY: e.clientY }\n}\n\n// Only allow a single return type\ntype NotAUnion<T> = [T] extends [infer U] ? _NotAUnion<U, U> : never\ntype _NotAUnion<T, U> = U extends any ? [T] extends [U] ? unknown : never : never\n\n/**\n * Convert a computed ref to a record of refs.\n * The getter function must always return an object with the same keys.\n */\nexport function destructComputed<T extends object> (getter: ComputedGetter<T & NotAUnion<T>>): ToRefs<T>\nexport function destructComputed<T extends object> (getter: ComputedGetter<T>) {\n  const refs = reactive({}) as T\n  const base = computed(getter)\n  watchEffect(() => {\n    for (const key in base.value) {\n      refs[key] = base.value[key]\n    }\n  }, { flush: 'sync' })\n  return toRefs(refs)\n}\n\n/** Array.includes but value can be any type */\nexport function includes (arr: readonly any[], val: any) {\n  return arr.includes(val)\n}\n\nexport function eventName (propName: string) {\n  return propName[2].toLowerCase() + propName.slice(3)\n}\n\n// TODO: this should be an array but vue's types don't accept arrays: vuejs/core#8025\nexport type EventProp<T extends any[] = any[], F = (...args: T) => void> = F\nexport const EventProp = <T extends any[] = any[]>() => [Function, Array] as PropType<EventProp<T>>\n\nexport function hasEvent (props: Record<string, any>, name: string) {\n  name = 'on' + capitalize(name)\n  return !!(props[name] || props[`${name}Once`] || props[`${name}Capture`] || props[`${name}OnceCapture`] || props[`${name}CaptureOnce`])\n}\n\nexport function callEvent<T extends any[]> (handler: EventProp<T> | EventProp<T>[] | undefined, ...args: T) {\n  if (Array.isArray(handler)) {\n    for (const h of handler) {\n      h(...args)\n    }\n  } else if (typeof handler === 'function') {\n    handler(...args)\n  }\n}\n\nexport function focusableChildren (el: Element, filterByTabIndex = true) {\n  const targets = ['button', '[href]', 'input:not([type=\"hidden\"])', 'select', 'textarea', '[tabindex]']\n    .map(s => `${s}${filterByTabIndex ? ':not([tabindex=\"-1\"])' : ''}:not([disabled])`)\n    .join(', ')\n  return [...el.querySelectorAll(targets)] as HTMLElement[]\n}\n\nexport function getNextElement (elements: HTMLElement[], location?: 'next' | 'prev', condition?: (el: HTMLElement) => boolean) {\n  let _el\n  let idx = elements.indexOf(document.activeElement as HTMLElement)\n  const inc = location === 'next' ? 1 : -1\n  do {\n    idx += inc\n    _el = elements[idx]\n  } while ((!_el || _el.offsetParent == null || !(condition?.(_el) ?? true)) && idx < elements.length && idx >= 0)\n  return _el\n}\n\nexport function focusChild (el: Element, location?: 'next' | 'prev' | 'first' | 'last' | number) {\n  const focusable = focusableChildren(el)\n\n  if (!location) {\n    if (el === document.activeElement || !el.contains(document.activeElement)) {\n      focusable[0]?.focus()\n    }\n  } else if (location === 'first') {\n    focusable[0]?.focus()\n  } else if (location === 'last') {\n    focusable.at(-1)?.focus()\n  } else if (typeof location === 'number') {\n    focusable[location]?.focus()\n  } else {\n    const _el = getNextElement(focusable, location)\n    if (_el) _el.focus()\n    else focusChild(el, location === 'next' ? 'first' : 'last')\n  }\n}\n\nexport function isEmpty (val: any): boolean {\n  return val === null || val === undefined || (typeof val === 'string' && val.trim() === '')\n}\n\nexport function noop () {}\n\n/** Returns null if the selector is not supported or we can't check */\nexport function matchesSelector (el: Element | undefined, selector: string): boolean | null {\n  const supportsSelector = IN_BROWSER &&\n    typeof CSS !== 'undefined' &&\n    typeof CSS.supports !== 'undefined' &&\n    CSS.supports(`selector(${selector})`)\n\n  if (!supportsSelector) return null\n\n  try {\n    return !!el && el.matches(selector)\n  } catch (err) {\n    return null\n  }\n}\n\nexport function ensureValidVNode (vnodes: VNodeArrayChildren): VNodeArrayChildren | null {\n  return vnodes.some(child => {\n    if (!isVNode(child)) return true\n    if (child.type === Comment) return false\n    return child.type !== Fragment ||\n      ensureValidVNode(child.children as VNodeArrayChildren)\n  })\n    ? vnodes\n    : null\n}\n\nexport function defer (timeout: number, cb: () => void) {\n  if (!IN_BROWSER || timeout === 0) {\n    cb()\n\n    return () => {}\n  }\n\n  const timeoutId = window.setTimeout(cb, timeout)\n\n  return () => window.clearTimeout(timeoutId)\n}\n\nexport function isClickInsideElement (event: MouseEvent, targetDiv: HTMLElement) {\n  const mouseX = event.clientX\n  const mouseY = event.clientY\n\n  const divRect = targetDiv.getBoundingClientRect()\n  const divLeft = divRect.left\n  const divTop = divRect.top\n  const divRight = divRect.right\n  const divBottom = divRect.bottom\n\n  return mouseX >= divLeft && mouseX <= divRight && mouseY >= divTop && mouseY <= divBottom\n}\n\nexport type TemplateRef = {\n  (target: Element | ComponentPublicInstance | null): void\n  value: HTMLElement | ComponentPublicInstance | null | undefined\n  readonly el: HTMLElement | undefined\n}\nexport function templateRef () {\n  const el = shallowRef<HTMLElement | ComponentPublicInstance | null>()\n  const fn = (target: HTMLElement | ComponentPublicInstance | null) => {\n    el.value = target\n  }\n  Object.defineProperty(fn, 'value', {\n    enumerable: true,\n    get: () => el.value,\n    set: val => el.value = val,\n  })\n  Object.defineProperty(fn, 'el', {\n    enumerable: true,\n    get: () => refElement(el.value),\n  })\n\n  return fn as TemplateRef\n}\n\nexport function checkPrintable (e: KeyboardEvent) {\n  const isPrintableChar = e.key.length === 1\n  const noModifier = !e.ctrlKey && !e.metaKey && !e.altKey\n  return isPrintableChar && noModifier\n}\n\nexport type Primitive = string | number | boolean | symbol | bigint\nexport function isPrimitive (value: unknown): value is Primitive {\n  return typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean' || typeof value === 'bigint'\n}\n", "// Utilities\nimport { includes } from '@/util/helpers'\n\nconst block = ['top', 'bottom'] as const\nconst inline = ['start', 'end', 'left', 'right'] as const\ntype Tblock = typeof block[number]\ntype Tinline = typeof inline[number]\nexport type Anchor =\n  | Tblock\n  | Tinline\n  | 'center'\n  | 'center center'\n  | `${Tblock} ${Tinline | 'center'}`\n  | `${Tinline} ${Tblock | 'center'}`\nexport type ParsedAnchor =\n  | { side: 'center', align: 'center' }\n  | { side: Tblock, align: 'left' | 'right' | 'center' }\n  | { side: 'left' | 'right', align: Tblock | 'center' }\n\n/** Parse a raw anchor string into an object */\nexport function parseAnchor (anchor: Anchor, isRtl: boolean) {\n  let [side, align] = anchor.split(' ') as [Tblock | Tinline | 'center', Tblock | Tinline | 'center' | undefined]\n  if (!align) {\n    align =\n      includes(block, side) ? 'start'\n      : includes(inline, side) ? 'top'\n      : 'center'\n  }\n\n  return {\n    side: toPhysical(side, isRtl),\n    align: toPhysical(align, isRtl),\n  } as ParsedAnchor\n}\n\nexport function toPhysical (str: 'center' | Tblock | Tinline, isRtl: boolean) {\n  if (str === 'start') return isRtl ? 'right' : 'left'\n  if (str === 'end') return isRtl ? 'left' : 'right'\n  return str\n}\n\nexport function flipSide (anchor: ParsedAnchor) {\n  return {\n    side: {\n      center: 'center',\n      top: 'bottom',\n      bottom: 'top',\n      left: 'right',\n      right: 'left',\n    }[anchor.side],\n    align: anchor.align,\n  } as ParsedAnchor\n}\n\nexport function flipAlign (anchor: ParsedAnchor) {\n  return {\n    side: anchor.side,\n    align: {\n      center: 'center',\n      top: 'bottom',\n      bottom: 'top',\n      left: 'right',\n      right: 'left',\n    }[anchor.align],\n  } as ParsedAnchor\n}\n\nexport function flipCorner (anchor: ParsedAnchor) {\n  return {\n    side: anchor.align,\n    align: anchor.side,\n  } as ParsedAnchor\n}\n\nexport function getAxis (anchor: ParsedAnchor) {\n  return includes(block, anchor.side) ? 'y' : 'x'\n}\n", "export class Box {\n  x: number\n  y: number\n  width: number\n  height: number\n\n  constructor ({ x, y, width, height }: {\n    x: number\n    y: number\n    width: number\n    height: number\n  }) {\n    this.x = x\n    this.y = y\n    this.width = width\n    this.height = height\n  }\n\n  get top () { return this.y }\n  get bottom () { return this.y + this.height }\n  get left () { return this.x }\n  get right () { return this.x + this.width }\n}\n\nexport function getOverflow (a: Box, b: Box) {\n  return {\n    x: {\n      before: Math.max(0, b.left - a.left),\n      after: Math.max(0, a.right - b.right),\n    },\n    y: {\n      before: Math.max(0, b.top - a.top),\n      after: Math.max(0, a.bottom - b.bottom),\n    },\n  }\n}\n\nexport function getTargetBox (target: HTMLElement | [x: number, y: number]) {\n  if (Array.isArray(target)) {\n    return new Box({\n      x: target[0],\n      y: target[1],\n      width: 0,\n      height: 0,\n    })\n  } else {\n    return target.getBoundingClientRect()\n  }\n}\n", "// Utilities\nimport { Box } from '@/util/box'\n\n/** @see https://stackoverflow.com/a/57876601/2074736 */\nexport function nullifyTransforms (el: HTMLElement): Box {\n  const rect = el.getBoundingClientRect()\n  const style = getComputedStyle(el)\n  const tx = style.transform\n\n  if (tx) {\n    let ta, sx, sy, dx, dy\n    if (tx.startsWith('matrix3d(')) {\n      ta = tx.slice(9, -1).split(/, /)\n      sx = Number(ta[0])\n      sy = Number(ta[5])\n      dx = Number(ta[12])\n      dy = Number(ta[13])\n    } else if (tx.startsWith('matrix(')) {\n      ta = tx.slice(7, -1).split(/, /)\n      sx = Number(ta[0])\n      sy = Number(ta[3])\n      dx = Number(ta[4])\n      dy = Number(ta[5])\n    } else {\n      return new Box(rect)\n    }\n\n    const to = style.transformOrigin\n    const x = rect.x - dx - (1 - sx) * parseFloat(to)\n    const y = rect.y - dy - (1 - sy) * parseFloat(to.slice(to.indexOf(' ') + 1))\n    const w = sx ? rect.width / sx : el.offsetWidth + 1\n    const h = sy ? rect.height / sy : el.offsetHeight + 1\n\n    return new Box({ x, y, width: w, height: h })\n  } else {\n    return new Box(rect)\n  }\n}\n\nexport function animate (\n  el: Element,\n  keyframes: Keyframe[] | PropertyIndexedKeyframes | null,\n  options?: number | KeyframeAnimationOptions\n) {\n  if (typeof el.animate === 'undefined') return { finished: Promise.resolve() }\n\n  let animation: Animation\n  try {\n    animation = el.animate(keyframes, options)\n  } catch (err) {\n    return { finished: Promise.resolve() }\n  }\n\n  if (typeof animation.finished === 'undefined') {\n    (animation as any).finished = new Promise(resolve => {\n      animation.onfinish = () => {\n        resolve(animation)\n      }\n    })\n  }\n\n  return animation\n}\n", "/**\n * WCAG 3.0 APCA perceptual contrast algorithm from https://github.com/Myndex/SAPC-APCA\n * @licence https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n * @see https://www.w3.org/WAI/GL/task-forces/silver/wiki/Visual_Contrast_of_Text_Subgroup\n */\n// Types\nimport type { RGB } from '@/util'\n\n// MAGICAL NUMBERS\n\n// sRGB Conversion to Relative Luminance (Y)\n\n// Transfer Curve (aka \"Gamma\") for sRGB linearization\n// Simple power curve vs piecewise described in docs\n// Essentially, 2.4 best models actual display\n// characteristics in combination with the total method\nconst mainTRC = 2.4\n\nconst Rco = 0.2126729 // sRGB Red Coefficient (from matrix)\nconst Gco = 0.7151522 // sRGB Green Coefficient (from matrix)\nconst Bco = 0.0721750 // sRGB Blue Coefficient (from matrix)\n\n// For Finding Raw SAPC Contrast from Relative Luminance (Y)\n\n// Constants for SAPC Power Curve Exponents\n// One pair for normal text, and one for reverse\n// These are the \"beating heart\" of SAPC\nconst normBG = 0.55\nconst normTXT = 0.58\nconst revTXT = 0.57\nconst revBG = 0.62\n\n// For Clamping and Scaling Values\n\nconst blkThrs = 0.03 // Level that triggers the soft black clamp\nconst blkClmp = 1.45 // Exponent for the soft black clamp curve\nconst deltaYmin = 0.0005 // Lint trap\nconst scaleBoW = 1.25 // Scaling for dark text on light\nconst scaleWoB = 1.25 // Scaling for light text on dark\nconst loConThresh = 0.078 // Threshold for new simple offset scale\nconst loConFactor = 12.82051282051282 // = 1/0.078,\nconst loConOffset = 0.06 // The simple offset\nconst loClip = 0.001 // Output clip (lint trap #2)\n\nexport function APCAcontrast (text: RGB, background: RGB) {\n  // Linearize sRGB\n  const Rtxt = (text.r / 255) ** mainTRC\n  const Gtxt = (text.g / 255) ** mainTRC\n  const Btxt = (text.b / 255) ** mainTRC\n\n  const Rbg = (background.r / 255) ** mainTRC\n  const Gbg = (background.g / 255) ** mainTRC\n  const Bbg = (background.b / 255) ** mainTRC\n\n  // Apply the standard coefficients and sum to Y\n  let Ytxt = (Rtxt * Rco) + (Gtxt * Gco) + (Btxt * Bco)\n  let Ybg = (Rbg * Rco) + (Gbg * Gco) + (Bbg * Bco)\n\n  // Soft clamp Y when near black.\n  // Now clamping all colors to prevent crossover errors\n  if (Ytxt <= blkThrs) Ytxt += (blkThrs - Ytxt) ** blkClmp\n  if (Ybg <= blkThrs) Ybg += (blkThrs - Ybg) ** blkClmp\n\n  // Return 0 Early for extremely low ∆Y (lint trap #1)\n  if (Math.abs(Ybg - Ytxt) < deltaYmin) return 0.0\n\n  // SAPC CONTRAST\n\n  let outputContrast: number // For weighted final values\n  if (Ybg > Ytxt) {\n    // For normal polarity, black text on white\n    // Calculate the SAPC contrast value and scale\n\n    const SAPC = ((Ybg ** normBG) - (Ytxt ** normTXT)) * scaleBoW\n\n    // NEW! SAPC SmoothScale™\n    // Low Contrast Smooth Scale Rollout to prevent polarity reversal\n    // and also a low clip for very low contrasts (lint trap #2)\n    // much of this is for very low contrasts, less than 10\n    // therefore for most reversing needs, only loConOffset is important\n    outputContrast =\n      (SAPC < loClip) ? 0.0\n      : (SAPC < loConThresh) ? SAPC - SAPC * loConFactor * loConOffset\n      : SAPC - loConOffset\n  } else {\n    // For reverse polarity, light text on dark\n    // WoB should always return negative value.\n\n    const SAPC = ((Ybg ** revBG) - (Ytxt ** revTXT)) * scaleWoB\n\n    outputContrast =\n      (SAPC > -loClip) ? 0.0\n      : (SAPC > -loConThresh) ? SAPC - SAPC * loConFactor * loConOffset\n      : SAPC + loConOffset\n  }\n\n  return outputContrast * 100\n}\n", "/* eslint-disable no-console */\n\n// Utilities\nimport { warn } from 'vue'\n\nexport function consoleWarn (message: string): void {\n  warn(`Vuetify: ${message}`)\n}\n\nexport function consoleError (message: string): void {\n  warn(`Vuetify error: ${message}`)\n}\n\nexport function deprecate (original: string, replacement: string | string[]) {\n  replacement = Array.isArray(replacement)\n    ? replacement.slice(0, -1).map(s => `'${s}'`).join(', ') + ` or '${replacement.at(-1)}'`\n    : `'${replacement}'`\n  warn(`[Vuetify UPGRADE] '${original}' is deprecated, use ${replacement} instead.`)\n}\nexport function breaking (original: string, replacement: string) {\n  // warn(`[Vuetify BREAKING] '${original}' has been removed, use '${replacement}' instead. For more information, see the upgrade guide https://github.com/vuetifyjs/vuetify/releases/tag/v2.0.0#user-content-upgrade-guide`)\n}\nexport function removed (original: string) {\n  // warn(`[Vuetify REMOVED] '${original}' has been removed. You can safely omit it.`)\n}\n", "// Utilities\nimport { APCAcontrast } from './color/APCA'\nimport { consoleWarn } from './console'\nimport { chunk, has, padEnd } from './helpers'\nimport * as CIELAB from '@/util/color/transformCIELAB'\nimport * as sRGB from '@/util/color/transformSRGB'\n\n// Types\nimport type { Colors } from '@/composables/theme'\n\nexport type XYZ = [number, number, number]\nexport type LAB = [number, number, number]\nexport type HSV = { h: number, s: number, v: number, a?: number }\nexport type RGB = { r: number, g: number, b: number, a?: number }\nexport type HSL = { h: number, s: number, l: number, a?: number }\nexport type Hex = string & { __hexBrand: never }\nexport type Color = string | number | HSV | RGB | HSL\n\nexport function isCssColor (color?: string | null | false): boolean {\n  return !!color && /^(#|var\\(--|(rgb|hsl)a?\\()/.test(color)\n}\n\nexport function isParsableColor (color: string): boolean {\n  return isCssColor(color) && !/^((rgb|hsl)a?\\()?var\\(--/.test(color)\n}\n\nconst cssColorRe = /^(?<fn>(?:rgb|hsl)a?)\\((?<values>.+)\\)/\nconst mappers = {\n  rgb: (r: number, g: number, b: number, a?: number) => ({ r, g, b, a }),\n  rgba: (r: number, g: number, b: number, a?: number) => ({ r, g, b, a }),\n  hsl: (h: number, s: number, l: number, a?: number) => HSLtoRGB({ h, s, l, a }),\n  hsla: (h: number, s: number, l: number, a?: number) => HSLtoRGB({ h, s, l, a }),\n  hsv: (h: number, s: number, v: number, a?: number) => HSVtoRGB({ h, s, v, a }),\n  hsva: (h: number, s: number, v: number, a?: number) => HSVtoRGB({ h, s, v, a }),\n}\n\nexport function parseColor (color: Color): RGB {\n  if (typeof color === 'number') {\n    if (isNaN(color) || color < 0 || color > 0xFFFFFF) { // int can't have opacity\n      consoleWarn(`'${color}' is not a valid hex color`)\n    }\n\n    return {\n      r: (color & 0xFF0000) >> 16,\n      g: (color & 0xFF00) >> 8,\n      b: (color & 0xFF),\n    }\n  } else if (typeof color === 'string' && cssColorRe.test(color)) {\n    const { groups } = color.match(cssColorRe)!\n    const { fn, values } = groups as { fn: keyof typeof mappers, values: string }\n    const realValues = values.split(/,\\s*|\\s*\\/\\s*|\\s+/)\n      .map((v, i) => {\n        if (\n          v.endsWith('%') ||\n          // unitless slv are %\n          (i > 0 && i < 3 && ['hsl', 'hsla', 'hsv', 'hsva'].includes(fn))\n        ) {\n          return parseFloat(v) / 100\n        } else {\n          return parseFloat(v)\n        }\n      }) as [number, number, number, number?]\n\n    return mappers[fn](...realValues)\n  } else if (typeof color === 'string') {\n    let hex = color.startsWith('#') ? color.slice(1) : color\n\n    if ([3, 4].includes(hex.length)) {\n      hex = hex.split('').map(char => char + char).join('')\n    } else if (![6, 8].includes(hex.length)) {\n      consoleWarn(`'${color}' is not a valid hex(a) color`)\n    }\n\n    const int = parseInt(hex, 16)\n    if (isNaN(int) || int < 0 || int > 0xFFFFFFFF) {\n      consoleWarn(`'${color}' is not a valid hex(a) color`)\n    }\n\n    return HexToRGB(hex as Hex)\n  } else if (typeof color === 'object') {\n    if (has(color, ['r', 'g', 'b'])) {\n      return color\n    } else if (has(color, ['h', 's', 'l'])) {\n      return HSVtoRGB(HSLtoHSV(color))\n    } else if (has(color, ['h', 's', 'v'])) {\n      return HSVtoRGB(color)\n    }\n  }\n\n  throw new TypeError(`Invalid color: ${color == null ? color : (String(color) || (color as any).constructor.name)}\\nExpected #hex, #hexa, rgb(), rgba(), hsl(), hsla(), object or number`)\n}\n\nexport function RGBToInt (color: RGB) {\n  return (color.r << 16) + (color.g << 8) + color.b\n}\n\nexport function classToHex (\n  color: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<Colors>,\n): string {\n  const [colorName, colorModifier] = color\n    .toString().trim().replace('-', '').split(' ', 2) as (string | undefined)[]\n\n  let hexColor = ''\n  if (colorName && colorName in colors) {\n    if (colorModifier && colorModifier in colors[colorName]) {\n      hexColor = colors[colorName][colorModifier]\n    } else if ('base' in colors[colorName]) {\n      hexColor = colors[colorName].base\n    }\n  } else if (colorName && colorName in currentTheme) {\n    hexColor = currentTheme[colorName] as string\n  }\n\n  return hexColor\n}\n\n/** Converts HSVA to RGBA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */\nexport function HSVtoRGB (hsva: HSV): RGB {\n  const { h, s, v, a } = hsva\n  const f = (n: number) => {\n    const k = (n + (h / 60)) % 6\n    return v - v * s * Math.max(Math.min(k, 4 - k, 1), 0)\n  }\n\n  const rgb = [f(5), f(3), f(1)].map(v => Math.round(v * 255))\n\n  return { r: rgb[0], g: rgb[1], b: rgb[2], a }\n}\n\nexport function HSLtoRGB (hsla: HSL): RGB {\n  return HSVtoRGB(HSLtoHSV(hsla))\n}\n\n/** Converts RGBA to HSVA. Based on formula from https://en.wikipedia.org/wiki/HSL_and_HSV */\nexport function RGBtoHSV (rgba: RGB): HSV {\n  if (!rgba) return { h: 0, s: 1, v: 1, a: 1 }\n\n  const r = rgba.r / 255\n  const g = rgba.g / 255\n  const b = rgba.b / 255\n  const max = Math.max(r, g, b)\n  const min = Math.min(r, g, b)\n\n  let h = 0\n\n  if (max !== min) {\n    if (max === r) {\n      h = 60 * (0 + ((g - b) / (max - min)))\n    } else if (max === g) {\n      h = 60 * (2 + ((b - r) / (max - min)))\n    } else if (max === b) {\n      h = 60 * (4 + ((r - g) / (max - min)))\n    }\n  }\n\n  if (h < 0) h = h + 360\n\n  const s = max === 0 ? 0 : (max - min) / max\n  const hsv = [h, s, max]\n\n  return { h: hsv[0], s: hsv[1], v: hsv[2], a: rgba.a }\n}\n\nexport function HSVtoHSL (hsva: HSV): HSL {\n  const { h, s, v, a } = hsva\n\n  const l = v - (v * s / 2)\n\n  const sprime = l === 1 || l === 0 ? 0 : (v - l) / Math.min(l, 1 - l)\n\n  return { h, s: sprime, l, a }\n}\n\nexport function HSLtoHSV (hsl: HSL): HSV {\n  const { h, s, l, a } = hsl\n\n  const v = l + s * Math.min(l, 1 - l)\n\n  const sprime = v === 0 ? 0 : 2 - (2 * l / v)\n\n  return { h, s: sprime, v, a }\n}\n\nexport function RGBtoCSS ({ r, g, b, a }: RGB): string {\n  return a === undefined ? `rgb(${r}, ${g}, ${b})` : `rgba(${r}, ${g}, ${b}, ${a})`\n}\n\nexport function HSVtoCSS (hsva: HSV): string {\n  return RGBtoCSS(HSVtoRGB(hsva))\n}\n\nfunction toHex (v: number) {\n  const h = Math.round(v).toString(16)\n  return ('00'.substr(0, 2 - h.length) + h).toUpperCase()\n}\n\nexport function RGBtoHex ({ r, g, b, a }: RGB): Hex {\n  return `#${[\n    toHex(r),\n    toHex(g),\n    toHex(b),\n    a !== undefined ? toHex(Math.round(a * 255)) : '',\n  ].join('')}` as Hex\n}\n\nexport function HexToRGB (hex: Hex): RGB {\n  hex = parseHex(hex)\n  let [r, g, b, a] = chunk(hex, 2).map((c: string) => parseInt(c, 16))\n  a = a === undefined ? a : (a / 255)\n\n  return { r, g, b, a }\n}\n\nexport function HexToHSV (hex: Hex): HSV {\n  const rgb = HexToRGB(hex)\n  return RGBtoHSV(rgb)\n}\n\nexport function HSVtoHex (hsva: HSV): Hex {\n  return RGBtoHex(HSVtoRGB(hsva))\n}\n\nexport function parseHex (hex: string): Hex {\n  if (hex.startsWith('#')) {\n    hex = hex.slice(1)\n  }\n\n  hex = hex.replace(/([^0-9a-f])/gi, 'F')\n\n  if (hex.length === 3 || hex.length === 4) {\n    hex = hex.split('').map(x => x + x).join('')\n  }\n\n  if (hex.length !== 6) {\n    hex = padEnd(padEnd(hex, 6), 8, 'F')\n  }\n\n  return hex as Hex\n}\n\nexport function parseGradient (\n  gradient: string,\n  colors: Record<string, Record<string, string>>,\n  currentTheme: Partial<Colors>,\n) {\n  return gradient.replace(/([a-z]+(\\s[a-z]+-[1-5])?)(?=$|,)/gi, x => {\n    return classToHex(x, colors, currentTheme) || x\n  }).replace(/(rgba\\()#[0-9a-f]+(?=,)/gi, x => {\n    return 'rgba(' + Object.values(HexToRGB(parseHex(x.replace(/rgba\\(/, '')))).slice(0, 3).join(',')\n  })\n}\n\nexport function lighten (value: RGB, amount: number): RGB {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] + amount * 10\n\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab))\n}\n\nexport function darken (value: RGB, amount: number): RGB {\n  const lab = CIELAB.fromXYZ(sRGB.toXYZ(value))\n  lab[0] = lab[0] - amount * 10\n\n  return sRGB.fromXYZ(CIELAB.toXYZ(lab))\n}\n\n/**\n * Calculate the relative luminance of a given color\n * @see https://www.w3.org/TR/WCAG20/#relativeluminancedef\n */\nexport function getLuma (color: Color) {\n  const rgb = parseColor(color)\n\n  return sRGB.toXYZ(rgb)[1]\n}\n\n/**\n * Returns the contrast ratio (1-21) between two colors.\n * @see https://www.w3.org/TR/WCAG20/#contrast-ratiodef\n */\nexport function getContrast (first: Color, second: Color) {\n  const l1 = getLuma(first)\n  const l2 = getLuma(second)\n\n  const light = Math.max(l1, l2)\n  const dark = Math.min(l1, l2)\n\n  return (light + 0.05) / (dark + 0.05)\n}\n\nexport function getForeground (color: Color) {\n  const blackContrast = Math.abs(APCAcontrast(parseColor(0), parseColor(color)))\n  const whiteContrast = Math.abs(APCAcontrast(parseColor(0xffffff), parseColor(color)))\n\n  // TODO: warn about poor color selections\n  // const contrastAsText = Math.abs(APCAcontrast(colorVal, colorToInt(theme.colors.background)))\n  // const minContrast = Math.max(blackContrast, whiteContrast)\n  // if (minContrast < 60) {\n  //   consoleInfo(`${key} theme color ${color} has poor contrast (${minContrast.toFixed()}%)`)\n  // } else if (contrastAsText < 60 && !['background', 'surface'].includes(color)) {\n  //   consoleInfo(`${key} theme color ${color} has poor contrast as text (${contrastAsText.toFixed()}%)`)\n  // }\n\n  // Prefer white text if both have an acceptable contrast ratio\n  return whiteContrast > Math.min(blackContrast, 50) ? '#fff' : '#000'\n}\n", "// Types\nimport type { IfAny } from '@vue/shared' // eslint-disable-line vue/prefer-import-from-vue\nimport type { ComponentObjectPropsOptions, Prop, PropType } from 'vue'\n\n/**\n * Creates a factory function for props definitions.\n * This is used to define props in a composable then override\n * default values in an implementing component.\n *\n * @example Simplified signature\n * (props: Props) => (defaults?: Record<keyof props, any>) => Props\n *\n * @example Usage\n * const makeProps = propsFactory({\n *   foo: String,\n * })\n *\n * defineComponent({\n *   props: {\n *     ...makeProps({\n *       foo: 'a',\n *     }),\n *   },\n *   setup (props) {\n *     // would be \"string | undefined\", now \"string\" because a default has been provided\n *     props.foo\n *   },\n * }\n */\n\nexport function propsFactory<\n  PropsOptions extends ComponentObjectPropsOptions\n> (props: PropsOptions, source: string) {\n  return <Defaults extends PartialKeys<PropsOptions> = {}>(\n    defaults?: Defaults\n  ): AppendDefault<PropsOptions, Defaults> => {\n    return Object.keys(props).reduce<any>((obj, prop) => {\n      const isObjectDefinition = typeof props[prop] === 'object' && props[prop] != null && !Array.isArray(props[prop])\n      const definition = isObjectDefinition ? props[prop] : { type: props[prop] }\n\n      if (defaults && prop in defaults) {\n        obj[prop] = {\n          ...definition,\n          default: defaults[prop],\n        }\n      } else {\n        obj[prop] = definition\n      }\n\n      if (source && !obj[prop].source) {\n        obj[prop].source = source\n      }\n\n      return obj\n    }, {})\n  }\n}\n\ntype AppendDefault<T extends ComponentObjectPropsOptions, D extends PartialKeys<T>> = {\n  [P in keyof T]-?: unknown extends D[P]\n    ? T[P]\n    : T[P] extends Record<string, unknown>\n      ? Omit<T[P], 'type' | 'default'> & {\n        type: PropType<MergeTypeDefault<T[P], D[P]>>\n        default: MergeDefault<T[P], D[P]>\n      }\n      : {\n        type: PropType<MergeTypeDefault<T[P], D[P]>>\n        default: MergeDefault<T[P], D[P]>\n      }\n}\n\ntype MergeTypeDefault<T, D, P = InferPropType<T>> = unknown extends D\n  ? P\n  : (P | D)\ntype MergeDefault<T, D, P = InferPropType<T>> = unknown extends D\n  ? P\n  : (NonNullable<P> | D)\n\n/**\n * Like `Partial<T>` but doesn't care what the value is\n */\ntype PartialKeys<T> = { [P in keyof T]?: unknown }\n\n// Copied from Vue\ntype InferPropType<T> = [T] extends [null]\n  ? any // null & true would fail to infer\n  : [T] extends [{ type: null | true }]\n    // As TS issue https://github.com/Microsoft/TypeScript/issues/14829\n    // somehow `ObjectConstructor` when inferred from { (): T } becomes `any`\n    // `BooleanConstructor` when inferred from PropConstructor(with PropMethod) becomes `Boolean`\n    ? any\n    : [T] extends [ObjectConstructor | { type: ObjectConstructor }]\n      ? Record<string, any>\n      : [T] extends [BooleanConstructor | { type: BooleanConstructor }]\n        ? boolean\n        : [T] extends [DateConstructor | { type: DateConstructor }]\n          ? Date\n          : [T] extends [(infer U)[] | { type: (infer U)[] }]\n            ? U extends DateConstructor\n              ? Date | InferPropType<U>\n              : InferPropType<U>\n            : [T] extends [Prop<infer V, infer D>]\n              ? unknown extends V\n                ? IfAny<V, V, D>\n                : V\n              : T\n", "// Utilities\nimport { propsFactory } from '@/util/propsFactory'\n\n// Types\nimport type { PropType, StyleValue } from 'vue'\n\nexport type ClassValue = any\n\nexport interface ComponentProps {\n  class: ClassValue\n  style: StyleValue | undefined\n}\n\n// Composables\nexport const makeComponentProps = propsFactory({\n  class: [String, Array, Object] as PropType<ClassValue>,\n  style: {\n    type: [String, Array, Object] as PropType<StyleValue>,\n    default: null,\n  },\n}, 'component')\n", "// Utilities\nimport { getCurrentInstance as _getCurrentInstance } from 'vue'\nimport { toKebabCase } from '@/util/helpers'\n\nexport function getCurrentInstance (name: string, message?: string) {\n  const vm = _getCurrentInstance()\n\n  if (!vm) {\n    throw new Error(`[Vuetify] ${name} ${message || 'must be called from inside a setup function'}`)\n  }\n\n  return vm\n}\n\nexport function getCurrentInstanceName (name = 'composables') {\n  const vm = getCurrentInstance(name).type\n\n  return toKebabCase(vm?.aliasName || vm?.name)\n}\n", "// Utilities\nimport { getCurrentInstance } from '@/util/getCurrentInstance'\n\n// Types\nimport type { ComponentInternalInstance, InjectionKey } from 'vue'\n\nexport function injectSelf<T>(key: InjectionKey<T> | string, vm?: ComponentInternalInstance): T | undefined\nexport function injectSelf (key: InjectionKey<any> | string, vm = getCurrentInstance('injectSelf')) {\n  const { provides } = vm\n\n  if (provides && (key as string | symbol) in provides) {\n    // TS doesn't allow symbol as index type\n    return provides[key as string]\n  }\n  return undefined\n}\n", "// Utilities\nimport { computed, inject, provide, ref, shallowRef, unref, watchEffect } from 'vue'\nimport { getCurrentInstance } from '@/util/getCurrentInstance'\nimport { mergeDeep, toKebabCase } from '@/util/helpers'\nimport { injectSelf } from '@/util/injectSelf'\n\n// Types\nimport type { ComputedRef, InjectionKey, Ref, VNode } from 'vue'\nimport type { MaybeRef } from '@/util'\n\nexport type DefaultsInstance = undefined | {\n  [key: string]: undefined | Record<string, unknown>\n  global?: Record<string, unknown>\n}\n\nexport type DefaultsOptions = Partial<DefaultsInstance>\n\nexport const DefaultsSymbol: InjectionKey<Ref<DefaultsInstance>> = Symbol.for('vuetify:defaults')\n\nexport function createDefaults (options?: DefaultsInstance): Ref<DefaultsInstance> {\n  return ref(options)\n}\n\nexport function injectDefaults () {\n  const defaults = inject(DefaultsSymbol)\n\n  if (!defaults) throw new Error('[Vuetify] Could not find defaults instance')\n\n  return defaults\n}\n\nexport function provideDefaults (\n  defaults?: MaybeRef<DefaultsInstance | undefined>,\n  options?: {\n    disabled?: MaybeRef<boolean | undefined>\n    reset?: MaybeRef<number | string | undefined>\n    root?: MaybeRef<boolean | string | undefined>\n    scoped?: MaybeRef<boolean | undefined>\n  }\n) {\n  const injectedDefaults = injectDefaults()\n  const providedDefaults = ref(defaults)\n\n  const newDefaults = computed(() => {\n    const disabled = unref(options?.disabled)\n\n    if (disabled) return injectedDefaults.value\n\n    const scoped = unref(options?.scoped)\n    const reset = unref(options?.reset)\n    const root = unref(options?.root)\n\n    if (providedDefaults.value == null && !(scoped || reset || root)) return injectedDefaults.value\n\n    let properties = mergeDeep(providedDefaults.value, { prev: injectedDefaults.value })\n\n    if (scoped) return properties\n\n    if (reset || root) {\n      const len = Number(reset || Infinity)\n\n      for (let i = 0; i <= len; i++) {\n        if (!properties || !('prev' in properties)) {\n          break\n        }\n\n        properties = properties.prev\n      }\n\n      if (properties && typeof root === 'string' && root in properties) {\n        properties = mergeDeep(mergeDeep(properties, { prev: properties }), properties[root])\n      }\n\n      return properties\n    }\n\n    return properties.prev\n      ? mergeDeep(properties.prev, properties)\n      : properties\n  }) as ComputedRef<DefaultsInstance>\n\n  provide(DefaultsSymbol, newDefaults)\n\n  return newDefaults\n}\n\nfunction propIsDefined (vnode: VNode, prop: string) {\n  return typeof vnode.props?.[prop] !== 'undefined' ||\n    typeof vnode.props?.[toKebabCase(prop)] !== 'undefined'\n}\n\nexport function internalUseDefaults (\n  props: Record<string, any> = {},\n  name?: string,\n  defaults = injectDefaults()\n) {\n  const vm = getCurrentInstance('useDefaults')\n\n  name = name ?? vm.type.name ?? vm.type.__name\n  if (!name) {\n    throw new Error('[Vuetify] Could not determine component name')\n  }\n\n  const componentDefaults = computed(() => defaults.value?.[props._as ?? name])\n  const _props = new Proxy(props, {\n    get (target, prop) {\n      const propValue = Reflect.get(target, prop)\n      if (prop === 'class' || prop === 'style') {\n        return [componentDefaults.value?.[prop], propValue].filter(v => v != null)\n      } else if (typeof prop === 'string' && !propIsDefined(vm.vnode, prop)) {\n        return componentDefaults.value?.[prop] !== undefined ? componentDefaults.value?.[prop]\n          : defaults.value?.global?.[prop] !== undefined ? defaults.value?.global?.[prop]\n          : propValue\n      }\n      return propValue\n    },\n  })\n\n  const _subcomponentDefaults = shallowRef()\n  watchEffect(() => {\n    if (componentDefaults.value) {\n      const subComponents = Object.entries(componentDefaults.value).filter(([key]) => key.startsWith(key[0].toUpperCase()))\n      _subcomponentDefaults.value = subComponents.length ? Object.fromEntries(subComponents) : undefined\n    } else {\n      _subcomponentDefaults.value = undefined\n    }\n  })\n\n  function provideSubDefaults () {\n    const injected = injectSelf(DefaultsSymbol, vm)\n    provide(DefaultsSymbol, computed(() => {\n      return _subcomponentDefaults.value ? mergeDeep(\n        injected?.value ?? {},\n        _subcomponentDefaults.value\n      ) : injected?.value\n    }))\n  }\n\n  return { props: _props, provideSubDefaults }\n}\n\nexport function useDefaults<T extends Record<string, any>> (props: T, name?: string): T\nexport function useDefaults (props?: undefined, name?: string): Record<string, any>\nexport function useDefaults (\n  props: Record<string, any> = {},\n  name?: string,\n) {\n  const { props: _props, provideSubDefaults } = internalUseDefaults(props, name)\n  provideSubDefaults()\n  return _props\n}\n", "// Composables\nimport { injectDefaults, internalUseDefaults } from '@/composables/defaults'\n\n// Utilities\nimport {\n  defineComponent as _defineComponent, // eslint-disable-line no-restricted-imports\n} from 'vue'\nimport { consoleWarn } from '@/util/console'\nimport { pick } from '@/util/helpers'\nimport { propsFactory } from '@/util/propsFactory'\n\n// Types\nimport type {\n  AllowedComponentProps,\n  Component,\n  ComponentCustomProps,\n  ComponentInjectOptions,\n  ComponentObjectPropsOptions,\n  ComponentOptions,\n  ComponentOptionsMixin,\n  ComponentOptionsWithObjectProps,\n  ComponentOptionsWithoutProps,\n  ComponentPropsOptions,\n  ComponentPublicInstance,\n  ComputedOptions,\n  DefineComponent,\n  EmitsOptions,\n  ExtractDefaultPropTypes,\n  ExtractPropTypes,\n  FunctionalComponent,\n  MethodOptions,\n  ObjectEmitsOptions,\n  SlotsType,\n  VNode,\n  VNodeChild,\n  VNodeProps,\n} from 'vue'\n\n// No props\nexport function defineComponent<\n  Props = {},\n  RawBindings = {},\n  D = {},\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = {},\n  EE extends string = string,\n  I extends {} = {},\n  II extends string = string,\n  S extends SlotsType = {},\n>(\n  options: ComponentOptionsWithoutProps<\n    Props,\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    EE,\n    I,\n    II,\n    S\n  >\n): DefineComponent<Props, RawBindings, D, C, M, Mixin, Extends, E, EE>\n\n// Object Props\nexport function defineComponent<\n  PropsOptions extends Readonly<ComponentPropsOptions>,\n  RawBindings,\n  D,\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = {},\n  EE extends string = string,\n  I extends {} = {},\n  II extends string = string,\n  S extends SlotsType = {},\n>(\n  options: ComponentOptionsWithObjectProps<\n    PropsOptions,\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    E,\n    EE,\n    I,\n    II,\n    S\n  >\n): DefineComponent<PropsOptions, RawBindings, D, C, M, Mixin, Extends, E, EE> & FilterPropsOptions<PropsOptions>\n\n// Implementation\nexport function defineComponent (options: ComponentOptions) {\n  options._setup = options._setup ?? options.setup\n\n  if (!options.name) {\n    consoleWarn('The component is missing an explicit name, unable to generate default prop value')\n\n    return options\n  }\n\n  if (options._setup) {\n    options.props = propsFactory(options.props ?? {}, options.name)()\n    const propKeys = Object.keys(options.props).filter(key => key !== 'class' && key !== 'style')\n    options.filterProps = function filterProps (props: Record<string, any>) {\n      return pick(props, propKeys)\n    }\n\n    options.props._as = String\n    options.setup = function setup (props: Record<string, any>, ctx) {\n      const defaults = injectDefaults()\n\n      // Skip props proxy if defaults are not provided\n      if (!defaults.value) return options._setup(props, ctx)\n\n      const { props: _props, provideSubDefaults } = internalUseDefaults(props, props._as ?? options.name, defaults)\n\n      const setupBindings = options._setup(_props, ctx)\n\n      provideSubDefaults()\n\n      return setupBindings\n    }\n  }\n\n  return options\n}\n\ntype ToListeners<T extends string | number | symbol> = { [K in T]: K extends `on${infer U}` ? Uncapitalize<U> : K }[T]\n\nexport type SlotsToProps<\n  U extends RawSlots,\n  T = MakeInternalSlots<U>\n> = {\n  $children?: (\n    | VNodeChild\n    | (T extends { default: infer V } ? V : {})\n    | { [K in keyof T]?: T[K] }\n  )\n  'v-slots'?: { [K in keyof T]?: T[K] | false }\n} & {\n  [K in keyof T as `v-slot:${K & string}`]?: T[K] | false\n}\n\ntype RawSlots = Record<string, unknown>\ntype Slot<T> = [T] extends [never] ? () => VNodeChild : (arg: T) => VNodeChild\ntype VueSlot<T> = [T] extends [never] ? () => VNode[] : (arg: T) => VNode[]\ntype MakeInternalSlots<T extends RawSlots> = {\n  [K in keyof T]: Slot<T[K]>\n}\ntype MakeSlots<T extends RawSlots> = {\n  [K in keyof T]: VueSlot<T[K]>\n}\n\nexport type GenericProps<Props, Slots extends Record<string, unknown>> = {\n  $props: Props & SlotsToProps<Slots>\n  $slots: MakeSlots<Slots>\n}\n\ntype DefineComponentWithGenericProps<T extends (new (props: Record<string, any>, slots: RawSlots) => {\n  $props?: Record<string, any>\n})> = <\n  PropsOptions extends Readonly<ComponentObjectPropsOptions>,\n  RawBindings,\n  D,\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = Record<string, any>,\n  EE extends string = string,\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  // Slots extends RawSlots = ConstructorParameters<T> extends [any, infer SS extends RawSlots | undefined] ? Exclude<SS, undefined> : {},\n  Slots extends RawSlots = ConstructorParameters<T>[1],\n  S extends SlotsType = SlotsType<Partial<MakeSlots<Slots>>>,\n  III = InstanceType<T>,\n  P = III extends Record<'$props', any>\n    ? Omit<PropsOptions, keyof III['$props']>\n    : PropsOptions,\n  EEE extends EmitsOptions = E extends any[]\n    ? E\n    : III extends Record<'$props', any>\n      ? Omit<E, ToListeners<keyof III['$props']>>\n      : E,\n  Base = DefineComponent<\n    P,\n    RawBindings,\n    D,\n    C,\n    M,\n    Mixin,\n    Extends,\n    EEE,\n    EE,\n    PublicProps,\n    ExtractPropTypes<P> & ({} extends E ? {} : EmitsToProps<EEE>),\n    ExtractDefaultPropTypes<P>,\n    S\n  >\n>(\n  options: ComponentOptionsWithObjectProps<PropsOptions, RawBindings, D, C, M, Mixin, Extends, E, EE, I, II, S>\n) => Base & T & FilterPropsOptions<PropsOptions>\n\ntype DefineComponentWithSlots<Slots extends RawSlots> = <\n  PropsOptions extends Readonly<ComponentPropsOptions>,\n  RawBindings,\n  D,\n  C extends ComputedOptions = {},\n  M extends MethodOptions = {},\n  Mixin extends ComponentOptionsMixin = ComponentOptionsMixin,\n  Extends extends ComponentOptionsMixin = ComponentOptionsMixin,\n  E extends EmitsOptions = Record<string, any>,\n  EE extends string = string,\n  I extends ComponentInjectOptions = {},\n  II extends string = string,\n  S extends SlotsType = SlotsType<Partial<MakeSlots<Slots>>>,\n>(\n  options: ComponentOptionsWithObjectProps<PropsOptions, RawBindings, D, C, M, Mixin, Extends, E, EE, I, II, S>\n) => DefineComponent<\n  ExtractPropTypes<PropsOptions> & SlotsToProps<Slots>,\n  RawBindings,\n  D,\n  C,\n  M,\n  Mixin,\n  Extends,\n  E,\n  EE,\n  PublicProps,\n  ExtractPropTypes<PropsOptions> & SlotsToProps<Slots> & ({} extends E ? {} : EmitsToProps<E>),\n  ExtractDefaultPropTypes<PropsOptions>,\n  S\n> & FilterPropsOptions<PropsOptions>\n\n// No argument - simple default slot\nexport function genericComponent (exposeDefaults?: boolean): DefineComponentWithSlots<{ default: never }>\n\n// Generic constructor argument - generic props and slots\nexport function genericComponent<T extends (new (props: Record<string, any>, slots: any) => {\n  $props?: Record<string, any>\n})> (exposeDefaults?: boolean): DefineComponentWithGenericProps<T>\n\n// Slots argument - simple slots\nexport function genericComponent<\n  Slots extends RawSlots\n> (exposeDefaults?: boolean): DefineComponentWithSlots<Slots>\n\n// Implementation\nexport function genericComponent (exposeDefaults = true) {\n  return (options: any) => ((exposeDefaults ? defineComponent : _defineComponent) as any)(options)\n}\n\nexport function defineFunctionalComponent<\n  T extends FunctionalComponent<Props>,\n  PropsOptions = ComponentObjectPropsOptions,\n  Defaults = ExtractDefaultPropTypes<PropsOptions>,\n  Props = Readonly<ExtractPropTypes<PropsOptions>>,\n> (props: PropsOptions, render: T): FunctionalComponent<Partial<Defaults> & Omit<Props, keyof Defaults>> {\n  render.props = props as any\n  return render as any\n}\n\ntype EmitsToProps<T extends EmitsOptions> = T extends string[]\n  ? {\n    [K in string & `on${Capitalize<T[number]>}`]?: (...args: any[]) => any\n  }\n  : T extends ObjectEmitsOptions\n    ? {\n      [K in string &\n        `on${Capitalize<string & keyof T>}`]?: K extends `on${infer C}`\n        ? T[Uncapitalize<C>] extends null\n          ? (...args: any[]) => any\n          : (\n            ...args: T[Uncapitalize<C>] extends (...args: infer P) => any\n              ? P\n              : never\n          ) => any\n        : never\n    }\n    : {}\n\ntype PublicProps =\n  & VNodeProps\n  & AllowedComponentProps\n  & ComponentCustomProps\n\n// Adds a filterProps method to the component options\nexport interface FilterPropsOptions<PropsOptions extends Readonly<ComponentPropsOptions>, Props = ExtractPropTypes<PropsOptions>> {\n  filterProps<\n    T extends Partial<Props>,\n    U extends Exclude<keyof Props, Exclude<keyof Props, keyof T>>\n  > (props: T): Partial<Pick<T, U>>\n}\n\n// https://github.com/vuejs/core/pull/10557\nexport type ComponentInstance<T> = T extends { new (): ComponentPublicInstance<any, any, any> }\n  ? InstanceType<T>\n  : T extends FunctionalComponent<infer Props, infer Emits>\n    ? ComponentPublicInstance<Props, {}, {}, {}, {}, ShortEmitsToObject<Emits>>\n    : T extends Component<\n          infer Props,\n          infer RawBindings,\n          infer D,\n          infer C,\n          infer M\n        >\n      ? // NOTE we override Props/RawBindings/D to make sure is not `unknown`\n      ComponentPublicInstance<\n          unknown extends Props ? {} : Props,\n          unknown extends RawBindings ? {} : RawBindings,\n          unknown extends D ? {} : D,\n          C,\n          M\n        >\n      : never // not a vue Component\n\ntype ShortEmitsToObject<E> = E extends Record<string, any[]> ? {\n  [K in keyof E]: (...args: E[K]) => any;\n} : E;\n\nexport type JSXComponent<Props = any> =\n  | { new (): ComponentPublicInstance<Props> }\n  | FunctionalComponent<Props>\n", "export const standardEasing = 'cubic-bezier(0.4, 0, 0.2, 1)'\nexport const deceleratedEasing = 'cubic-bezier(0.0, 0, 0.2, 1)' // Entering\nexport const acceleratedEasing = 'cubic-bezier(0.4, 0, 1, 1)' // Leaving\n", "// Utilities\nimport { getCurrentInstance } from './getCurrentInstance'\n\n// Types\nimport type { VNode } from 'vue'\n\nexport function useRender (render: () => VNode): void {\n  const vm = getCurrentInstance('useRender') as any\n  vm.render = render\n}\n", "// Utilities\nimport { h, Transition, TransitionGroup } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { FunctionalComponent, PropType } from 'vue'\n\nexport const makeTransitionProps = propsFactory({\n  disabled: Boolean,\n  group: Boolean,\n  hideOnLeave: Boolean,\n  leaveAbsolute: Boolean,\n  mode: String,\n  origin: String,\n}, 'transition')\n\nexport function createCssTransition (\n  name: string,\n  origin?: string,\n  mode?: string\n) {\n  return genericComponent()({\n    name,\n\n    props: makeTransitionProps({\n      mode,\n      origin,\n    }),\n\n    setup (props, { slots }) {\n      const functions = {\n        onBeforeEnter (el: HTMLElement) {\n          if (props.origin) {\n            el.style.transformOrigin = props.origin\n          }\n        },\n        onLeave (el: HTMLElement) {\n          if (props.leaveAbsolute) {\n            const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = el\n            el._transitionInitialStyles = {\n              position: el.style.position,\n              top: el.style.top,\n              left: el.style.left,\n              width: el.style.width,\n              height: el.style.height,\n            }\n            el.style.position = 'absolute'\n            el.style.top = `${offsetTop}px`\n            el.style.left = `${offsetLeft}px`\n            el.style.width = `${offsetWidth}px`\n            el.style.height = `${offsetHeight}px`\n          }\n\n          if (props.hideOnLeave) {\n            el.style.setProperty('display', 'none', 'important')\n          }\n        },\n        onAfterLeave (el: HTMLElement) {\n          if (props.leaveAbsolute && el?._transitionInitialStyles) {\n            const { position, top, left, width, height } = el._transitionInitialStyles\n            delete el._transitionInitialStyles\n            el.style.position = position || ''\n            el.style.top = top || ''\n            el.style.left = left || ''\n            el.style.width = width || ''\n            el.style.height = height || ''\n          }\n        },\n      }\n\n      return () => {\n        const tag = props.group ? TransitionGroup : Transition\n\n        return h(tag as FunctionalComponent, {\n          name: props.disabled ? '' : name,\n          css: !props.disabled,\n          ...(props.group ? undefined : { mode: props.mode }),\n          ...(props.disabled ? {} : functions),\n        }, slots.default)\n      }\n    },\n  })\n}\n\nexport function createJavascriptTransition (\n  name: string,\n  functions: Record<string, any>,\n  mode = 'in-out'\n) {\n  return genericComponent()({\n    name,\n\n    props: {\n      mode: {\n        type: String as PropType<'in-out' | 'out-in' | 'default'>,\n        default: mode,\n      },\n      disabled: Boolean,\n      group: Boolean,\n    },\n\n    setup (props, { slots }) {\n      const tag = props.group ? TransitionGroup : Transition\n\n      return () => {\n        return h(tag as FunctionalComponent, {\n          name: props.disabled ? '' : name,\n          css: !props.disabled,\n          // mode: props.mode, // TODO: vuejs/vue-next#3104\n          ...(props.disabled ? {} : functions),\n        }, slots.default)\n      }\n    },\n  })\n}\n", "// Utilities\nimport { camelize } from 'vue'\n\ninterface HTMLExpandElement extends HTMLElement {\n  _parent?: (Node & ParentNode & HTMLElement) | null\n  _initialStyle?: {\n    transition: string\n    overflow: string\n    height?: string | null\n    width?: string | null\n  }\n}\n\nexport default function (expandedParentClass = '', x = false) {\n  const sizeProperty = x ? 'width' : 'height' as 'width' | 'height'\n  const offsetProperty = camelize(`offset-${sizeProperty}`) as 'offsetHeight' | 'offsetWidth'\n\n  return {\n    onBeforeEnter (el: HTMLExpandElement) {\n      el._parent = el.parentNode as (Node & ParentNode & HTMLElement) | null\n      el._initialStyle = {\n        transition: el.style.transition,\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n    },\n\n    onEnter (el: HTMLExpandElement) {\n      const initialStyle = el._initialStyle\n      if (!initialStyle) return\n\n      el.style.setProperty('transition', 'none', 'important')\n      // Hide overflow to account for collapsed margins in the calculated height\n      el.style.overflow = 'hidden'\n      const offset = `${el[offsetProperty]}px`\n\n      el.style[sizeProperty] = '0'\n\n      void el.offsetHeight // force reflow\n\n      el.style.transition = initialStyle.transition\n\n      if (expandedParentClass && el._parent) {\n        el._parent.classList.add(expandedParentClass)\n      }\n\n      requestAnimationFrame(() => {\n        el.style[sizeProperty] = offset\n      })\n    },\n\n    onAfterEnter: resetStyles,\n    onEnterCancelled: resetStyles,\n\n    onLeave (el: HTMLExpandElement) {\n      el._initialStyle = {\n        transition: '',\n        overflow: el.style.overflow,\n        [sizeProperty]: el.style[sizeProperty],\n      }\n\n      el.style.overflow = 'hidden'\n      el.style[sizeProperty] = `${el[offsetProperty]}px`\n      void el.offsetHeight // force reflow\n\n      requestAnimationFrame(() => (el.style[sizeProperty] = '0'))\n    },\n\n    onAfterLeave,\n    onLeaveCancelled: onAfterLeave,\n  }\n\n  function onAfterLeave (el: HTMLExpandElement) {\n    if (expandedParentClass && el._parent) {\n      el._parent.classList.remove(expandedParentClass)\n    }\n    resetStyles(el)\n  }\n\n  function resetStyles (el: HTMLExpandElement) {\n    if (!el._initialStyle) return\n\n    const size = el._initialStyle[sizeProperty]\n    el.style.overflow = el._initialStyle.overflow\n    if (size != null) el.style[sizeProperty] = size\n    delete el._initialStyle\n  }\n}\n", "// Utilities\nimport { Transition } from 'vue'\nimport {\n  acceleratedEasing,\n  animate,\n  deceleratedEasing,\n  genericComponent,\n  nullifyTransforms,\n  propsFactory,\n  standardEasing,\n} from '@/util'\nimport { getTargetBox } from '@/util/box'\n\n// Types\nimport type { PropType } from 'vue'\n\nexport const makeVDialogTransitionProps = propsFactory({\n  target: [Object, Array] as PropType<HTMLElement | [x: number, y: number]>,\n}, 'v-dialog-transition')\n\nexport const VDialogTransition = genericComponent()({\n  name: 'VDialogTransition',\n\n  props: makeVDialogTransitionProps(),\n\n  setup (props, { slots }) {\n    const functions = {\n      onBeforeEnter (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n        ;(el as HTMLElement).style.visibility = 'hidden'\n      },\n      async onEnter (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        await new Promise(resolve => requestAnimationFrame(resolve))\n        ;(el as HTMLElement).style.visibility = ''\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n          {},\n        ], {\n          duration: 225 * speed,\n          easing: deceleratedEasing,\n        })\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            { opacity: 0 },\n            { opacity: 0, offset: 0.33 },\n            {},\n          ], {\n            duration: 225 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n        animation.finished.then(() => done())\n      },\n      onAfterEnter (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n      onBeforeLeave (el: Element) {\n        (el as HTMLElement).style.pointerEvents = 'none'\n      },\n      async onLeave (el: Element, done: () => void) {\n        await new Promise(resolve => requestAnimationFrame(resolve))\n\n        const { x, y, sx, sy, speed } = getDimensions(props.target!, el as HTMLElement)\n\n        const animation = animate(el, [\n          {},\n          { transform: `translate(${x}px, ${y}px) scale(${sx}, ${sy})`, opacity: 0 },\n        ], {\n          duration: 125 * speed,\n          easing: acceleratedEasing,\n        })\n        animation.finished.then(() => done())\n        getChildren(el)?.forEach(el => {\n          animate(el, [\n            {},\n            { opacity: 0, offset: 0.2 },\n            { opacity: 0 },\n          ], {\n            duration: 125 * 2 * speed,\n            easing: standardEasing,\n          })\n        })\n      },\n      onAfterLeave (el: Element) {\n        (el as HTMLElement).style.removeProperty('pointer-events')\n      },\n    }\n\n    return () => {\n      return props.target\n        ? (\n          <Transition\n            name=\"dialog-transition\"\n            { ...functions }\n            css={ false }\n            v-slots={ slots }\n          />\n        )\n        : <Transition name=\"dialog-transition\" v-slots={ slots } />\n    }\n  },\n})\n\n/** Animatable children (card, sheet, list) */\nfunction getChildren (el: Element) {\n  const els = el.querySelector(':scope > .v-card, :scope > .v-sheet, :scope > .v-list')?.children\n  return els && [...els]\n}\n\nfunction getDimensions (target: HTMLElement | [x: number, y: number], el: HTMLElement) {\n  const targetBox = getTargetBox(target)\n  const elBox = nullifyTransforms(el)\n  const [originX, originY] = getComputedStyle(el).transformOrigin.split(' ').map(v => parseFloat(v))\n\n  const [anchorSide, anchorOffset] = getComputedStyle(el).getPropertyValue('--v-overlay-anchor-origin').split(' ')\n\n  let offsetX = targetBox.left + targetBox.width / 2\n  if (anchorSide === 'left' || anchorOffset === 'left') {\n    offsetX -= targetBox.width / 2\n  } else if (anchorSide === 'right' || anchorOffset === 'right') {\n    offsetX += targetBox.width / 2\n  }\n\n  let offsetY = targetBox.top + targetBox.height / 2\n  if (anchorSide === 'top' || anchorOffset === 'top') {\n    offsetY -= targetBox.height / 2\n  } else if (anchorSide === 'bottom' || anchorOffset === 'bottom') {\n    offsetY += targetBox.height / 2\n  }\n\n  const tsx = targetBox.width / elBox.width\n  const tsy = targetBox.height / elBox.height\n  const maxs = Math.max(1, tsx, tsy)\n  const sx = tsx / maxs || 0\n  const sy = tsy / maxs || 0\n\n  // Animate elements larger than 12% of the screen area up to 1.5x slower\n  const asa = (elBox.width * elBox.height) / (window.innerWidth * window.innerHeight)\n  const speed = asa > 0.12\n    ? Math.min(1.5, (asa - 0.12) * 10 + 1)\n    : 1\n\n  return {\n    x: offsetX - (originX + elBox.left),\n    y: offsetY - (originY + elBox.top),\n    sx,\n    sy,\n    speed,\n  }\n}\n\nexport type VDialogTransition = InstanceType<typeof VDialogTransition>\n", "import {\n  createCssTransition,\n  createJavascriptTransition,\n} from './createTransition'\n\nimport ExpandTransitionGenerator from './expand-transition'\n\n// Component specific transitions\nexport const VFabTransition = createCssTransition('fab-transition', 'center center', 'out-in')\n\n// Generic transitions\nexport const VDialogBottomTransition = createCssTransition('dialog-bottom-transition')\nexport const VDialogTopTransition = createCssTransition('dialog-top-transition')\nexport const VFadeTransition = createCssTransition('fade-transition')\nexport const VScaleTransition = createCssTransition('scale-transition')\nexport const VScrollXTransition = createCssTransition('scroll-x-transition')\nexport const VScrollXReverseTransition = createCssTransition('scroll-x-reverse-transition')\nexport const VScrollYTransition = createCssTransition('scroll-y-transition')\nexport const VScrollYReverseTransition = createCssTransition('scroll-y-reverse-transition')\nexport const VSlideXTransition = createCssTransition('slide-x-transition')\nexport const VSlideXReverseTransition = createCssTransition('slide-x-reverse-transition')\nexport const VSlideYTransition = createCssTransition('slide-y-transition')\nexport const VSlideYReverseTransition = createCssTransition('slide-y-reverse-transition')\n\n// Javascript transitions\nexport const VExpandTransition = createJavascriptTransition('expand-transition', ExpandTransitionGenerator())\nexport const VExpandXTransition = createJavascriptTransition('expand-x-transition', ExpandTransitionGenerator('', true))\n\nexport { VDialogTransition } from './dialog-transition'\n\nexport type VFabTransition = InstanceType<typeof VFabTransition>\nexport type VDialogBottomTransition = InstanceType<typeof VDialogBottomTransition>\nexport type VDialogTopTransition = InstanceType<typeof VDialogTopTransition>\nexport type VFadeTransition = InstanceType<typeof VFadeTransition>\nexport type VScaleTransition = InstanceType<typeof VScaleTransition>\nexport type VScrollXTransition = InstanceType<typeof VScrollXTransition>\nexport type VScrollXReverseTransition = InstanceType<typeof VScrollXReverseTransition>\nexport type VScrollYTransition = InstanceType<typeof VScrollYTransition>\nexport type VScrollYReverseTransition = InstanceType<typeof VScrollYReverseTransition>\nexport type VSlideXTransition = InstanceType<typeof VSlideXTransition>\nexport type VSlideXReverseTransition = InstanceType<typeof VSlideXReverseTransition>\nexport type VSlideYTransition = InstanceType<typeof VSlideYTransition>\nexport type VSlideYReverseTransition = InstanceType<typeof VSlideYReverseTransition>\nexport type VExpandTransition = InstanceType<typeof VExpandTransition>\nexport type VExpandXTransition = InstanceType<typeof VExpandXTransition>\n", "// Utilities\nimport { h, mergeProps, Transition, TransitionGroup } from 'vue'\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { Component, FunctionalComponent, PropType, TransitionProps } from 'vue'\n\nexport const makeTransitionProps = propsFactory({\n  transition: {\n    type: [Boolean, String, Object] as PropType<string | boolean | TransitionProps & { component?: Component }>,\n    default: 'fade-transition',\n    validator: val => val !== true,\n  },\n}, 'transition')\n\ninterface MaybeTransitionProps extends TransitionProps {\n  transition?: string | boolean | TransitionProps & { component?: any }\n  disabled?: boolean\n  group?: boolean\n}\n\nexport const MaybeTransition: FunctionalComponent<MaybeTransitionProps> = (props, { slots }) => {\n  const { transition, disabled, group, ...rest } = props\n\n  const {\n    component = group ? TransitionGroup : Transition,\n    ...customProps\n  } = typeof transition === 'object' ? transition : {}\n\n  return h(\n    component,\n    mergeProps(\n      typeof transition === 'string'\n        ? { name: disabled ? '' : transition }\n        : customProps as any,\n      typeof transition === 'string'\n        ? {}\n        : Object.fromEntries(Object.entries({ disabled, group }).filter(([_, v]) => v !== undefined)),\n      rest as any,\n    ),\n    slots\n  )\n}\n", "// Styles\nimport './VField.sass'\n\n// Components\nimport { VFieldLabel } from './VFieldLabel'\nimport { VExpandXTransition } from '@/components/transitions'\nimport { VDefaultsProvider } from '@/components/VDefaultsProvider'\nimport { useInputIcon } from '@/components/VInput/InputIcon'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeFocusProps, useFocus } from '@/composables/focus'\nimport { IconValue } from '@/composables/icons'\nimport { LoaderSlot, makeLoaderProps, useLoader } from '@/composables/loader'\nimport { useRtl } from '@/composables/locale'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, ref, toRef, useId, watch } from 'vue'\nimport {\n  animate,\n  convertToUnit,\n  EventProp,\n  genericComponent,\n  nullifyTransforms,\n  propsFactory,\n  standardEasing,\n  useRender,\n} from '@/util'\n\n// Types\nimport type { PropType, Ref } from 'vue'\nimport type { LoaderSlotProps } from '@/composables/loader'\nimport type { GenericProps } from '@/util'\n\nconst allowedVariants = ['underlined', 'outlined', 'filled', 'solo', 'solo-inverted', 'solo-filled', 'plain'] as const\ntype Variant = typeof allowedVariants[number]\n\nexport interface DefaultInputSlot {\n  isActive: Ref<boolean>\n  isFocused: Ref<boolean>\n  controlRef: Ref<HTMLElement | undefined>\n  focus: () => void\n  blur: () => void\n}\n\nexport interface VFieldSlot extends DefaultInputSlot {\n  props: Record<string, unknown>\n}\n\nexport const makeVFieldProps = propsFactory({\n  appendInnerIcon: IconValue,\n  bgColor: String,\n  clearable: Boolean,\n  clearIcon: {\n    type: IconValue,\n    default: '$clear',\n  },\n  active: Boolean,\n  centerAffix: {\n    type: Boolean,\n    default: undefined,\n  },\n  color: String,\n  baseColor: String,\n  dirty: Boolean,\n  disabled: {\n    type: Boolean,\n    default: null,\n  },\n  glow: Boolean,\n  error: Boolean,\n  flat: Boolean,\n  iconColor: [Boolean, String],\n  label: String,\n  persistentClear: Boolean,\n  prependInnerIcon: IconValue,\n  reverse: Boolean,\n  singleLine: Boolean,\n  variant: {\n    type: String as PropType<Variant>,\n    default: 'filled',\n    validator: (v: any) => allowedVariants.includes(v),\n  },\n\n  'onClick:clear': EventProp<[MouseEvent]>(),\n  'onClick:appendInner': EventProp<[MouseEvent]>(),\n  'onClick:prependInner': EventProp<[MouseEvent]>(),\n\n  ...makeComponentProps(),\n  ...makeLoaderProps(),\n  ...makeRoundedProps(),\n  ...makeThemeProps(),\n}, 'VField')\n\nexport type VFieldSlots = {\n  clear: DefaultInputSlot & { props: Record<string, any> }\n  'prepend-inner': DefaultInputSlot\n  'append-inner': DefaultInputSlot\n  label: DefaultInputSlot & { label: string | undefined, props: Record<string, any> }\n  loader: LoaderSlotProps\n  default: VFieldSlot\n}\n\nexport const VField = genericComponent<new <T>(\n  props: {\n    modelValue?: T\n    'onUpdate:modelValue'?: (value: T) => void\n  },\n  slots: VFieldSlots\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VField',\n\n  inheritAttrs: false,\n\n  props: {\n    id: String,\n\n    ...makeFocusProps(),\n    ...makeVFieldProps(),\n  },\n\n  emits: {\n    'update:focused': (focused: boolean) => true,\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, emit, slots }) {\n    const { themeClasses } = provideTheme(props)\n    const { loaderClasses } = useLoader(props)\n    const { focusClasses, isFocused, focus, blur } = useFocus(props)\n    const { InputIcon } = useInputIcon(props)\n    const { roundedClasses } = useRounded(props)\n    const { rtlClasses } = useRtl()\n\n    const isActive = computed(() => props.dirty || props.active)\n    const hasLabel = computed(() => !!(props.label || slots.label))\n    const hasFloatingLabel = computed(() => !props.singleLine && hasLabel.value)\n\n    const uid = useId()\n    const id = computed(() => props.id || `input-${uid}`)\n    const messagesId = computed(() => `${id.value}-messages`)\n\n    const labelRef = ref<VFieldLabel>()\n    const floatingLabelRef = ref<VFieldLabel>()\n    const controlRef = ref<HTMLElement>()\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant))\n    const color = computed(() => {\n      return props.error || props.disabled ? undefined\n        : isActive.value && isFocused.value ? props.color\n        : props.baseColor\n    })\n    const iconColor = computed(() => {\n      if (!props.iconColor || (props.glow && !isFocused.value)) return undefined\n\n      return props.iconColor === true ? color.value : props.iconColor\n    })\n\n    const { backgroundColorClasses, backgroundColorStyles } = useBackgroundColor(toRef(props, 'bgColor'))\n    const { textColorClasses, textColorStyles } = useTextColor(color)\n\n    watch(isActive, val => {\n      if (hasFloatingLabel.value) {\n        const el: HTMLElement = labelRef.value!.$el\n        const targetEl: HTMLElement = floatingLabelRef.value!.$el\n\n        requestAnimationFrame(() => {\n          const rect = nullifyTransforms(el)\n          const targetRect = targetEl.getBoundingClientRect()\n\n          const x = targetRect.x - rect.x\n          const y = targetRect.y - rect.y - (rect.height / 2 - targetRect.height / 2)\n\n          const targetWidth = targetRect.width / 0.75\n          const width = Math.abs(targetWidth - rect.width) > 1\n            ? { maxWidth: convertToUnit(targetWidth) }\n            : undefined\n\n          const style = getComputedStyle(el)\n          const targetStyle = getComputedStyle(targetEl)\n          const duration = parseFloat(style.transitionDuration) * 1000 || 150\n          const scale = parseFloat(targetStyle.getPropertyValue('--v-field-label-scale'))\n          const color = targetStyle.getPropertyValue('color')\n\n          el.style.visibility = 'visible'\n          targetEl.style.visibility = 'hidden'\n\n          animate(el, {\n            transform: `translate(${x}px, ${y}px) scale(${scale})`,\n            color,\n            ...width,\n          }, {\n            duration,\n            easing: standardEasing,\n            direction: val ? 'normal' : 'reverse',\n          }).finished.then(() => {\n            el.style.removeProperty('visibility')\n            targetEl.style.removeProperty('visibility')\n          })\n        })\n      }\n    }, { flush: 'post' })\n\n    const slotProps = computed<DefaultInputSlot>(() => ({\n      isActive,\n      isFocused,\n      controlRef,\n      blur,\n      focus,\n    }))\n\n    function onClick (e: MouseEvent) {\n      if (e.target !== document.activeElement) {\n        e.preventDefault()\n      }\n    }\n\n    useRender(() => {\n      const isOutlined = props.variant === 'outlined'\n      const hasPrepend = !!(slots['prepend-inner'] || props.prependInnerIcon)\n      const hasClear = !!(props.clearable || slots.clear) && !props.disabled\n      const hasAppend = !!(slots['append-inner'] || props.appendInnerIcon || hasClear)\n      const label = () => (\n        slots.label\n          ? slots.label({\n            ...slotProps.value,\n            label: props.label,\n            props: { for: id.value },\n          })\n          : props.label\n      )\n\n      return (\n        <div\n          class={[\n            'v-field',\n            {\n              'v-field--active': isActive.value,\n              'v-field--appended': hasAppend,\n              'v-field--center-affix': props.centerAffix ?? !isPlainOrUnderlined.value,\n              'v-field--disabled': props.disabled,\n              'v-field--dirty': props.dirty,\n              'v-field--error': props.error,\n              'v-field--glow': props.glow,\n              'v-field--flat': props.flat,\n              'v-field--has-background': !!props.bgColor,\n              'v-field--persistent-clear': props.persistentClear,\n              'v-field--prepended': hasPrepend,\n              'v-field--reverse': props.reverse,\n              'v-field--single-line': props.singleLine,\n              'v-field--no-label': !label(),\n              [`v-field--variant-${props.variant}`]: true,\n            },\n            themeClasses.value,\n            backgroundColorClasses.value,\n            focusClasses.value,\n            loaderClasses.value,\n            roundedClasses.value,\n            rtlClasses.value,\n            props.class,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            props.style,\n          ]}\n          onClick={ onClick }\n          { ...attrs }\n        >\n          <div class=\"v-field__overlay\" />\n\n          <LoaderSlot\n            name=\"v-field\"\n            active={ !!props.loading }\n            color={ props.error ? 'error' : (typeof props.loading === 'string' ? props.loading : props.color) }\n            v-slots={{ default: slots.loader }}\n          />\n\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-field__prepend-inner\">\n              { props.prependInnerIcon && (\n                <InputIcon\n                  key=\"prepend-icon\"\n                  name=\"prependInner\"\n                  color={ iconColor.value }\n                />\n              )}\n\n              { slots['prepend-inner']?.(slotProps.value) }\n            </div>\n          )}\n\n          <div class=\"v-field__field\" data-no-activator=\"\">\n            {['filled', 'solo', 'solo-inverted', 'solo-filled'].includes(props.variant) && hasFloatingLabel.value && (\n              <VFieldLabel\n                key=\"floating-label\"\n                ref={ floatingLabelRef }\n                class={[textColorClasses.value]}\n                floating\n                for={ id.value }\n                style={ textColorStyles.value }\n              >\n                { label() }\n              </VFieldLabel>\n            )}\n\n            { hasLabel.value && (\n              <VFieldLabel key=\"label\" ref={ labelRef } for={ id.value }>\n                { label() }\n              </VFieldLabel>\n            )}\n\n            { slots.default?.({\n              ...slotProps.value,\n              props: {\n                id: id.value,\n                class: 'v-field__input',\n                'aria-describedby': messagesId.value,\n              },\n              focus,\n              blur,\n            } as VFieldSlot) ?? (\n              <div\n                id={ id.value }\n                class=\"v-field__input\"\n                aria-describedby={ messagesId.value }\n              />\n            )}\n          </div>\n\n          { hasClear && (\n            <VExpandXTransition key=\"clear\">\n              <div\n                class=\"v-field__clearable\"\n                v-show={ props.dirty }\n                onMousedown={ (e: MouseEvent) => {\n                  e.preventDefault()\n                  e.stopPropagation()\n                }}\n              >\n              <VDefaultsProvider\n                defaults={{\n                  VIcon: {\n                    icon: props.clearIcon,\n                  },\n                }}\n              >\n                { slots.clear\n                  ? slots.clear({\n                    ...slotProps.value,\n                    props: {\n                      onFocus: focus,\n                      onBlur: blur,\n                      onClick: props['onClick:clear'],\n                    },\n                  })\n                  : (\n                    <InputIcon\n                      name=\"clear\"\n                      onFocus={ focus }\n                      onBlur={ blur }\n                    />\n                  )}\n                </VDefaultsProvider>\n              </div>\n            </VExpandXTransition>\n          )}\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-field__append-inner\">\n              { slots['append-inner']?.(slotProps.value) }\n\n              { props.appendInnerIcon && (\n                <InputIcon\n                  key=\"append-icon\"\n                  name=\"appendInner\"\n                  color={ iconColor.value }\n                />\n              )}\n            </div>\n          )}\n\n          <div\n            class={[\n              'v-field__outline',\n              textColorClasses.value,\n            ]}\n            style={ textColorStyles.value }\n          >\n            { isOutlined && (\n              <>\n                <div class=\"v-field__outline__start\" />\n\n                { hasFloatingLabel.value && (\n                  <div class=\"v-field__outline__notch\">\n                    <VFieldLabel ref={ floatingLabelRef } floating for={ id.value }>\n                      { label() }\n                    </VFieldLabel>\n                  </div>\n                )}\n\n                <div class=\"v-field__outline__end\" />\n              </>\n            )}\n\n            { isPlainOrUnderlined.value && hasFloatingLabel.value && (\n              <VFieldLabel ref={ floatingLabelRef } floating for={ id.value }>\n                { label() }\n              </VFieldLabel>\n            )}\n          </div>\n        </div>\n      )\n    })\n\n    return {\n      controlRef,\n      fieldIconColor: iconColor,\n    }\n  },\n})\n\nexport type VField = InstanceType<typeof VField>\n", "// Styles\nimport './VLabel.sass'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeThemeProps } from '@/composables/theme'\n\n// Utilities\nimport { EventProp, genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVLabelProps = propsFactory({\n  text: String,\n\n  onClick: EventProp<[MouseEvent]>(),\n\n  ...makeComponentProps(),\n  ...makeThemeProps(),\n}, 'VLabel')\n\nexport const VLabel = genericComponent()({\n  name: 'VLabel',\n\n  props: makeVLabelProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <label\n        class={[\n          'v-label',\n          {\n            'v-label--clickable': !!props.onClick,\n          },\n          props.class,\n        ]}\n        style={ props.style }\n        onClick={ props.onClick }\n      >\n        { props.text }\n\n        { slots.default?.() }\n      </label>\n    ))\n\n    return {}\n  },\n})\n\nexport type VLabel = InstanceType<typeof VLabel>\n", "// Utilities\nimport {\n  computed,\n  inject,\n  provide,\n  ref,\n  shallowRef,\n  watch,\n  watchEffect,\n} from 'vue'\nimport {\n  createRange,\n  darken,\n  getCurrentInstance,\n  getForeground,\n  getLuma,\n  IN_BROWSER,\n  lighten,\n  mergeDeep,\n  parseColor,\n  propsFactory,\n  RGBtoHex,\n} from '@/util'\n\n// Types\nimport type { VueHeadClient } from '@unhead/vue'\nimport type { HeadClient } from '@vueuse/head'\nimport type { App, DeepReadonly, InjectionKey, Ref } from 'vue'\n\ntype DeepPartial<T> = T extends object ? { [P in keyof T]?: DeepPartial<T[P]> } : T\n\nexport type ThemeOptions = false | {\n  cspNonce?: string\n  defaultTheme?: string\n  variations?: false | VariationsOptions\n  themes?: Record<string, ThemeDefinition>\n  stylesheetId?: string\n  scope?: string\n}\nexport type ThemeDefinition = DeepPartial<InternalThemeDefinition>\n\ninterface InternalThemeOptions {\n  cspNonce?: string\n  isDisabled: boolean\n  defaultTheme: string\n  variations: false | VariationsOptions\n  themes: Record<string, InternalThemeDefinition>\n  stylesheetId: string\n  scope?: string\n}\n\ninterface VariationsOptions {\n  colors: string[]\n  lighten: number\n  darken: number\n}\n\ninterface InternalThemeDefinition {\n  dark: boolean\n  colors: Colors\n  variables: Record<string, string | number>\n}\n\nexport interface Colors extends BaseColors, OnColors {\n  [key: string]: string\n}\n\ninterface BaseColors {\n  background: string\n  surface: string\n  primary: string\n  secondary: string\n  success: string\n  warning: string\n  error: string\n  info: string\n}\n\ninterface OnColors {\n  'on-background': string\n  'on-surface': string\n  'on-primary': string\n  'on-secondary': string\n  'on-success': string\n  'on-warning': string\n  'on-error': string\n  'on-info': string\n}\n\nexport interface ThemeInstance {\n  readonly isDisabled: boolean\n  readonly themes: Ref<Record<string, InternalThemeDefinition>>\n\n  readonly name: Readonly<Ref<string>>\n  readonly current: DeepReadonly<Ref<InternalThemeDefinition>>\n  readonly computedThemes: DeepReadonly<Ref<Record<string, InternalThemeDefinition>>>\n\n  readonly themeClasses: Readonly<Ref<string | undefined>>\n  readonly styles: Readonly<Ref<string>>\n\n  readonly global: {\n    readonly name: Ref<string>\n    readonly current: DeepReadonly<Ref<InternalThemeDefinition>>\n  }\n}\n\nexport const ThemeSymbol: InjectionKey<ThemeInstance> = Symbol.for('vuetify:theme')\n\nexport const makeThemeProps = propsFactory({\n  theme: String,\n}, 'theme')\n\nfunction genDefaults () {\n  return {\n    defaultTheme: 'light',\n    variations: { colors: [], lighten: 0, darken: 0 },\n    themes: {\n      light: {\n        dark: false,\n        colors: {\n          background: '#FFFFFF',\n          surface: '#FFFFFF',\n          'surface-bright': '#FFFFFF',\n          'surface-light': '#EEEEEE',\n          'surface-variant': '#424242',\n          'on-surface-variant': '#EEEEEE',\n          primary: '#1867C0',\n          'primary-darken-1': '#1F5592',\n          secondary: '#48A9A6',\n          'secondary-darken-1': '#018786',\n          error: '#B00020',\n          info: '#2196F3',\n          success: '#4CAF50',\n          warning: '#FB8C00',\n        },\n        variables: {\n          'border-color': '#000000',\n          'border-opacity': 0.12,\n          'high-emphasis-opacity': 0.87,\n          'medium-emphasis-opacity': 0.60,\n          'disabled-opacity': 0.38,\n          'idle-opacity': 0.04,\n          'hover-opacity': 0.04,\n          'focus-opacity': 0.12,\n          'selected-opacity': 0.08,\n          'activated-opacity': 0.12,\n          'pressed-opacity': 0.12,\n          'dragged-opacity': 0.08,\n          'theme-kbd': '#212529',\n          'theme-on-kbd': '#FFFFFF',\n          'theme-code': '#F5F5F5',\n          'theme-on-code': '#000000',\n        },\n      },\n      dark: {\n        dark: true,\n        colors: {\n          background: '#121212',\n          surface: '#212121',\n          'surface-bright': '#ccbfd6',\n          'surface-light': '#424242',\n          'surface-variant': '#a3a3a3',\n          'on-surface-variant': '#424242',\n          primary: '#2196F3',\n          'primary-darken-1': '#277CC1',\n          secondary: '#54B6B2',\n          'secondary-darken-1': '#48A9A6',\n          error: '#CF6679',\n          info: '#2196F3',\n          success: '#4CAF50',\n          warning: '#FB8C00',\n        },\n        variables: {\n          'border-color': '#FFFFFF',\n          'border-opacity': 0.12,\n          'high-emphasis-opacity': 1,\n          'medium-emphasis-opacity': 0.70,\n          'disabled-opacity': 0.50,\n          'idle-opacity': 0.10,\n          'hover-opacity': 0.04,\n          'focus-opacity': 0.12,\n          'selected-opacity': 0.08,\n          'activated-opacity': 0.12,\n          'pressed-opacity': 0.16,\n          'dragged-opacity': 0.08,\n          'theme-kbd': '#212529',\n          'theme-on-kbd': '#FFFFFF',\n          'theme-code': '#343434',\n          'theme-on-code': '#CCCCCC',\n        },\n      },\n    },\n    stylesheetId: 'vuetify-theme-stylesheet',\n  }\n}\n\nfunction parseThemeOptions (options: ThemeOptions = genDefaults()): InternalThemeOptions {\n  const defaults = genDefaults()\n\n  if (!options) return { ...defaults, isDisabled: true } as any\n\n  const themes: Record<string, InternalThemeDefinition> = {}\n  for (const [key, theme] of Object.entries(options.themes ?? {})) {\n    const defaultTheme = theme.dark || key === 'dark'\n      ? defaults.themes?.dark\n      : defaults.themes?.light\n    themes[key] = mergeDeep(defaultTheme, theme) as InternalThemeDefinition\n  }\n\n  return mergeDeep(\n    defaults,\n    { ...options, themes },\n  ) as InternalThemeOptions\n}\n\nfunction createCssClass (lines: string[], selector: string, content: string[], scope?: string) {\n  lines.push(\n    `${getScopedSelector(selector, scope)} {\\n`,\n    ...content.map(line => `  ${line};\\n`),\n    '}\\n',\n  )\n}\n\nfunction genCssVariables (theme: InternalThemeDefinition) {\n  const lightOverlay = theme.dark ? 2 : 1\n  const darkOverlay = theme.dark ? 1 : 2\n\n  const variables: string[] = []\n  for (const [key, value] of Object.entries(theme.colors)) {\n    const rgb = parseColor(value)\n    variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`)\n    if (!key.startsWith('on-')) {\n      variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`)\n    }\n  }\n\n  for (const [key, value] of Object.entries(theme.variables)) {\n    const color = typeof value === 'string' && value.startsWith('#') ? parseColor(value) : undefined\n    const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined\n    variables.push(`--v-${key}: ${rgb ?? value}`)\n  }\n\n  return variables\n}\n\nfunction genVariation (name: string, color: string, variations: VariationsOptions | false) {\n  const object: Record<string, string> = {}\n  if (variations) {\n    for (const variation of (['lighten', 'darken'] as const)) {\n      const fn = variation === 'lighten' ? lighten : darken\n      for (const amount of createRange(variations[variation], 1)) {\n        object[`${name}-${variation}-${amount}`] = RGBtoHex(fn(parseColor(color), amount))\n      }\n    }\n  }\n  return object\n}\n\nfunction genVariations (colors: InternalThemeDefinition['colors'], variations: VariationsOptions | false) {\n  if (!variations) return {}\n\n  let variationColors = {}\n  for (const name of variations.colors) {\n    const color = colors[name]\n\n    if (!color) continue\n\n    variationColors = {\n      ...variationColors,\n      ...genVariation(name, color, variations),\n    }\n  }\n  return variationColors\n}\n\nfunction genOnColors (colors: InternalThemeDefinition['colors']) {\n  const onColors = {} as InternalThemeDefinition['colors']\n\n  for (const color of Object.keys(colors)) {\n    if (color.startsWith('on-') || colors[`on-${color}`]) continue\n\n    const onColor = `on-${color}` as keyof OnColors\n    const colorVal = parseColor(colors[color])\n\n    onColors[onColor] = getForeground(colorVal)\n  }\n\n  return onColors\n}\n\nfunction getScopedSelector (selector: string, scope?: string) {\n  if (!scope) return selector\n\n  const scopeSelector = `:where(${scope})`\n\n  return selector === ':root' ? scopeSelector : `${scopeSelector} ${selector}`\n}\n\nfunction upsertStyles (styleEl: HTMLStyleElement | null, styles: string) {\n  if (!styleEl) return\n\n  styleEl.innerHTML = styles\n}\n\nfunction getOrCreateStyleElement (id: string, cspNonce?: string) {\n  if (!IN_BROWSER) return null\n\n  let style = document.getElementById(id) as HTMLStyleElement | null\n\n  if (!style) {\n    style = document.createElement('style')\n    style.id = id\n    style.type = 'text/css'\n\n    if (cspNonce) style.setAttribute('nonce', cspNonce)\n\n    document.head.appendChild(style)\n  }\n\n  return style\n}\n\n// Composables\nexport function createTheme (options?: ThemeOptions): ThemeInstance & { install: (app: App) => void } {\n  const parsedOptions = parseThemeOptions(options)\n  const name = shallowRef(parsedOptions.defaultTheme)\n  const themes = ref(parsedOptions.themes)\n\n  const computedThemes = computed(() => {\n    const acc: Record<string, InternalThemeDefinition> = {}\n    for (const [name, original] of Object.entries(themes.value)) {\n      const colors = {\n        ...original.colors,\n        ...genVariations(original.colors, parsedOptions.variations),\n      }\n\n      acc[name] = {\n        ...original,\n        colors: {\n          ...colors,\n          ...genOnColors(colors),\n        },\n      }\n    }\n    return acc\n  })\n\n  const current = computed(() => computedThemes.value[name.value])\n\n  const styles = computed(() => {\n    const lines: string[] = []\n\n    if (current.value?.dark) {\n      createCssClass(lines, ':root', ['color-scheme: dark'], parsedOptions.scope)\n    }\n\n    createCssClass(lines, ':root', genCssVariables(current.value), parsedOptions.scope)\n\n    for (const [themeName, theme] of Object.entries(computedThemes.value)) {\n      createCssClass(lines, `.v-theme--${themeName}`, [\n        `color-scheme: ${theme.dark ? 'dark' : 'normal'}`,\n        ...genCssVariables(theme),\n      ], parsedOptions.scope)\n    }\n\n    const bgLines: string[] = []\n    const fgLines: string[] = []\n\n    const colors = new Set(Object.values(computedThemes.value).flatMap(theme => Object.keys(theme.colors)))\n    for (const key of colors) {\n      if (key.startsWith('on-')) {\n        createCssClass(fgLines, `.${key}`, [`color: rgb(var(--v-theme-${key})) !important`], parsedOptions.scope)\n      } else {\n        createCssClass(bgLines, `.bg-${key}`, [\n          `--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`,\n          `background-color: rgb(var(--v-theme-${key})) !important`,\n          `color: rgb(var(--v-theme-on-${key})) !important`,\n        ], parsedOptions.scope)\n        createCssClass(fgLines, `.text-${key}`, [`color: rgb(var(--v-theme-${key})) !important`], parsedOptions.scope)\n        createCssClass(fgLines, `.border-${key}`, [`--v-border-color: var(--v-theme-${key})`], parsedOptions.scope)\n      }\n    }\n\n    lines.push(...bgLines, ...fgLines)\n\n    return lines.map((str, i) => i === 0 ? str : `    ${str}`).join('')\n  })\n\n  function install (app: App) {\n    if (parsedOptions.isDisabled) return\n\n    const head = app._context.provides.usehead as HeadClient & VueHeadClient<any> | undefined\n    if (head) {\n      function getHead () {\n        return {\n          style: [{\n            textContent: styles.value,\n            id: parsedOptions.stylesheetId,\n            nonce: parsedOptions.cspNonce || false as never,\n          }],\n        }\n      }\n\n      if (head.push) {\n        const entry = head.push(getHead)\n        if (IN_BROWSER) {\n          watch(styles, () => { entry.patch(getHead) })\n        }\n      } else {\n        if (IN_BROWSER) {\n          head.addHeadObjs(computed(getHead))\n          watchEffect(() => head.updateDOM())\n        } else {\n          head.addHeadObjs(getHead())\n        }\n      }\n    } else {\n      if (IN_BROWSER) {\n        watch(styles, updateStyles, { immediate: true })\n      } else {\n        updateStyles()\n      }\n\n      function updateStyles () {\n        upsertStyles(\n          getOrCreateStyleElement(parsedOptions.stylesheetId, parsedOptions.cspNonce),\n          styles.value\n        )\n      }\n    }\n  }\n\n  const themeClasses = computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${name.value}`)\n\n  return {\n    install,\n    isDisabled: parsedOptions.isDisabled,\n    name,\n    themes,\n    current,\n    computedThemes,\n    themeClasses,\n    styles,\n    global: {\n      name,\n      current,\n    },\n  }\n}\n\nexport function provideTheme (props: { theme?: string }) {\n  getCurrentInstance('provideTheme')\n\n  const theme = inject(ThemeSymbol, null)\n\n  if (!theme) throw new Error('Could not find Vuetify theme injection')\n\n  const name = computed(() => props.theme ?? theme.name.value)\n  const current = computed(() => theme.themes.value[name.value])\n\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${name.value}`)\n\n  const newTheme: ThemeInstance = {\n    ...theme,\n    name,\n    current,\n    themeClasses,\n  }\n\n  provide(ThemeSymbol, newTheme)\n\n  return newTheme\n}\n\nexport function useTheme () {\n  getCurrentInstance('useTheme')\n\n  const theme = inject(ThemeSymbol, null)\n\n  if (!theme) throw new Error('Could not find Vuetify theme injection')\n\n  return theme\n}\n", "// Components\nimport { VLabel } from '@/components/VLabel'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\n\n// Utilities\nimport { genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVFieldLabelProps = propsFactory({\n  floating: Boolean,\n\n  ...makeComponentProps(),\n}, 'VFieldLabel')\n\nexport const VFieldLabel = genericComponent()({\n  name: 'VFieldLabel',\n\n  props: makeVFieldLabelProps(),\n\n  setup (props, { slots }) {\n    useRender(() => (\n      <VLabel\n        class={[\n          'v-field-label',\n          { 'v-field-label--floating': props.floating },\n          props.class,\n        ]}\n        style={ props.style }\n        aria-hidden={ props.floating || undefined }\n        v-slots={ slots }\n      />\n    ))\n\n    return {}\n  },\n})\n\nexport type VFieldLabel = InstanceType<typeof VFieldLabel>\n", "// Composables\nimport { provideDefaults } from '@/composables/defaults'\n\n// Utilities\nimport { toRefs } from 'vue'\nimport { genericComponent, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { DefaultsOptions } from '@/composables/defaults'\n\nexport const makeVDefaultsProviderProps = propsFactory({\n  defaults: Object as PropType<DefaultsOptions>,\n  disabled: Boolean,\n  reset: [Number, String],\n  root: [Boolean, String],\n  scoped: Boolean,\n}, 'VDefaultsProvider')\n\nexport const VDefaultsProvider = genericComponent(false)({\n  name: 'VDefaultsProvider',\n\n  props: makeVDefaultsProviderProps(),\n\n  setup (props, { slots }) {\n    const { defaults, disabled, reset, root, scoped } = toRefs(props)\n\n    provideDefaults(defaults, {\n      reset,\n      root,\n      scoped,\n      disabled,\n    })\n\n    return () => slots.default?.()\n  },\n})\n\nexport type VDefaultsProvider = InstanceType<typeof VDefaultsProvider>\n", "// Styles\nimport './VIcon.sass'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { IconValue, useIcon } from '@/composables/icons'\nimport { makeSizeProps, useSize } from '@/composables/size'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, useTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, ref, Text, toRef } from 'vue'\nimport { convertToUnit, flattenFragments, genericComponent, propsFactory, useRender } from '@/util'\n\nexport const makeVIconProps = propsFactory({\n  color: String,\n  disabled: Boolean,\n  start: Boolean,\n  end: Boolean,\n  icon: IconValue,\n  opacity: [String, Number],\n\n  ...makeComponentProps(),\n  ...makeSizeProps(),\n  ...makeTagProps({ tag: 'i' }),\n  ...makeThemeProps(),\n}, 'VIcon')\n\nexport const VIcon = genericComponent()({\n  name: 'VIcon',\n\n  props: makeVIconProps(),\n\n  setup (props, { attrs, slots }) {\n    const slotIcon = ref<string>()\n\n    const { themeClasses } = useTheme()\n    const { iconData } = useIcon(computed(() => slotIcon.value || props.icon))\n    const { sizeClasses } = useSize(props)\n    const { textColorClasses, textColorStyles } = useTextColor(toRef(props, 'color'))\n\n    useRender(() => {\n      const slotValue = slots.default?.()\n      if (slotValue) {\n        slotIcon.value = flattenFragments(slotValue).filter(node =>\n          node.type === Text && node.children && typeof node.children === 'string'\n        )[0]?.children as string\n      }\n      const hasClick = !!(attrs.onClick || attrs.onClickOnce)\n\n      return (\n        <iconData.value.component\n          tag={ props.tag }\n          icon={ iconData.value.icon }\n          class={[\n            'v-icon',\n            'notranslate',\n            themeClasses.value,\n            sizeClasses.value,\n            textColorClasses.value,\n            {\n              'v-icon--clickable': hasClick,\n              'v-icon--disabled': props.disabled,\n              'v-icon--start': props.start,\n              'v-icon--end': props.end,\n            },\n            props.class,\n          ]}\n          style={[\n            {\n              '--v-icon-opacity': props.opacity,\n            },\n            !sizeClasses.value ? ({\n              fontSize: convertToUnit(props.size),\n              height: convertToUnit(props.size),\n              width: convertToUnit(props.size),\n            }) : undefined,\n            textColorStyles.value,\n            props.style,\n          ]}\n          role={ hasClick ? 'button' : undefined }\n          aria-hidden={ !hasClick }\n          tabindex={ hasClick ? props.disabled ? -1 : 0 : undefined }\n        >\n          { slotValue }\n        </iconData.value.component>\n      )\n    })\n\n    return {}\n  },\n})\n\nexport type VIcon = InstanceType<typeof VIcon>\n", "// Utilities\nimport { computed, isRef } from 'vue'\nimport { destructComputed, getForeground, isCssColor, isParsableColor, parseColor } from '@/util'\n\n// Types\nimport type { CSSProperties, Ref } from 'vue'\n\ntype ColorValue = string | false | null | undefined\n\nexport interface TextColorData {\n  textColorClasses: Ref<string[]>\n  textColorStyles: Ref<CSSProperties>\n}\n\nexport interface BackgroundColorData {\n  backgroundColorClasses: Ref<string[]>\n  backgroundColorStyles: Ref<CSSProperties>\n}\n\n// Composables\nexport function useColor (colors: Ref<{ background?: ColorValue, text?: ColorValue }>) {\n  return destructComputed(() => {\n    const classes: string[] = []\n    const styles: CSSProperties = {}\n\n    if (colors.value.background) {\n      if (isCssColor(colors.value.background)) {\n        styles.backgroundColor = colors.value.background\n\n        if (!colors.value.text && isParsableColor(colors.value.background)) {\n          const backgroundColor = parseColor(colors.value.background)\n          if (backgroundColor.a == null || backgroundColor.a === 1) {\n            const textColor = getForeground(backgroundColor)\n\n            styles.color = textColor\n            styles.caretColor = textColor\n          }\n        }\n      } else {\n        classes.push(`bg-${colors.value.background}`)\n      }\n    }\n\n    if (colors.value.text) {\n      if (isCssColor(colors.value.text)) {\n        styles.color = colors.value.text\n        styles.caretColor = colors.value.text\n      } else {\n        classes.push(`text-${colors.value.text}`)\n      }\n    }\n\n    return { colorClasses: classes, colorStyles: styles }\n  })\n}\n\nexport function useTextColor (color: Ref<ColorValue>): TextColorData\nexport function useTextColor <T extends Record<K, ColorValue>, K extends string> (props: T, name: K): TextColorData\nexport function useTextColor <T extends Record<K, ColorValue>, K extends string> (\n  props: T | Ref<ColorValue>,\n  name?: K\n): TextColorData {\n  const colors = computed(() => ({\n    text: isRef(props) ? props.value : (name ? props[name] : null),\n  }))\n\n  const {\n    colorClasses: textColorClasses,\n    colorStyles: textColorStyles,\n  } = useColor(colors)\n\n  return { textColorClasses, textColorStyles }\n}\n\nexport function useBackgroundColor (color: Ref<ColorValue>): BackgroundColorData\nexport function useBackgroundColor <T extends Record<K, ColorValue>, K extends string> (props: T, name: K): BackgroundColorData\nexport function useBackgroundColor <T extends Record<K, ColorValue>, K extends string> (\n  props: T | Ref<ColorValue>,\n  name?: K\n): BackgroundColorData {\n  const colors = computed(() => ({\n    background: isRef(props) ? props.value : (name ? props[name] : null),\n  }))\n\n  const {\n    colorClasses: backgroundColorClasses,\n    colorStyles: backgroundColorStyles,\n  } = useColor(colors)\n\n  return { backgroundColorClasses, backgroundColorStyles }\n}\n", "// Icons\nimport { aliases, mdi } from '@/iconsets/mdi'\n\n// Utilities\nimport { computed, inject, unref } from 'vue'\nimport { consoleWarn, defineComponent, genericComponent, mergeDeep, propsFactory } from '@/util'\n\n// Types\nimport type { InjectionKey, PropType, Ref } from 'vue'\nimport type { JSXComponent } from '@/util'\n\nexport type IconValue =\n  | string\n  | (string | [path: string, opacity: number])[]\n  | JSXComponent\nexport const IconValue = [String, Function, Object, Array] as PropType<IconValue>\n\nexport interface IconAliases {\n  [name: string]: IconValue\n  complete: IconValue\n  cancel: IconValue\n  close: IconValue\n  delete: IconValue\n  clear: IconValue\n  success: IconValue\n  info: IconValue\n  warning: IconValue\n  error: IconValue\n  prev: IconValue\n  next: IconValue\n  checkboxOn: IconValue\n  checkboxOff: IconValue\n  checkboxIndeterminate: IconValue\n  delimiter: IconValue\n  sortAsc: IconValue\n  sortDesc: IconValue\n  expand: IconValue\n  menu: IconValue\n  subgroup: IconValue\n  dropdown: IconValue\n  radioOn: IconValue\n  radioOff: IconValue\n  edit: IconValue\n  ratingEmpty: IconValue\n  ratingFull: IconValue\n  ratingHalf: IconValue\n  loading: IconValue\n  first: IconValue\n  last: IconValue\n  unfold: IconValue\n  file: IconValue\n  plus: IconValue\n  minus: IconValue\n  calendar: IconValue\n}\n\nexport interface IconProps {\n  tag: string | JSXComponent\n  icon?: IconValue\n  disabled?: Boolean\n}\n\ntype IconComponent = JSXComponent<IconProps>\n\nexport interface IconSet {\n  component: IconComponent\n}\n\nexport type InternalIconOptions = {\n  defaultSet: string\n  aliases: Partial<IconAliases>\n  sets: Record<string, IconSet>\n}\n\nexport type IconOptions = Partial<InternalIconOptions>\n\ntype IconInstance = {\n  component: IconComponent\n  icon?: IconValue\n}\n\nexport const IconSymbol: InjectionKey<InternalIconOptions> = Symbol.for('vuetify:icons')\n\nexport const makeIconProps = propsFactory({\n  icon: {\n    type: IconValue,\n  },\n  // Could not remove this and use makeTagProps, types complained because it is not required\n  tag: {\n    type: [String, Object, Function] as PropType<string | JSXComponent>,\n    required: true,\n  },\n}, 'icon')\n\nexport const VComponentIcon = genericComponent()({\n  name: 'VComponentIcon',\n\n  props: makeIconProps(),\n\n  setup (props, { slots }) {\n    return () => {\n      const Icon = props.icon as JSXComponent\n      return (\n        <props.tag>\n          { props.icon ? <Icon /> : slots.default?.() }\n        </props.tag>\n      )\n    }\n  },\n})\nexport type VComponentIcon = InstanceType<typeof VComponentIcon>\n\nexport const VSvgIcon = defineComponent({\n  name: 'VSvgIcon',\n\n  inheritAttrs: false,\n\n  props: makeIconProps(),\n\n  setup (props, { attrs }) {\n    return () => {\n      return (\n        <props.tag { ...attrs } style={ null }>\n          <svg\n            class=\"v-icon__svg\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 24 24\"\n            role=\"img\"\n            aria-hidden=\"true\"\n          >\n            { Array.isArray(props.icon)\n              ? props.icon.map(path => (\n                Array.isArray(path)\n                  ? <path d={ path[0] as string } fill-opacity={ path[1] }></path>\n                  : <path d={ path as string }></path>\n              ))\n              : <path d={ props.icon as string }></path>\n            }\n          </svg>\n        </props.tag>\n      )\n    }\n  },\n})\nexport type VSvgIcon = InstanceType<typeof VSvgIcon>\n\nexport const VLigatureIcon = defineComponent({\n  name: 'VLigatureIcon',\n\n  props: makeIconProps(),\n\n  setup (props) {\n    return () => {\n      return <props.tag>{ props.icon }</props.tag>\n    }\n  },\n})\nexport type VLigatureIcon = InstanceType<typeof VLigatureIcon>\n\nexport const VClassIcon = defineComponent({\n  name: 'VClassIcon',\n\n  props: makeIconProps(),\n\n  setup (props) {\n    return () => {\n      return <props.tag class={ props.icon }></props.tag>\n    }\n  },\n})\nexport type VClassIcon = InstanceType<typeof VClassIcon>\n\nfunction genDefaults (): Record<string, IconSet> {\n  return {\n    svg: {\n      component: VSvgIcon,\n    },\n    class: {\n      component: VClassIcon,\n    },\n  }\n}\n\n// Composables\nexport function createIcons (options?: IconOptions) {\n  const sets = genDefaults()\n  const defaultSet = options?.defaultSet ?? 'mdi'\n\n  if (defaultSet === 'mdi' && !sets.mdi) {\n    sets.mdi = mdi\n  }\n\n  return mergeDeep({\n    defaultSet,\n    sets,\n    aliases: {\n      ...aliases,\n      /* eslint-disable max-len */\n      vuetify: [\n        'M8.2241 14.2009L12 21L22 3H14.4459L8.2241 14.2009Z',\n        ['M7.26303 12.4733L7.00113 12L2 3H12.5261C12.5261 3 12.5261 3 12.5261 3L7.26303 12.4733Z', 0.6],\n      ],\n      'vuetify-outline': 'svg:M7.26 12.47 12.53 3H2L7.26 12.47ZM14.45 3 8.22 14.2 12 21 22 3H14.45ZM18.6 5 12 16.88 10.51 14.2 15.62 5ZM7.26 8.35 5.4 5H9.13L7.26 8.35Z',\n      'vuetify-play': [\n        'm6.376 13.184-4.11-7.192C1.505 4.66 2.467 3 4.003 3h8.532l-.953 1.576-.006.01-.396.677c-.429.732-.214 1.507.194 2.015.404.503 1.092.878 1.869.806a3.72 3.72 0 0 1 1.005.022c.276.053.434.143.523.237.138.146.38.635-.25 2.09-.893 1.63-1.553 1.722-1.847 1.677-.213-.033-.468-.158-.756-.406a4.95 4.95 0 0 1-.8-.927c-.39-.564-1.04-.84-1.66-.846-.625-.006-1.316.27-1.693.921l-.478.826-.911 1.506Z',\n        ['M9.093 11.552c.046-.079.144-.15.32-.148a.53.53 0 0 1 .43.207c.285.414.636.847 1.046 1.2.405.35.914.662 1.516.754 1.334.205 2.502-.698 3.48-2.495l.014-.028.013-.03c.687-1.574.774-2.852-.005-3.675-.37-.391-.861-.586-1.333-.676a5.243 5.243 0 0 0-1.447-.044c-.173.016-.393-.073-.54-.257-.145-.18-.127-.316-.082-.392l.393-.672L14.287 3h5.71c1.536 0 2.499 1.659 1.737 2.992l-7.997 13.996c-.768 1.344-2.706 1.344-3.473 0l-3.037-5.314 1.377-2.278.004-.006.004-.007.481-.831Z', 0.6],\n      ],\n      /* eslint-enable max-len */\n    },\n  }, options) as InternalIconOptions\n}\n\nexport const useIcon = (props: Ref<IconValue | undefined>) => {\n  const icons = inject(IconSymbol)\n\n  if (!icons) throw new Error('Missing Vuetify Icons provide!')\n\n  const iconData = computed<IconInstance>(() => {\n    const iconAlias = unref(props)\n\n    if (!iconAlias) return { component: VComponentIcon }\n\n    let icon: IconValue | undefined = iconAlias\n\n    if (typeof icon === 'string') {\n      icon = icon.trim()\n\n      if (icon.startsWith('$')) {\n        icon = icons.aliases?.[icon.slice(1)]\n      }\n    }\n\n    if (!icon) consoleWarn(`Could not find aliased icon \"${iconAlias}\"`)\n\n    if (Array.isArray(icon)) {\n      return {\n        component: VSvgIcon,\n        icon,\n      }\n    } else if (typeof icon !== 'string') {\n      return {\n        component: VComponentIcon,\n        icon,\n      }\n    }\n\n    const iconSetName = Object.keys(icons.sets).find(\n      setName => typeof icon === 'string' && icon.startsWith(`${setName}:`)\n    )\n\n    const iconName = iconSetName ? icon.slice(iconSetName.length + 1) : icon\n    const iconSet = icons.sets[iconSetName ?? icons.defaultSet]\n\n    return {\n      component: iconSet.component,\n      icon: iconName,\n    }\n  })\n\n  return { iconData }\n}\n", "// Utilities\nimport { convertToUnit, destructComputed, getCurrentInstanceName, includes, propsFactory } from '@/util'\n\n// Types\nconst predefinedSizes = ['x-small', 'small', 'default', 'large', 'x-large']\n\nexport interface SizeProps {\n  size?: string | number\n}\n\n// Composables\nexport const makeSizeProps = propsFactory({\n  size: {\n    type: [String, Number],\n    default: 'default',\n  },\n}, 'size')\n\nexport function useSize (\n  props: SizeProps,\n  name = getCurrentInstanceName(),\n) {\n  return destructComputed(() => {\n    let sizeClasses\n    let sizeStyles\n    if (includes(predefinedSizes, props.size)) {\n      sizeClasses = `${name}--size-${props.size}`\n    } else if (props.size) {\n      sizeStyles = {\n        width: convertToUnit(props.size),\n        height: convertToUnit(props.size),\n      }\n    }\n    return { sizeClasses, sizeStyles }\n  })\n}\n", "// Utilities\nimport { propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { JSXComponent } from '@/util'\n\n// Types\nexport interface TagProps {\n  tag: string | JSXComponent\n}\n\n// Composables\nexport const makeTagProps = propsFactory({\n  tag: {\n    type: [String, Object, Function] as PropType<string | JSXComponent>,\n    default: 'div',\n  },\n}, 'tag')\n", "// Utilities\nimport { effectScope, onScopeDispose, watch } from 'vue'\n\n// Types\nimport type { EffectScope, WatchSource } from 'vue'\n\nexport function useToggleScope (source: WatchSource<boolean>, fn: (reset: () => void) => void) {\n  let scope: EffectScope | undefined\n  function start () {\n    scope = effectScope()\n    scope.run(() => fn.length\n      ? fn(() => { scope?.stop(); start() })\n      : (fn as any)()\n    )\n  }\n\n  watch(source, active => {\n    if (active && !scope) {\n      start()\n    } else if (!active) {\n      scope?.stop()\n      scope = undefined\n    }\n  }, { immediate: true })\n\n  onScopeDispose(() => {\n    scope?.stop()\n  })\n}\n", "// Composables\nimport { useToggleScope } from '@/composables/toggleScope'\n\n// Utilities\nimport { computed, ref, toRaw, watch } from 'vue'\nimport { getCurrentInstance, toKebabCase } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\nimport type { EventProp } from '@/util'\n\ntype InnerVal<T> = T extends any[] ? Readonly<T> : T\n\n// Composables\nexport function useProxiedModel<\n  Props extends object & { [key in Prop as `onUpdate:${Prop}`]: EventProp | undefined },\n  Prop extends Extract<keyof Props, string>,\n  Inner = Props[Prop],\n> (\n  props: Props,\n  prop: Prop,\n  defaultValue?: Props[Prop],\n  transformIn: (value?: Props[Prop]) => Inner = (v: any) => v,\n  transformOut: (value: Inner) => Props[Prop] = (v: any) => v,\n) {\n  const vm = getCurrentInstance('useProxiedModel')\n  const internal = ref(props[prop] !== undefined ? props[prop] : defaultValue) as Ref<Props[Prop]>\n  const kebabProp = toKebabCase(prop)\n  const checkKebab = kebabProp !== prop\n\n  const isControlled = checkKebab\n    ? computed(() => {\n      void props[prop]\n      return !!(\n        (vm.vnode.props?.hasOwnProperty(prop) || vm.vnode.props?.hasOwnProperty(kebabProp)) &&\n        (vm.vnode.props?.hasOwnProperty(`onUpdate:${prop}`) || vm.vnode.props?.hasOwnProperty(`onUpdate:${kebabProp}`))\n      )\n    })\n    : computed(() => {\n      void props[prop]\n      return !!(vm.vnode.props?.hasOwnProperty(prop) && vm.vnode.props?.hasOwnProperty(`onUpdate:${prop}`))\n    })\n\n  useToggleScope(() => !isControlled.value, () => {\n    watch(() => props[prop], val => {\n      internal.value = val\n    })\n  })\n\n  const model = computed({\n    get (): any {\n      const externalValue = props[prop]\n      return transformIn(isControlled.value ? externalValue : internal.value)\n    },\n    set (internalValue) {\n      const newValue = transformOut(internalValue)\n      const value = toRaw(isControlled.value ? props[prop] : internal.value)\n      if (value === newValue || transformIn(value) === internalValue) {\n        return\n      }\n      internal.value = newValue\n      vm?.emit(`update:${prop}`, newValue)\n    },\n  }) as any as Ref<InnerVal<Inner>> & { readonly externalValue: Props[Prop] }\n\n  Object.defineProperty(model, 'externalValue', {\n    get: () => isControlled.value ? props[prop] : internal.value,\n  })\n\n  return model\n}\n", "// Utilities\nimport { computed, inject, provide, ref } from 'vue'\nimport { createVuetifyAdapter } from '@/locale/adapters/vuetify'\n\n// Types\nimport type { InjectionKey, Ref } from 'vue'\n\nexport interface LocaleMessages {\n  [key: string]: LocaleMessages | string\n}\n\nexport interface LocaleOptions {\n  messages?: LocaleMessages\n  locale?: string\n  fallback?: string\n  adapter?: LocaleInstance\n}\n\nexport interface LocaleInstance {\n  name: string\n  messages: Ref<LocaleMessages>\n  current: Ref<string>\n  fallback: Ref<string>\n  t: (key: string, ...params: unknown[]) => string\n  n: (value: number) => string\n  provide: (props: LocaleOptions) => LocaleInstance\n}\n\nexport const LocaleSymbol: InjectionKey<LocaleInstance & RtlInstance> = Symbol.for('vuetify:locale')\n\nfunction isLocaleInstance (obj: any): obj is LocaleInstance {\n  return obj.name != null\n}\n\nexport function createLocale (options?: LocaleOptions & RtlOptions) {\n  const i18n = options?.adapter && isLocaleInstance(options?.adapter) ? options?.adapter : createVuetifyAdapter(options)\n  const rtl = createRtl(i18n, options)\n\n  return { ...i18n, ...rtl }\n}\n\nexport function useLocale () {\n  const locale = inject(LocaleSymbol)\n\n  if (!locale) throw new Error('[Vuetify] Could not find injected locale instance')\n\n  return locale\n}\n\nexport function provideLocale (props: LocaleOptions & RtlProps) {\n  const locale = inject(LocaleSymbol)\n\n  if (!locale) throw new Error('[Vuetify] Could not find injected locale instance')\n\n  const i18n = locale.provide(props)\n  const rtl = provideRtl(i18n, locale.rtl, props)\n\n  const data = { ...i18n, ...rtl }\n\n  provide(LocaleSymbol, data)\n\n  return data\n}\n\n// RTL\n\nexport interface RtlOptions {\n  rtl?: Record<string, boolean>\n}\n\nexport interface RtlProps {\n  rtl?: boolean\n}\n\nexport interface RtlInstance {\n  isRtl: Ref<boolean>\n  rtl: Ref<Record<string, boolean>>\n  rtlClasses: Ref<string>\n}\n\nexport const RtlSymbol: InjectionKey<RtlInstance> = Symbol.for('vuetify:rtl')\n\nfunction genDefaults () {\n  return {\n    af: false,\n    ar: true,\n    bg: false,\n    ca: false,\n    ckb: false,\n    cs: false,\n    de: false,\n    el: false,\n    en: false,\n    es: false,\n    et: false,\n    fa: true,\n    fi: false,\n    fr: false,\n    hr: false,\n    hu: false,\n    he: true,\n    id: false,\n    it: false,\n    ja: false,\n    km: false,\n    ko: false,\n    lv: false,\n    lt: false,\n    nl: false,\n    no: false,\n    pl: false,\n    pt: false,\n    ro: false,\n    ru: false,\n    sk: false,\n    sl: false,\n    srCyrl: false,\n    srLatn: false,\n    sv: false,\n    th: false,\n    tr: false,\n    az: false,\n    uk: false,\n    vi: false,\n    zhHans: false,\n    zhHant: false,\n  }\n}\n\nexport function createRtl (i18n: LocaleInstance, options?: RtlOptions): RtlInstance {\n  const rtl = ref<Record<string, boolean>>(options?.rtl ?? genDefaults())\n  const isRtl = computed(() => rtl.value[i18n.current.value] ?? false)\n\n  return {\n    isRtl,\n    rtl,\n    rtlClasses: computed(() => `v-locale--is-${isRtl.value ? 'rtl' : 'ltr'}`),\n  }\n}\n\nexport function provideRtl (locale: LocaleInstance, rtl: RtlInstance['rtl'], props: RtlProps): RtlInstance {\n  const isRtl = computed(() => props.rtl ?? rtl.value[locale.current.value] ?? false)\n\n  return {\n    isRtl,\n    rtl,\n    rtlClasses: computed(() => `v-locale--is-${isRtl.value ? 'rtl' : 'ltr'}`),\n  }\n}\n\nexport function useRtl () {\n  const locale = inject(LocaleSymbol)\n\n  if (!locale) throw new Error('[Vuetify] Could not find injected rtl instance')\n\n  return { isRtl: locale.isRtl, rtlClasses: locale.rtlClasses }\n}\n", "// Components\nimport { VIcon } from '@/components/VIcon'\n\n// Composables\nimport { useLocale } from '@/composables/locale'\n\n// Utilities\nimport { callEvent } from '@/util'\n\n// Types\nimport type { IconValue } from '@/composables/icons'\nimport type { EventProp } from '@/util'\n\ntype names = 'clear' | 'prepend' | 'append' | 'appendInner' | 'prependInner'\n\ntype InputIconProps<T extends names> = {\n  label: string | undefined\n} & {\n  [K in `${T}Icon`]: IconValue | undefined\n} & {\n  [K in `onClick:${T}`]: EventProp | undefined\n}\n\ntype Listeners<T extends {}, U = keyof T> = U extends `onClick:${infer V extends names}` ? V : never\n\nexport function useInputIcon<T extends {}, K extends names = Listeners<T>> (props: T & InputIconProps<K>) {\n  const { t } = useLocale()\n\n  function InputIcon ({ name, color }: { name: Extract<names, K>, color?: string }) {\n    const localeKey = {\n      prepend: 'prependAction',\n      prependInner: 'prependAction',\n      append: 'appendAction',\n      appendInner: 'appendAction',\n      clear: 'clear',\n    }[name]\n    const listener = props[`onClick:${name}`] as EventProp | undefined\n\n    function onKeydown (e: KeyboardEvent) {\n      if (e.key !== 'Enter' && e.key !== ' ') return\n\n      e.preventDefault()\n      e.stopPropagation()\n      callEvent(listener, new PointerEvent('click', e))\n    }\n\n    const label = listener && localeKey\n      ? t(`$vuetify.input.${localeKey}`, props.label ?? '')\n      : undefined\n\n    return (\n      <VIcon\n        icon={ props[`${name}Icon`] }\n        aria-label={ label }\n        onClick={ listener }\n        onKeydown={ onKeydown }\n        color={ color }\n      />\n    )\n  }\n\n  return { InputIcon }\n}\n", "// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed } from 'vue'\nimport { EventProp, getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nexport interface FocusProps {\n  focused: boolean\n  'onUpdate:focused': ((focused: boolean) => any) | undefined\n}\n\n// Composables\nexport const makeFocusProps = propsFactory({\n  focused: Boolean,\n  'onUpdate:focused': EventProp<[boolean]>(),\n}, 'focus')\n\nexport function useFocus (\n  props: FocusProps,\n  name = getCurrentInstanceName()\n) {\n  const isFocused = useProxiedModel(props, 'focused')\n  const focusClasses = computed(() => {\n    return ({\n      [`${name}--focused`]: isFocused.value,\n    })\n  })\n\n  function focus () {\n    isFocused.value = true\n  }\n\n  function blur () {\n    isFocused.value = false\n  }\n\n  return { focusClasses, isFocused, focus, blur }\n}\n", "// Styles\nimport './VProgressLinear.sass'\n\n// Composables\nimport { useBackgroundColor, useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { useIntersectionObserver } from '@/composables/intersectionObserver'\nimport { useRtl } from '@/composables/locale'\nimport { makeLocationProps, useLocation } from '@/composables/location'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { makeRoundedProps, useRounded } from '@/composables/rounded'\nimport { makeTagProps } from '@/composables/tag'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\n\n// Utilities\nimport { computed, Transition } from 'vue'\nimport { clamp, convertToUnit, genericComponent, IN_BROWSER, propsFactory, useRender } from '@/util'\n\ntype VProgressLinearSlots = {\n  default: { value: number, buffer: number }\n}\n\nexport const makeVProgressLinearProps = propsFactory({\n  absolute: Boolean,\n  active: {\n    type: Boolean,\n    default: true,\n  },\n  bgColor: String,\n  bgOpacity: [Number, String],\n  bufferValue: {\n    type: [Number, String],\n    default: 0,\n  },\n  bufferColor: String,\n  bufferOpacity: [Number, String],\n  clickable: Boolean,\n  color: String,\n  height: {\n    type: [Number, String],\n    default: 4,\n  },\n  indeterminate: Boolean,\n  max: {\n    type: [Number, String],\n    default: 100,\n  },\n  modelValue: {\n    type: [Number, String],\n    default: 0,\n  },\n  opacity: [Number, String],\n  reverse: Boolean,\n  stream: Boolean,\n  striped: Boolean,\n  roundedBar: Boolean,\n\n  ...makeComponentProps(),\n  ...makeLocationProps({ location: 'top' } as const),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n}, 'VProgressLinear')\n\nexport const VProgressLinear = genericComponent<VProgressLinearSlots>()({\n  name: 'VProgressLinear',\n\n  props: makeVProgressLinearProps(),\n\n  emits: {\n    'update:modelValue': (value: number) => true,\n  },\n\n  setup (props, { slots }) {\n    const progress = useProxiedModel(props, 'modelValue')\n    const { isRtl, rtlClasses } = useRtl()\n    const { themeClasses } = provideTheme(props)\n    const { locationStyles } = useLocation(props)\n    const { textColorClasses, textColorStyles } = useTextColor(props, 'color')\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles,\n    } = useBackgroundColor(computed(() => props.bgColor || props.color))\n    const {\n      backgroundColorClasses: bufferColorClasses,\n      backgroundColorStyles: bufferColorStyles,\n    } = useBackgroundColor(computed(() => props.bufferColor || props.bgColor || props.color))\n    const {\n      backgroundColorClasses: barColorClasses,\n      backgroundColorStyles: barColorStyles,\n    } = useBackgroundColor(props, 'color')\n    const { roundedClasses } = useRounded(props)\n    const { intersectionRef, isIntersecting } = useIntersectionObserver()\n\n    const max = computed(() => parseFloat(props.max))\n    const height = computed(() => parseFloat(props.height))\n    const normalizedBuffer = computed(() => clamp(parseFloat(props.bufferValue) / max.value * 100, 0, 100))\n    const normalizedValue = computed(() => clamp(parseFloat(progress.value) / max.value * 100, 0, 100))\n    const isReversed = computed(() => isRtl.value !== props.reverse)\n    const transition = computed(() => props.indeterminate ? 'fade-transition' : 'slide-x-transition')\n    const isForcedColorsModeActive = IN_BROWSER && window.matchMedia?.('(forced-colors: active)').matches\n\n    function handleClick (e: MouseEvent) {\n      if (!intersectionRef.value) return\n\n      const { left, right, width } = intersectionRef.value.getBoundingClientRect()\n      const value = isReversed.value ? (width - e.clientX) + (right - width) : e.clientX - left\n\n      progress.value = Math.round(value / width * max.value)\n    }\n\n    useRender(() => (\n      <props.tag\n        ref={ intersectionRef }\n        class={[\n          'v-progress-linear',\n          {\n            'v-progress-linear--absolute': props.absolute,\n            'v-progress-linear--active': props.active && isIntersecting.value,\n            'v-progress-linear--reverse': isReversed.value,\n            'v-progress-linear--rounded': props.rounded,\n            'v-progress-linear--rounded-bar': props.roundedBar,\n            'v-progress-linear--striped': props.striped,\n          },\n          roundedClasses.value,\n          themeClasses.value,\n          rtlClasses.value,\n          props.class,\n        ]}\n        style={[\n          {\n            bottom: props.location === 'bottom' ? 0 : undefined,\n            top: props.location === 'top' ? 0 : undefined,\n            height: props.active ? convertToUnit(height.value) : 0,\n            '--v-progress-linear-height': convertToUnit(height.value),\n            ...(props.absolute ? locationStyles.value : {}),\n          },\n          props.style,\n        ]}\n        role=\"progressbar\"\n        aria-hidden={ props.active ? 'false' : 'true' }\n        aria-valuemin=\"0\"\n        aria-valuemax={ props.max }\n        aria-valuenow={ props.indeterminate ? undefined : Math.min(parseFloat(progress.value), max.value) }\n        onClick={ props.clickable && handleClick }\n      >\n        { props.stream && (\n          <div\n            key=\"stream\"\n            class={[\n              'v-progress-linear__stream',\n              textColorClasses.value,\n            ]}\n            style={{\n              ...textColorStyles.value,\n              [isReversed.value ? 'left' : 'right']: convertToUnit(-height.value),\n              borderTop: `${convertToUnit(height.value / 2)} dotted`,\n              opacity: parseFloat(props.bufferOpacity!),\n              top: `calc(50% - ${convertToUnit(height.value / 4)})`,\n              width: convertToUnit(100 - normalizedBuffer.value, '%'),\n              '--v-progress-linear-stream-to': convertToUnit(height.value * (isReversed.value ? 1 : -1)),\n            }}\n          />\n        )}\n\n        <div\n          class={[\n            'v-progress-linear__background',\n            !isForcedColorsModeActive ? backgroundColorClasses.value : undefined,\n          ]}\n          style={[\n            backgroundColorStyles.value,\n            {\n              opacity: parseFloat(props.bgOpacity!),\n              width: props.stream ? 0 : undefined,\n            },\n          ]}\n        />\n\n        <div\n          class={[\n            'v-progress-linear__buffer',\n            !isForcedColorsModeActive ? bufferColorClasses.value : undefined,\n          ]}\n          style={[\n            bufferColorStyles.value,\n            {\n              opacity: parseFloat(props.bufferOpacity!),\n              width: convertToUnit(normalizedBuffer.value, '%'),\n            },\n          ]}\n        />\n\n        <Transition name={ transition.value }>\n          { !props.indeterminate ? (\n            <div\n              class={[\n                'v-progress-linear__determinate',\n                !isForcedColorsModeActive ? barColorClasses.value : undefined,\n              ]}\n              style={[\n                barColorStyles.value,\n                { width: convertToUnit(normalizedValue.value, '%') },\n              ]}\n            />\n          ) : (\n            <div class=\"v-progress-linear__indeterminate\">\n              {['long', 'short'].map(bar => (\n                <div\n                  key={ bar }\n                  class={[\n                    'v-progress-linear__indeterminate',\n                    bar,\n                    !isForcedColorsModeActive ? barColorClasses.value : undefined,\n                  ]}\n                  style={ barColorStyles.value }\n                />\n              ))}\n            </div>\n          )}\n        </Transition>\n\n        { slots.default && (\n          <div class=\"v-progress-linear__content\">\n            { slots.default({ value: normalizedValue.value, buffer: normalizedBuffer.value }) }\n          </div>\n        )}\n      </props.tag>\n    ))\n\n    return {}\n  },\n})\n\nexport type VProgressLinear = InstanceType<typeof VProgressLinear>\n", "// Utilities\nimport { onBeforeUnmount, ref, shallowRef, watch } from 'vue'\nimport { SUPPORTS_INTERSECTION } from '@/util'\n\nexport function useIntersectionObserver (callback?: IntersectionObserverCallback, options?: IntersectionObserverInit) {\n  const intersectionRef = ref<HTMLElement>()\n  const isIntersecting = shallowRef(false)\n\n  if (SUPPORTS_INTERSECTION) {\n    const observer = new IntersectionObserver((entries: IntersectionObserverEntry[]) => {\n      callback?.(entries, observer)\n\n      isIntersecting.value = !!entries.find(entry => entry.isIntersecting)\n    }, options)\n\n    onBeforeUnmount(() => {\n      observer.disconnect()\n    })\n\n    watch(intersectionRef, (newValue, oldValue) => {\n      if (oldValue) {\n        observer.unobserve(oldValue)\n        isIntersecting.value = false\n      }\n\n      if (newValue) observer.observe(newValue)\n    }, {\n      flush: 'post',\n    })\n  }\n\n  return { intersectionRef, isIntersecting }\n}\n", "// Composables\nimport { useRtl } from '@/composables/locale'\n\n// Utilities\nimport { computed } from 'vue'\nimport { parseAnchor, propsFactory } from '@/util'\n\n// Types\nimport type { CSSProperties, PropType } from 'vue'\nimport type { Anchor } from '@/util'\n\nconst oppositeMap = {\n  center: 'center',\n  top: 'bottom',\n  bottom: 'top',\n  left: 'right',\n  right: 'left',\n} as const\n\nexport interface LocationProps {\n  location: Anchor | null | undefined\n}\n\nexport const makeLocationProps = propsFactory({\n  location: String as PropType<Anchor | null>,\n}, 'location')\n\nexport function useLocation (props: LocationProps, opposite = false, offset?: (side: string) => number) {\n  const { isRtl } = useRtl()\n\n  const locationStyles = computed(() => {\n    if (!props.location) return {}\n\n    const { side, align } = parseAnchor(\n      props.location.split(' ').length > 1\n        ? props.location\n        : `${props.location} center` as Anchor,\n      isRtl.value\n    )\n\n    function getOffset (side: string) {\n      return offset\n        ? offset(side)\n        : 0\n    }\n\n    const styles = {} as CSSProperties\n\n    if (side !== 'center') {\n      if (opposite) styles[oppositeMap[side]] = `calc(100% - ${getOffset(side)}px)`\n      else styles[side] = 0\n    }\n    if (align !== 'center') {\n      if (opposite) styles[oppositeMap[align]] = `calc(100% - ${getOffset(align)}px)`\n      else styles[align] = 0\n    } else {\n      if (side === 'center') styles.top = styles.left = '50%'\n      else {\n        styles[({\n          top: 'left',\n          bottom: 'left',\n          left: 'top',\n          right: 'top',\n        } as const)[side]] = '50%'\n      }\n      styles.transform = {\n        top: 'translateX(-50%)',\n        bottom: 'translateX(-50%)',\n        left: 'translateY(-50%)',\n        right: 'translateY(-50%)',\n        center: 'translate(-50%, -50%)',\n      }[side]\n    }\n\n    return styles\n  })\n\n  return { locationStyles }\n}\n", "// Utilities\nimport { computed, isRef } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { Ref } from 'vue'\n\ntype RoundedValue = boolean | string | number | null | undefined\n\nexport interface RoundedProps {\n  rounded?: RoundedValue\n  tile?: boolean\n}\n\ntype RoundedData = {\n  roundedClasses: Ref<string[]>\n}\n\n// Composables\nexport const makeRoundedProps = propsFactory({\n  rounded: {\n    type: [Boolean, Number, String],\n    default: undefined,\n  },\n  tile: Boolean,\n}, 'rounded')\n\nexport function useRounded (\n  props: RoundedProps | Ref<RoundedValue>,\n  name = getCurrentInstanceName(),\n): RoundedData {\n  const roundedClasses = computed(() => {\n    const rounded = isRef(props) ? props.value : props.rounded\n    const tile = isRef(props) ? props.value : props.tile\n    const classes: string[] = []\n\n    if (rounded === true || rounded === '') {\n      classes.push(`${name}--rounded`)\n    } else if (\n      typeof rounded === 'string' ||\n      rounded === 0\n    ) {\n      for (const value of String(rounded).split(' ')) {\n        classes.push(`rounded-${value}`)\n      }\n    } else if (tile || rounded === false) {\n      classes.push('rounded-0')\n    }\n\n    return classes\n  })\n\n  return { roundedClasses }\n}\n", "// Components\nimport { VProgressLinear } from '@/components/VProgressLinear'\n\n// Utilities\nimport { computed } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { ExtractPropTypes, SetupContext } from 'vue'\nimport type { SlotsToProps } from '@/util'\n\nexport interface LoaderSlotProps {\n  color: string | undefined\n  isActive: boolean\n}\n\nexport interface LoaderProps {\n  loading?: boolean | string\n}\n\n// Composables\nexport const makeLoaderProps = propsFactory({\n  loading: [Boolean, String],\n}, 'loader')\n\nexport function useLoader (\n  props: LoaderProps,\n  name = getCurrentInstanceName(),\n) {\n  const loaderClasses = computed(() => ({\n    [`${name}--loading`]: props.loading,\n  }))\n\n  return { loaderClasses }\n}\n\nexport function LoaderSlot (\n  props: {\n    absolute?: boolean\n    active: boolean\n    name: string\n    color?: string\n  } & ExtractPropTypes<SlotsToProps<{\n    default: LoaderSlotProps\n  }>>,\n  { slots }: SetupContext,\n) {\n  return (\n    <div class={ `${props.name}__loader` }>\n      { slots.default?.({\n        color: props.color,\n        isActive: props.active,\n      } as LoaderSlotProps) || (\n        <VProgressLinear\n          absolute={ props.absolute }\n          active={ props.active }\n          color={ props.color }\n          height=\"2\"\n          indeterminate\n        />\n      )}\n    </div>\n  )\n}\n", "// Styles\nimport './VInput.sass'\n\n// Components\nimport { useInputIcon } from '@/components/VInput/InputIcon'\nimport { VMessages } from '@/components/VMessages/VMessages'\n\n// Composables\nimport { makeComponentProps } from '@/composables/component'\nimport { makeDensityProps, useDensity } from '@/composables/density'\nimport { makeDimensionProps, useDimension } from '@/composables/dimensions'\nimport { IconValue } from '@/composables/icons'\nimport { useRtl } from '@/composables/locale'\nimport { makeThemeProps, provideTheme } from '@/composables/theme'\nimport { makeValidationProps, useValidation } from '@/composables/validation'\n\n// Utilities\nimport { computed, useId } from 'vue'\nimport { EventProp, genericComponent, pick, propsFactory, useRender } from '@/util'\n\n// Types\nimport type { ComputedRef, PropType, Ref } from 'vue'\nimport type { VMessageSlot } from '@/components/VMessages/VMessages'\nimport type { GenericProps } from '@/util'\n\nexport interface VInputSlot {\n  id: ComputedRef<string>\n  messagesId: ComputedRef<string>\n  isDirty: ComputedRef<boolean>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isPristine: Ref<boolean>\n  isValid: ComputedRef<boolean | null>\n  isValidating: Ref<boolean>\n  reset: () => void\n  resetValidation: () => void\n  validate: () => void\n}\n\nexport const makeVInputProps = propsFactory({\n  id: String,\n  appendIcon: IconValue,\n  baseColor: String,\n  centerAffix: {\n    type: Boolean,\n    default: true,\n  },\n  color: String,\n  glow: Boolean,\n  iconColor: [Boolean, String],\n  prependIcon: IconValue,\n  hideDetails: [Boolean, String] as PropType<boolean | 'auto'>,\n  hideSpinButtons: Boolean,\n  hint: String,\n  persistentHint: Boolean,\n  messages: {\n    type: [Array, String] as PropType<string | readonly string[]>,\n    default: () => ([]),\n  },\n  direction: {\n    type: String as PropType<'horizontal' | 'vertical'>,\n    default: 'horizontal',\n    validator: (v: any) => ['horizontal', 'vertical'].includes(v),\n  },\n\n  'onClick:prepend': EventProp<[MouseEvent]>(),\n  'onClick:append': EventProp<[MouseEvent]>(),\n\n  ...makeComponentProps(),\n  ...makeDensityProps(),\n  ...pick(makeDimensionProps(), [\n    'maxWidth',\n    'minWidth',\n    'width',\n  ]),\n  ...makeThemeProps(),\n  ...makeValidationProps(),\n}, 'VInput')\n\nexport type VInputSlots = {\n  default: VInputSlot\n  prepend: VInputSlot\n  append: VInputSlot\n  details: VInputSlot\n  message: VMessageSlot\n}\n\nexport const VInput = genericComponent<new <T>(\n  props: {\n    modelValue?: T | null\n    'onUpdate:modelValue'?: (value: T | null) => void\n  },\n  slots: VInputSlots,\n) => GenericProps<typeof props, typeof slots>>()({\n  name: 'VInput',\n\n  props: {\n    ...makeVInputProps(),\n  },\n\n  emits: {\n    'update:modelValue': (value: any) => true,\n  },\n\n  setup (props, { attrs, slots, emit }) {\n    const { densityClasses } = useDensity(props)\n    const { dimensionStyles } = useDimension(props)\n    const { themeClasses } = provideTheme(props)\n    const { rtlClasses } = useRtl()\n    const { InputIcon } = useInputIcon(props)\n\n    const uid = useId()\n    const id = computed(() => props.id || `input-${uid}`)\n    const messagesId = computed(() => `${id.value}-messages`)\n\n    const {\n      errorMessages,\n      isDirty,\n      isDisabled,\n      isReadonly,\n      isPristine,\n      isValid,\n      isValidating,\n      reset,\n      resetValidation,\n      validate,\n      validationClasses,\n    } = useValidation(props, 'v-input', id)\n\n    const slotProps = computed<VInputSlot>(() => ({\n      id,\n      messagesId,\n      isDirty,\n      isDisabled,\n      isReadonly,\n      isPristine,\n      isValid,\n      isValidating,\n      reset,\n      resetValidation,\n      validate,\n    }))\n\n    const color = computed(() => {\n      return props.error || props.disabled ? undefined\n        : props.focused ? props.color\n        : props.baseColor\n    })\n\n    const iconColor = computed(() => {\n      if (!props.iconColor) return undefined\n\n      return props.iconColor === true ? color.value : props.iconColor\n    })\n\n    const messages = computed(() => {\n      if (props.errorMessages?.length || (!isPristine.value && errorMessages.value.length)) {\n        return errorMessages.value\n      } else if (props.hint && (props.persistentHint || props.focused)) {\n        return props.hint\n      } else {\n        return props.messages\n      }\n    })\n\n    useRender(() => {\n      const hasPrepend = !!(slots.prepend || props.prependIcon)\n      const hasAppend = !!(slots.append || props.appendIcon)\n      const hasMessages = messages.value.length > 0\n      const hasDetails = !props.hideDetails || (\n        props.hideDetails === 'auto' &&\n        (hasMessages || !!slots.details)\n      )\n\n      return (\n        <div\n          class={[\n            'v-input',\n            `v-input--${props.direction}`,\n            {\n              'v-input--center-affix': props.centerAffix,\n              'v-input--focused': props.focused,\n              'v-input--glow': props.glow,\n              'v-input--hide-spin-buttons': props.hideSpinButtons,\n            },\n            densityClasses.value,\n            themeClasses.value,\n            rtlClasses.value,\n            validationClasses.value,\n            props.class,\n          ]}\n          style={[\n            dimensionStyles.value,\n            props.style,\n          ]}\n        >\n          { hasPrepend && (\n            <div key=\"prepend\" class=\"v-input__prepend\">\n              { slots.prepend?.(slotProps.value) }\n\n              { props.prependIcon && (\n                <InputIcon\n                  key=\"prepend-icon\"\n                  name=\"prepend\"\n                  color={ iconColor.value }\n                />\n              )}\n            </div>\n          )}\n\n          { slots.default && (\n            <div class=\"v-input__control\">\n              { slots.default?.(slotProps.value) }\n            </div>\n          )}\n\n          { hasAppend && (\n            <div key=\"append\" class=\"v-input__append\">\n              { props.appendIcon && (\n                <InputIcon\n                  key=\"append-icon\"\n                  name=\"append\"\n                  color={ iconColor.value }\n                />\n              )}\n\n              { slots.append?.(slotProps.value) }\n            </div>\n          )}\n\n          { hasDetails && (\n            <div\n              id={ messagesId.value }\n              class=\"v-input__details\"\n              role=\"alert\"\n              aria-live=\"polite\"\n            >\n              <VMessages\n                active={ hasMessages }\n                messages={ messages.value }\n                v-slots={{ message: slots.message }}\n              />\n\n              { slots.details?.(slotProps.value) }\n            </div>\n          )}\n        </div>\n      )\n    })\n\n    return {\n      reset,\n      resetValidation,\n      validate,\n      isValid,\n      errorMessages,\n    }\n  },\n})\n\nexport type VInput = InstanceType<typeof VInput>\n", "// Styles\nimport './VMessages.sass'\n\n// Components\nimport { VSlideYTransition } from '@/components/transitions'\n\n// Composables\nimport { useTextColor } from '@/composables/color'\nimport { makeComponentProps } from '@/composables/component'\nimport { makeTransitionProps, MaybeTransition } from '@/composables/transition'\n\n// Utilities\nimport { computed } from 'vue'\nimport { genericComponent, propsFactory, useRender, wrapInArray } from '@/util'\n\n// Types\nimport type { Component, PropType } from 'vue'\n\nexport type VMessageSlot = {\n  message: string\n}\n\nexport type VMessagesSlots = {\n  message: VMessageSlot\n}\n\nexport const makeVMessagesProps = propsFactory({\n  active: Boolean,\n  color: String,\n  messages: {\n    type: [Array, String] as PropType<string | readonly string[]>,\n    default: () => ([]),\n  },\n\n  ...makeComponentProps(),\n  ...makeTransitionProps({\n    transition: {\n      component: VSlideYTransition as Component,\n      leaveAbsolute: true,\n      group: true,\n    },\n  }),\n}, 'VMessages')\n\nexport const VMessages = genericComponent<VMessagesSlots>()({\n  name: 'VMessages',\n\n  props: makeVMessagesProps(),\n\n  setup (props, { slots }) {\n    const messages = computed(() => wrapInArray(props.messages))\n    const { textColorClasses, textColorStyles } = useTextColor(computed(() => props.color))\n\n    useRender(() => (\n      <MaybeTransition\n        transition={ props.transition }\n        tag=\"div\"\n        class={[\n          'v-messages',\n          textColorClasses.value,\n          props.class,\n        ]}\n        style={[\n          textColorStyles.value,\n          props.style,\n        ]}\n      >\n        { props.active && (\n          messages.value.map((message, i) => (\n            <div\n              class=\"v-messages__message\"\n              key={ `${i}-${messages.value}` }\n            >\n              { slots.message ? slots.message({ message }) : message }\n            </div>\n          ))\n        )}\n      </MaybeTransition>\n    ))\n\n    return {}\n  },\n})\n\nexport type VMessages = InstanceType<typeof VMessages>\n", "// Utilities\nimport { computed } from 'vue'\nimport { getCurrentInstanceName, propsFactory } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\n\nconst allowedDensities = [null, 'default', 'comfortable', 'compact'] as const\n\n// typeof allowedDensities[number] evaluates to any\n// when generating api types for whatever reason.\nexport type Density = null | 'default' | 'comfortable' | 'compact'\n\nexport interface DensityProps {\n  density?: Density\n}\n\n// Composables\nexport const makeDensityProps = propsFactory({\n  density: {\n    type: String as PropType<Density>,\n    default: 'default',\n    validator: (v: any) => allowedDensities.includes(v),\n  },\n}, 'density')\n\nexport function useDensity (\n  props: DensityProps,\n  name = getCurrentInstanceName(),\n) {\n  const densityClasses = computed(() => {\n    return `${name}--density-${props.density}`\n  })\n\n  return { densityClasses }\n}\n", "// Utilities\nimport { computed } from 'vue'\nimport { convertToUnit, propsFactory } from '@/util'\n\n// Types\nexport interface DimensionProps {\n  height?: number | string\n  maxHeight?: number | string\n  maxWidth?: number | string\n  minHeight?: number | string\n  minWidth?: number | string\n  width?: number | string\n}\n\n// Composables\nexport const makeDimensionProps = propsFactory({\n  height: [Number, String],\n  maxHeight: [Number, String],\n  maxWidth: [Number, String],\n  minHeight: [Number, String],\n  minWidth: [Number, String],\n  width: [Number, String],\n}, 'dimension')\n\nexport function useDimension (props: DimensionProps) {\n  const dimensionStyles = computed(() => {\n    const styles: Record<string, any> = {}\n\n    const height = convertToUnit(props.height)\n    const maxHeight = convertToUnit(props.maxHeight)\n    const maxWidth = convertToUnit(props.maxWidth)\n    const minHeight = convertToUnit(props.minHeight)\n    const minWidth = convertToUnit(props.minWidth)\n    const width = convertToUnit(props.width)\n\n    if (height != null) styles.height = height\n    if (maxHeight != null) styles.maxHeight = maxHeight\n    if (maxWidth != null) styles.maxWidth = maxWidth\n    if (minHeight != null) styles.minHeight = minHeight\n    if (minWidth != null) styles.minWidth = minWidth\n    if (width != null) styles.width = width\n\n    return styles\n  })\n\n  return { dimensionStyles }\n}\n", "// Composables\nimport { useProxiedModel } from '@/composables/proxiedModel'\n\n// Utilities\nimport { computed, inject, markRaw, provide, ref, shallowRef, toRef, watch } from 'vue'\nimport { consoleWarn, propsFactory } from '@/util'\n\n// Types\nimport type { ComponentInternalInstance, ComputedRef, InjectionKey, PropType, Raw, Ref } from 'vue'\nimport type { ValidationProps } from './validation'\nimport type { EventProp } from '@/util'\n\nexport interface FormProvide {\n  register: (item: {\n    id: number | string\n    vm: ComponentInternalInstance\n    validate: () => Promise<string[]>\n    reset: () => Promise<void>\n    resetValidation: () => Promise<void>\n  }) => void\n  unregister: (id: number | string) => void\n  update: (id: number | string, isValid: boolean | null, errorMessages: string[]) => void\n  items: Ref<FormField[]>\n  isDisabled: ComputedRef<boolean>\n  isReadonly: ComputedRef<boolean>\n  isValidating: Ref<boolean>\n  isValid: Ref<boolean | null>\n  validateOn: Ref<FormProps['validateOn']>\n}\n\nexport interface FormField {\n  id: number | string\n  validate: () => Promise<string[]>\n  reset: () => Promise<void>\n  resetValidation: () => Promise<void>\n  vm: Raw<ComponentInternalInstance>\n  isValid: boolean | null\n  errorMessages: string[]\n}\n\nexport interface FieldValidationResult {\n  id: number | string\n  errorMessages: string[]\n}\n\nexport interface FormValidationResult {\n  valid: boolean\n  errors: FieldValidationResult[]\n}\n\nexport interface SubmitEventPromise extends SubmitEvent, Promise<FormValidationResult> {}\n\nexport const FormKey: InjectionKey<FormProvide> = Symbol.for('vuetify:form')\n\nexport interface FormProps {\n  disabled: boolean\n  fastFail: boolean\n  readonly: boolean\n  modelValue: boolean | null\n  'onUpdate:modelValue': EventProp<[boolean | null]> | undefined\n  validateOn: ValidationProps['validateOn']\n}\n\nexport const makeFormProps = propsFactory({\n  disabled: Boolean,\n  fastFail: Boolean,\n  readonly: Boolean,\n  modelValue: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  validateOn: {\n    type: String as PropType<FormProps['validateOn']>,\n    default: 'input',\n  },\n}, 'form')\n\nexport function createForm (props: FormProps) {\n  const model = useProxiedModel(props, 'modelValue')\n\n  const isDisabled = computed(() => props.disabled)\n  const isReadonly = computed(() => props.readonly)\n  const isValidating = shallowRef(false)\n  const items = ref<FormField[]>([])\n  const errors = ref<FieldValidationResult[]>([])\n\n  async function validate () {\n    const results = []\n    let valid = true\n\n    errors.value = []\n    isValidating.value = true\n\n    for (const item of items.value) {\n      const itemErrorMessages = await item.validate()\n\n      if (itemErrorMessages.length > 0) {\n        valid = false\n\n        results.push({\n          id: item.id,\n          errorMessages: itemErrorMessages,\n        })\n      }\n\n      if (!valid && props.fastFail) break\n    }\n\n    errors.value = results\n    isValidating.value = false\n\n    return { valid, errors: errors.value }\n  }\n\n  function reset () {\n    items.value.forEach(item => item.reset())\n  }\n\n  function resetValidation () {\n    items.value.forEach(item => item.resetValidation())\n  }\n\n  watch(items, () => {\n    let valid = 0\n    let invalid = 0\n    const results = []\n\n    for (const item of items.value) {\n      if (item.isValid === false) {\n        invalid++\n        results.push({\n          id: item.id,\n          errorMessages: item.errorMessages,\n        })\n      } else if (item.isValid === true) valid++\n    }\n\n    errors.value = results\n    model.value =\n      invalid > 0 ? false\n      : valid === items.value.length ? true\n      : null\n  }, { deep: true, flush: 'post' })\n\n  provide(FormKey, {\n    register: ({ id, vm, validate, reset, resetValidation }) => {\n      if (items.value.some(item => item.id === id)) {\n        consoleWarn(`Duplicate input name \"${id}\"`)\n      }\n\n      items.value.push({\n        id,\n        validate,\n        reset,\n        resetValidation,\n        vm: markRaw(vm),\n        isValid: null,\n        errorMessages: [],\n      })\n    },\n    unregister: id => {\n      items.value = items.value.filter(item => {\n        return item.id !== id\n      })\n    },\n    update: (id, isValid, errorMessages) => {\n      const found = items.value.find(item => item.id === id)\n\n      if (!found) return\n\n      found.isValid = isValid\n      found.errorMessages = errorMessages\n    },\n    isDisabled,\n    isReadonly,\n    isValidating,\n    isValid: model,\n    items,\n    validateOn: toRef(props, 'validateOn'),\n  })\n\n  return {\n    errors,\n    isDisabled,\n    isReadonly,\n    isValidating,\n    isValid: model,\n    items,\n    validate,\n    reset,\n    resetValidation,\n  }\n}\n\nexport function useForm (props?: { readonly: boolean | null, disabled: boolean | null }) {\n  const form = inject(FormKey, null)\n  return {\n    ...form,\n    isReadonly: computed(() => !!(props?.readonly ?? form?.isReadonly.value)),\n    isDisabled: computed(() => !!(props?.disabled ?? form?.isDisabled.value)),\n  }\n}\n", "// Composables\nimport { makeFocusProps } from '@/composables/focus'\nimport { useForm } from '@/composables/form'\nimport { useProxiedModel } from '@/composables/proxiedModel'\nimport { useToggleScope } from '@/composables/toggleScope'\n// import { useRules } from '@/labs/rules'\n\n// Utilities\nimport { computed, nextTick, onBeforeMount, onBeforeUnmount, onMounted, ref, shallowRef, unref, useId, watch } from 'vue'\nimport { getCurrentInstance, getCurrentInstanceName, propsFactory, wrapInArray } from '@/util'\n\n// Types\nimport type { PropType } from 'vue'\nimport type { EventProp, MaybeRef } from '@/util'\n\nexport type ValidationResult = string | boolean\nexport type ValidationRule =\n  | ValidationResult\n  | PromiseLike<ValidationResult>\n  | ((value: any) => ValidationResult)\n  | ((value: any) => PromiseLike<ValidationResult>)\n\ntype ValidateOnValue = 'blur' | 'input' | 'submit' | 'invalid-input'\ntype ValidateOn =\n  | ValidateOnValue\n  | `${ValidateOnValue} lazy`\n  | `${ValidateOnValue} eager`\n  | `lazy ${ValidateOnValue}`\n  | `eager ${ValidateOnValue}`\n  | 'lazy'\n  | 'eager'\n\n// type ValidationRuleParams = [any, string?]\n// type ValidationAlias = string | [string, ...ValidationRuleParams]\n\nexport interface ValidationProps {\n  disabled: boolean | null\n  error: boolean\n  errorMessages: string | readonly string[] | null\n  focused: boolean\n  maxErrors: string | number\n  name: string | undefined\n  label: string | undefined\n  readonly: boolean | null\n  rules: readonly ValidationRule[]\n  // rules: readonly (ValidationRule | ValidationAlias)[]\n  modelValue: any\n  'onUpdate:modelValue': EventProp | undefined\n  validateOn?: ValidateOn\n  validationValue: any\n}\n\nexport const makeValidationProps = propsFactory({\n  disabled: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  error: Boolean,\n  errorMessages: {\n    type: [Array, String] as PropType<string | readonly string[] | null>,\n    default: () => ([]),\n  },\n  maxErrors: {\n    type: [Number, String],\n    default: 1,\n  },\n  name: String,\n  label: String,\n  readonly: {\n    type: Boolean as PropType<boolean | null>,\n    default: null,\n  },\n  rules: {\n    type: Array as PropType<readonly ValidationRule[]>,\n    // type: Array as PropType<readonly (ValidationRule | ValidationAlias)[]>,\n    default: () => ([]),\n  },\n  modelValue: null,\n  validateOn: String as PropType<ValidationProps['validateOn']>,\n  validationValue: null,\n\n  ...makeFocusProps(),\n}, 'validation')\n\nexport function useValidation (\n  props: ValidationProps,\n  name = getCurrentInstanceName(),\n  id: MaybeRef<string | number> = useId(),\n) {\n  const model = useProxiedModel(props, 'modelValue')\n  const validationModel = computed(() => props.validationValue === undefined ? model.value : props.validationValue)\n  const form = useForm(props)\n  // const rules = useRules()\n  const internalErrorMessages = ref<string[]>([])\n  const isPristine = shallowRef(true)\n  const isDirty = computed(() => !!(\n    wrapInArray(model.value === '' ? null : model.value).length ||\n    wrapInArray(validationModel.value === '' ? null : validationModel.value).length\n  ))\n  const errorMessages = computed(() => {\n    return props.errorMessages?.length\n      ? wrapInArray(props.errorMessages).concat(internalErrorMessages.value).slice(0, Math.max(0, Number(props.maxErrors)))\n      : internalErrorMessages.value\n  })\n  const validateOn = computed(() => {\n    let value = (props.validateOn ?? form.validateOn?.value) || 'input'\n    if (value === 'lazy') value = 'input lazy'\n    if (value === 'eager') value = 'input eager'\n    const set = new Set(value?.split(' ') ?? [])\n\n    return {\n      input: set.has('input'),\n      blur: set.has('blur') || set.has('input') || set.has('invalid-input'),\n      invalidInput: set.has('invalid-input'),\n      lazy: set.has('lazy'),\n      eager: set.has('eager'),\n    }\n  })\n  const isValid = computed(() => {\n    if (props.error || props.errorMessages?.length) return false\n    if (!props.rules.length) return true\n    if (isPristine.value) {\n      return internalErrorMessages.value.length || validateOn.value.lazy ? null : true\n    } else {\n      return !internalErrorMessages.value.length\n    }\n  })\n  const isValidating = shallowRef(false)\n  const validationClasses = computed(() => {\n    return {\n      [`${name}--error`]: isValid.value === false,\n      [`${name}--dirty`]: isDirty.value,\n      [`${name}--disabled`]: form.isDisabled.value,\n      [`${name}--readonly`]: form.isReadonly.value,\n    }\n  })\n\n  const vm = getCurrentInstance('validation')\n  const uid = computed(() => props.name ?? unref(id))\n\n  // const resolvedRules = computed(() => props.rules.map(rule => {\n  //   let ruleName: string | null = null\n  //   let ruleParams: ValidationRuleParams = [undefined]\n  //   if (Array.isArray(rule)) {\n  //     ruleName = rule[0]\n  //     ruleParams = rule.slice(1) as ValidationRuleParams\n  //   } else if (typeof rule === 'string') {\n  //     ruleName = rule\n  //   }\n\n  //   if (ruleName !== null) {\n  //     if (ruleName.startsWith('$')) {\n  //       ruleName = ruleName.slice(1)\n  //     }\n\n  //     return rules?.[ruleName]?.(...ruleParams)\n  //   } else {\n  //     return rule\n  //   }\n  // }))\n\n  onBeforeMount(() => {\n    form.register?.({\n      id: uid.value,\n      vm,\n      validate,\n      reset,\n      resetValidation,\n    })\n  })\n\n  onBeforeUnmount(() => {\n    form.unregister?.(uid.value)\n  })\n\n  onMounted(async () => {\n    if (!validateOn.value.lazy) {\n      await validate(!validateOn.value.eager)\n    }\n    form.update?.(uid.value, isValid.value, errorMessages.value)\n  })\n\n  useToggleScope(() => validateOn.value.input || (validateOn.value.invalidInput && isValid.value === false), () => {\n    watch(validationModel, () => {\n      if (validationModel.value != null) {\n        validate()\n      } else if (props.focused) {\n        const unwatch = watch(() => props.focused, val => {\n          if (!val) validate()\n\n          unwatch()\n        })\n      }\n    })\n  })\n\n  useToggleScope(() => validateOn.value.blur, () => {\n    watch(() => props.focused, val => {\n      if (!val) validate()\n    })\n  })\n\n  watch([isValid, errorMessages], () => {\n    form.update?.(uid.value, isValid.value, errorMessages.value)\n  })\n\n  async function reset () {\n    model.value = null\n    await nextTick()\n    await resetValidation()\n  }\n\n  async function resetValidation () {\n    isPristine.value = true\n    if (!validateOn.value.lazy) {\n      await validate(!validateOn.value.eager)\n    } else {\n      internalErrorMessages.value = []\n    }\n  }\n\n  async function validate (silent = false) {\n    const results = []\n\n    isValidating.value = true\n\n    for (const rule of props.rules) {\n      if (results.length >= Number(props.maxErrors ?? 1)) {\n        break\n      }\n\n      const handler = typeof rule === 'function' ? rule : () => rule\n      const result = await handler(validationModel.value)\n\n      if (result === true) continue\n\n      if (result !== false && typeof result !== 'string') {\n        // eslint-disable-next-line no-console\n        console.warn(`${result} is not a valid value. Rule functions must return boolean true or a string.`)\n\n        continue\n      }\n\n      results.push(result || '')\n    }\n\n    internalErrorMessages.value = results\n    isValidating.value = false\n    isPristine.value = silent\n\n    return internalErrorMessages.value\n  }\n\n  return {\n    errorMessages,\n    isDirty,\n    isDisabled: form.isDisabled,\n    isReadonly: form.isReadonly,\n    isPristine,\n    isValid,\n    isValidating,\n    reset,\n    resetValidation,\n    validate,\n    validationClasses,\n  }\n}\n", "// Types\nimport type { ComponentOptionsBase, ComponentPublicInstance, Ref, UnwrapRef } from 'vue'\nimport type { UnionToIntersection } from '@/util'\n\nconst Refs = Symbol('Forwarded refs')\n\n/** Omit properties starting with P */\ntype OmitPrefix<\n  T,\n  P extends string,\n  E = Extract<keyof T, `${P}${any}`>,\n> = [E] extends [never] ? T : Omit<T, `${P}${any}`>\ntype OmitPrivate<T> = OmitPrefix<T, '$'>\n\n/** Omit keyof $props from T */\ntype OmitProps<T> = T extends { $props: any } ? Omit<T, keyof T['$props']> : T\n\nfunction getDescriptor (obj: any, key: PropertyKey) {\n  let currentObj = obj\n  while (currentObj) {\n    const descriptor = Reflect.getOwnPropertyDescriptor(currentObj, key)\n    if (descriptor) return descriptor\n    currentObj = Object.getPrototypeOf(currentObj)\n  }\n  return undefined\n}\n\nexport function forwardRefs<\n  T extends {},\n  U extends Ref<HTMLElement | Omit<ComponentPublicInstance, '$emit' | '$slots'> | undefined>[],\n  UU = { [K in keyof U]: NonNullable<UnwrapRef<U[K]>> }[number],\n  UC = { [K in keyof U]: OmitPrivate<OmitProps<NonNullable<UnwrapRef<U[K]>>>> }[number],\n  R = T & UnionToIntersection<UC> & {\n    _allExposed: T | (\n      UU extends { $options: infer O }\n        ? O extends ComponentOptionsBase<any, infer E, any, any, any, any, any, any>\n          ? E\n          : never\n        : never\n    )\n  }\n> (target: T, ...refs: U): R {\n  (target as any)[Refs] = refs\n\n  return new Proxy(target, {\n    get (target, key) {\n      if (Reflect.has(target, key)) {\n        return Reflect.get(target, key)\n      }\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('$') || key.startsWith('__')) return\n\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          const val = Reflect.get(ref.value, key)\n          return typeof val === 'function'\n            ? val.bind(ref.value)\n            : val\n        }\n      }\n    },\n    has (target, key) {\n      if (Reflect.has(target, key)) {\n        return true\n      }\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('$') || key.startsWith('__')) return false\n\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          return true\n        }\n      }\n      return false\n    },\n    set (target, key, value) {\n      if (Reflect.has(target, key)) {\n        return Reflect.set(target, key, value)\n      }\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('$') || key.startsWith('__')) return false\n\n      for (const ref of refs) {\n        if (ref.value && Reflect.has(ref.value, key)) {\n          return Reflect.set(ref.value, key, value)\n        }\n      }\n\n      return false\n    },\n    getOwnPropertyDescriptor (target, key) {\n      const descriptor = Reflect.getOwnPropertyDescriptor(target, key)\n      if (descriptor) return descriptor\n\n      // Skip internal properties\n      if (typeof key === 'symbol' || key.startsWith('$') || key.startsWith('__')) return\n\n      // Check each ref's own properties\n      for (const ref of refs) {\n        if (!ref.value) continue\n        const descriptor = getDescriptor(ref.value, key) ?? ('_' in ref.value ? getDescriptor(ref.value._?.setupState, key) : undefined)\n        if (descriptor) return descriptor\n      }\n\n      // Recursive search up each ref's prototype\n      for (const ref of refs) {\n        const childRefs = ref.value && (ref.value as any)[Refs]\n        if (!childRefs) continue\n        const queue = childRefs.slice()\n        while (queue.length) {\n          const ref = queue.shift()\n          const descriptor = getDescriptor(ref.value, key)\n          if (descriptor) return descriptor\n          const childRefs = ref.value && (ref.value as any)[Refs]\n          if (childRefs) queue.push(...childRefs)\n        }\n      }\n\n      return undefined\n    },\n  }) as any\n}\n", "// Utilities\nimport { SUPPORTS_INTERSECTION } from '@/util'\n\n// Types\nimport type {\n  DirectiveBinding,\n} from 'vue'\n\ntype ObserveHandler = (\n  isIntersecting: boolean,\n  entries: IntersectionObserverEntry[],\n  observer: IntersectionObserver,\n) => void\n\nexport interface ObserveDirectiveBinding extends Omit<DirectiveBinding, 'modifiers' | 'value'> {\n  value?: ObserveHandler | { handler: ObserveHandler, options?: IntersectionObserverInit }\n  modifiers: {\n    once?: boolean\n    quiet?: boolean\n  }\n}\n\nfunction mounted (el: HTMLElement, binding: ObserveDirectiveBinding) {\n  if (!SUPPORTS_INTERSECTION) return\n\n  const modifiers = binding.modifiers || {}\n  const value = binding.value\n  const { handler, options } = typeof value === 'object'\n    ? value\n    : { handler: value, options: {} }\n\n  const observer = new IntersectionObserver((\n    entries: IntersectionObserverEntry[] = [],\n    observer: IntersectionObserver\n  ) => {\n    const _observe = el._observe?.[binding.instance!.$.uid]\n    if (!_observe) return // Just in case, should never fire\n\n    const isIntersecting = entries.some(entry => entry.isIntersecting)\n\n    // If is not quiet or has already been\n    // initted, invoke the user callback\n    if (\n      handler && (\n        !modifiers.quiet ||\n        _observe.init\n      ) && (\n        !modifiers.once ||\n        isIntersecting ||\n        _observe.init\n      )\n    ) {\n      handler(isIntersecting, entries, observer)\n    }\n\n    if (isIntersecting && modifiers.once) unmounted(el, binding)\n    else _observe.init = true\n  }, options)\n\n  el._observe = Object(el._observe)\n  el._observe![binding.instance!.$.uid] = { init: false, observer }\n\n  observer.observe(el)\n}\n\nfunction unmounted (el: HTMLElement, binding: ObserveDirectiveBinding) {\n  const observe = el._observe?.[binding.instance!.$.uid]\n  if (!observe) return\n\n  observe.observer.unobserve(el)\n  delete el._observe![binding.instance!.$.uid]\n}\n\nexport const Intersect = {\n  mounted,\n  unmounted,\n}\n\nexport default Intersect\n"],
  "mappings": "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",
  "names": ["IN_BROWSER", "window", "SUPPORTS_INTERSECTION", "SUPPORTS_TOUCH", "navigator", "maxTouchPoints", "SUPPORTS_EYE_DROPPER", "convertToUnit", "str", "unit", "arguments", "length", "undefined", "num", "Number", "isNaN", "String", "isFinite", "isPlainObject", "obj", "proto", "Object", "getPrototypeOf", "prototype", "keyCodes", "Object", "freeze", "enter", "tab", "delete", "esc", "space", "up", "down", "left", "right", "end", "home", "del", "backspace", "insert", "pageup", "pagedown", "shift", "keyValues", "has", "obj", "key", "every", "k", "hasOwnProperty", "pick", "paths", "found", "Object", "prototype", "call", "pickWithRest", "exclude", "create", "rest", "some", "path", "RegExp", "test", "omit", "clone", "forEach", "prop", "onRE", "bubblingEvents", "filterInputAttrs", "attrs", "events", "props", "pickWithRest", "onRE", "inputEvents", "omit", "bubblingEvents", "rootAttrs", "inputAttrs", "Object", "assign", "wrapInArray", "v", "Array", "isArray", "clamp", "value", "min", "arguments", "length", "undefined", "max", "Math", "padEnd", "str", "length", "char", "arguments", "undefined", "repeat", "Math", "max", "chunk", "str", "size", "arguments", "length", "undefined", "chunked", "index", "push", "substr", "mergeDeep", "source", "arguments", "length", "undefined", "target", "arrayFn", "out", "key", "sourceProperty", "targetProperty", "isPlainObject", "Array", "isArray", "flattenFragments", "nodes", "map", "node", "type", "Fragment", "children", "flat", "toKebabCase", "str", "cache", "has", "get", "kebab", "replace", "toLowerCase", "set", "Map", "destructComputed", "getter", "refs", "reactive", "base", "computed", "watchEffect", "key", "value", "flush", "toRefs", "includes", "arr", "val", "EventProp", "Function", "Array", "callEvent", "handler", "_len2", "arguments", "length", "args", "Array", "_key2", "isArray", "h", "block", "inline", "parseAnchor", "anchor", "isRtl", "side", "align", "split", "includes", "toPhysical", "str", "Box", "constructor", "_ref", "x", "y", "width", "height", "top", "bottom", "left", "right", "getTargetBox", "target", "Array", "isArray", "Box", "x", "y", "width", "height", "getBoundingClientRect", "nullifyTransforms", "el", "rect", "getBoundingClientRect", "style", "getComputedStyle", "tx", "transform", "ta", "sx", "sy", "dx", "dy", "startsWith", "slice", "split", "Number", "Box", "to", "transformOrigin", "x", "parseFloat", "y", "indexOf", "w", "width", "offsetWidth", "h", "height", "offsetHeight", "animate", "keyframes", "options", "finished", "Promise", "resolve", "animation", "err", "onfinish", "mainTRC", "Rco", "Gco", "Bco", "normBG", "normTXT", "revTXT", "revBG", "blkThrs", "blkClmp", "deltaYmin", "scaleBoW", "scaleWoB", "loConThresh", "loConFactor", "loConOffset", "loClip", "APCAcontrast", "text", "background", "Rtxt", "r", "Gtxt", "g", "Btxt", "b", "Rbg", "Gbg", "Bbg", "Ytxt", "Ybg", "Math", "abs", "outputContrast", "SAPC", "consoleWarn", "message", "warn", "isCssColor", "color", "test", "isParsableColor", "cssColorRe", "mappers", "rgb", "r", "g", "b", "a", "rgba", "hsl", "h", "s", "l", "HSLtoRGB", "hsla", "hsv", "v", "HSVtoRGB", "hsva", "parseColor", "isNaN", "consoleWarn", "groups", "match", "fn", "values", "realValues", "split", "map", "i", "endsWith", "includes", "parseFloat", "hex", "startsWith", "slice", "length", "char", "join", "int", "parseInt", "HexToRGB", "has", "HSLtoHSV", "TypeError", "String", "constructor", "name", "HSVtoRGB", "hsva", "h", "s", "v", "a", "f", "n", "k", "Math", "max", "min", "rgb", "map", "round", "r", "g", "b", "HSLtoRGB", "hsla", "HSLtoHSV", "HSLtoHSV", "hsl", "h", "s", "l", "a", "v", "Math", "min", "sprime", "HexToRGB", "hex", "parseHex", "r", "g", "b", "a", "chunk", "map", "c", "parseInt", "undefined", "parseHex", "hex", "startsWith", "slice", "replace", "length", "split", "map", "x", "join", "padEnd", "getForeground", "color", "blackContrast", "Math", "abs", "APCAcontrast", "parseColor", "whiteContrast", "min", "propsFactory", "props", "source", "defaults", "Object", "keys", "reduce", "obj", "prop", "isObjectDefinition", "Array", "isArray", "definition", "type", "default", "makeComponentProps", "propsFactory", "class", "String", "Array", "Object", "style", "type", "default", "getCurrentInstance", "name", "message", "vm", "_getCurrentInstance", "Error", "getCurrentInstanceName", "arguments", "length", "undefined", "type", "toKebabCase", "aliasName", "injectSelf", "key", "vm", "arguments", "length", "undefined", "getCurrentInstance", "provides", "DefaultsSymbol", "Symbol", "for", "injectDefaults", "defaults", "inject", "DefaultsSymbol", "Error", "provideDefaults", "options", "injectedDefaults", "providedDefaults", "ref", "newDefaults", "computed", "disabled", "unref", "value", "scoped", "reset", "root", "properties", "mergeDeep", "prev", "len", "Number", "Infinity", "i", "provide", "propIsDefined", "vnode", "prop", "props", "toKebabCase", "internalUseDefaults", "arguments", "length", "undefined", "name", "vm", "getCurrentInstance", "type", "__name", "componentDefaults", "_as", "_props", "Proxy", "get", "target", "propValue", "Reflect", "filter", "v", "global", "_subcomponentDefaults", "shallowRef", "watchEffect", "subComponents", "Object", "entries", "_ref", "key", "startsWith", "toUpperCase", "fromEntries", "provideSubDefaults", "injected", "injectSelf", "defineComponent", "options", "_setup", "setup", "name", "consoleWarn", "props", "propsFactory", "propKeys", "Object", "keys", "filter", "key", "filterProps", "pick", "_as", "String", "ctx", "defaults", "injectDefaults", "value", "_props", "provideSubDefaults", "internalUseDefaults", "setupBindings", "genericComponent", "exposeDefaults", "arguments", "length", "undefined", "_defineComponent", "standardEasing", "deceleratedEasing", "acceleratedEasing", "useRender", "render", "vm", "getCurrentInstance", "makeTransitionProps", "propsFactory", "disabled", "Boolean", "group", "hideOnLeave", "leaveAbsolute", "mode", "String", "origin", "createCssTransition", "name", "genericComponent", "props", "setup", "_ref", "slots", "functions", "onBeforeEnter", "el", "style", "transformOrigin", "onLeave", "offsetTop", "offsetLeft", "offsetWidth", "offsetHeight", "_transitionInitialStyles", "position", "top", "left", "width", "height", "setProperty", "onAfterLeave", "tag", "TransitionGroup", "Transition", "h", "css", "undefined", "default", "createJavascriptTransition", "arguments", "length", "type", "_ref2", "expandedParentClass", "arguments", "length", "undefined", "x", "sizeProperty", "offsetProperty", "camelize", "onBeforeEnter", "el", "_parent", "parentNode", "_initialStyle", "transition", "style", "overflow", "onEnter", "initialStyle", "setProperty", "offset", "offsetHeight", "classList", "add", "requestAnimationFrame", "onAfterEnter", "resetStyles", "onEnterCancelled", "onLeave", "onAfterLeave", "onLeaveCancelled", "remove", "size", "makeVDialogTransitionProps", "propsFactory", "target", "Object", "Array", "VDialogTransition", "genericComponent", "name", "props", "setup", "_ref", "slots", "functions", "onBeforeEnter", "el", "style", "pointerEvents", "visibility", "onEnter", "done", "Promise", "resolve", "requestAnimationFrame", "x", "y", "sx", "sy", "speed", "getDimensions", "animation", "animate", "transform", "opacity", "duration", "easing", "deceleratedEasing", "getChildren", "forEach", "offset", "standardEasing", "finished", "then", "onAfterEnter", "removeProperty", "onBeforeLeave", "onLeave", "acceleratedEasing", "onAfterLeave", "_createVNode", "Transition", "_mergeProps", "els", "querySelector", "children", "targetBox", "getTargetBox", "elBox", "nullifyTransforms", "originX", "originY", "getComputedStyle", "transformOrigin", "split", "map", "v", "parseFloat", "anchorSide", "anchorOffset", "getPropertyValue", "offsetX", "left", "width", "offsetY", "top", "height", "tsx", "tsy", "maxs", "Math", "max", "asa", "window", "innerWidth", "innerHeight", "min", "VFabTransition", "createCssTransition", "VDialogBottomTransition", "VDialogTopTransition", "VFadeTransition", "VScaleTransition", "VScrollXTransition", "VScrollXReverseTransition", "VScrollYTransition", "VScrollYReverseTransition", "VSlideXTransition", "VSlideXReverseTransition", "VSlideYTransition", "VSlideYReverseTransition", "VExpandTransition", "createJavascriptTransition", "ExpandTransitionGenerator", "VExpandXTransition", "makeTransitionProps", "propsFactory", "transition", "type", "Boolean", "String", "Object", "default", "validator", "val", "MaybeTransition", "props", "_ref", "slots", "disabled", "group", "rest", "component", "TransitionGroup", "Transition", "customProps", "h", "mergeProps", "name", "fromEntries", "entries", "filter", "_ref2", "_", "v", "undefined", "makeVCounterProps", "propsFactory", "active", "Boolean", "disabled", "max", "Number", "String", "value", "type", "default", "makeComponentProps", "makeTransitionProps", "transition", "component", "VSlideYTransition", "VCounter", "genericComponent", "name", "functional", "props", "setup", "_ref", "slots", "counter", "computed", "useRender", "_createVNode", "MaybeTransition", "_withDirectives", "parseFloat", "class", "style", "_vShow", "ThemeSymbol", "Symbol", "for", "makeThemeProps", "propsFactory", "theme", "String", "provideTheme", "props", "getCurrentInstance", "theme", "inject", "ThemeSymbol", "Error", "name", "computed", "value", "current", "themes", "themeClasses", "isDisabled", "undefined", "newTheme", "provide", "useTheme", "makeVLabelProps", "propsFactory", "text", "String", "onClick", "EventProp", "makeComponentProps", "makeThemeProps", "VLabel", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "_createVNode", "class", "style", "default", "makeVFieldLabelProps", "propsFactory", "floating", "Boolean", "makeComponentProps", "VFieldLabel", "genericComponent", "name", "props", "setup", "_ref", "slots", "useRender", "_createVNode", "VLabel", "class", "style", "undefined", "makeVDefaultsProviderProps", "propsFactory", "defaults", "Object", "disabled", "Boolean", "reset", "Number", "String", "root", "scoped", "VDefaultsProvider", "genericComponent", "name", "props", "setup", "_ref", "slots", "toRefs", "provideDefaults", "default", "useColor", "colors", "destructComputed", "classes", "styles", "value", "background", "isCssColor", "backgroundColor", "text", "isParsableColor", "parseColor", "a", "textColor", "getForeground", "color", "caretColor", "push", "colorClasses", "colorStyles", "useTextColor", "props", "name", "computed", "isRef", "textColorClasses", "textColorStyles", "useBackgroundColor", "backgroundColorClasses", "backgroundColorStyles", "IconValue", "String", "Function", "Object", "Array", "IconSymbol", "Symbol", "for", "makeIconProps", "propsFactory", "icon", "type", "tag", "required", "VComponentIcon", "genericComponent", "name", "props", "setup", "_ref", "slots", "Icon", "_createVNode", "default", "VSvgIcon", "defineComponent", "inheritAttrs", "_ref2", "attrs", "_mergeProps", "isArray", "map", "path", "VLigatureIcon", "VClassIcon", "useIcon", "props", "icons", "inject", "IconSymbol", "Error", "iconData", "computed", "iconAlias", "unref", "component", "VComponentIcon", "icon", "trim", "startsWith", "aliases", "slice", "consoleWarn", "Array", "isArray", "VSvgIcon", "iconSetName", "Object", "keys", "sets", "find", "setName", "iconName", "length", "iconSet", "defaultSet", "predefinedSizes", "makeSizeProps", "propsFactory", "size", "type", "String", "Number", "default", "useSize", "props", "name", "arguments", "length", "undefined", "getCurrentInstanceName", "destructComputed", "sizeClasses", "sizeStyles", "includes", "width", "convertToUnit", "height", "makeTagProps", "propsFactory", "tag", "type", "String", "Object", "Function", "default", "makeVIconProps", "propsFactory", "color", "String", "disabled", "Boolean", "start", "end", "icon", "IconValue", "opacity", "Number", "makeComponentProps", "makeSizeProps", "makeTagProps", "tag", "makeThemeProps", "VIcon", "genericComponent", "name", "props", "setup", "_ref", "attrs", "slots", "slotIcon", "ref", "themeClasses", "useTheme", "iconData", "useIcon", "computed", "value", "sizeClasses", "useSize", "textColorClasses", "textColorStyles", "useTextColor", "toRef", "useRender", "slotValue", "default", "flattenFragments", "filter", "node", "type", "Text", "children", "hasClick", "onClick", "onClickOnce", "_createVNode", "component", "class", "fontSize", "convertToUnit", "size", "height", "width", "undefined", "style", "useToggleScope", "source", "fn", "scope", "start", "effectScope", "run", "length", "stop", "watch", "active", "undefined", "immediate", "onScopeDispose", "useProxiedModel", "props", "prop", "defaultValue", "transformIn", "arguments", "length", "undefined", "v", "transformOut", "vm", "getCurrentInstance", "internal", "ref", "kebabProp", "toKebabCase", "checkKebab", "isControlled", "computed", "vnode", "hasOwnProperty", "useToggleScope", "value", "watch", "val", "model", "get", "externalValue", "set", "internalValue", "newValue", "toRaw", "emit", "Object", "defineProperty", "LocaleSymbol", "Symbol", "for", "useLocale", "locale", "inject", "LocaleSymbol", "Error", "RtlSymbol", "Symbol", "for", "useRtl", "locale", "inject", "LocaleSymbol", "Error", "isRtl", "rtlClasses", "useInputIcon", "props", "t", "useLocale", "InputIcon", "_ref", "name", "color", "localeKey", "prepend", "prependInner", "append", "appendInner", "clear", "listener", "onKeydown", "e", "key", "preventDefault", "stopPropagation", "callEvent", "PointerEvent", "label", "undefined", "_createVNode", "VIcon", "makeFocusProps", "propsFactory", "focused", "Boolean", "EventProp", "useFocus", "props", "name", "arguments", "length", "undefined", "getCurrentInstanceName", "isFocused", "useProxiedModel", "focusClasses", "computed", "value", "focus", "blur", "useIntersectionObserver", "callback", "options", "intersectionRef", "ref", "isIntersecting", "shallowRef", "SUPPORTS_INTERSECTION", "observer", "IntersectionObserver", "entries", "value", "find", "entry", "onBeforeUnmount", "disconnect", "watch", "newValue", "oldValue", "unobserve", "observe", "flush", "oppositeMap", "center", "top", "bottom", "left", "right", "makeLocationProps", "propsFactory", "location", "String", "useLocation", "props", "opposite", "arguments", "length", "undefined", "offset", "isRtl", "useRtl", "locationStyles", "computed", "side", "align", "parseAnchor", "split", "value", "getOffset", "styles", "transform", "makeRoundedProps", "propsFactory", "rounded", "type", "Boolean", "Number", "String", "default", "undefined", "tile", "useRounded", "props", "name", "arguments", "length", "getCurrentInstanceName", "roundedClasses", "computed", "isRef", "value", "classes", "push", "split", "makeVProgressLinearProps", "propsFactory", "absolute", "Boolean", "active", "type", "default", "bgColor", "String", "bgOpacity", "Number", "bufferValue", "bufferColor", "bufferOpacity", "clickable", "color", "height", "indeterminate", "max", "modelValue", "opacity", "reverse", "stream", "striped", "roundedBar", "makeComponentProps", "makeLocationProps", "location", "makeRoundedProps", "makeTagProps", "makeThemeProps", "VProgressLinear", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "slots", "progress", "useProxiedModel", "isRtl", "rtlClasses", "useRtl", "themeClasses", "provideTheme", "locationStyles", "useLocation", "textColorClasses", "textColorStyles", "useTextColor", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "computed", "bufferColorClasses", "bufferColorStyles", "barColorClasses", "barColorStyles", "roundedClasses", "useRounded", "intersectionRef", "isIntersecting", "useIntersectionObserver", "parseFloat", "normalizedBuffer", "clamp", "normalizedValue", "isReversed", "transition", "isForcedColorsModeActive", "IN_BROWSER", "window", "matchMedia", "matches", "handleClick", "e", "left", "right", "width", "getBoundingClientRect", "clientX", "Math", "round", "useRender", "_createVNode", "tag", "rounded", "class", "bottom", "undefined", "top", "convertToUnit", "style", "min", "borderTop", "Transition", "map", "bar", "buffer", "makeLoaderProps", "propsFactory", "loading", "Boolean", "String", "useLoader", "props", "name", "arguments", "length", "undefined", "getCurrentInstanceName", "loaderClasses", "computed", "LoaderSlot", "_ref", "slots", "_createVNode", "default", "color", "isActive", "active", "VProgressLinear", "absolute", "allowedVariants", "makeVFieldProps", "propsFactory", "appendInnerIcon", "IconValue", "bgColor", "String", "clearable", "Boolean", "clearIcon", "type", "default", "active", "centerAffix", "undefined", "color", "baseColor", "dirty", "disabled", "glow", "error", "flat", "iconColor", "label", "persistentClear", "prependInnerIcon", "reverse", "singleLine", "variant", "validator", "v", "includes", "EventProp", "makeComponentProps", "makeLoaderProps", "makeRoundedProps", "makeThemeProps", "VField", "genericComponent", "name", "inheritAttrs", "props", "id", "makeFocusProps", "emits", "focused", "value", "setup", "_ref", "attrs", "emit", "slots", "themeClasses", "provideTheme", "loaderClasses", "useLoader", "focusClasses", "isFocused", "focus", "blur", "useFocus", "InputIcon", "useInputIcon", "roundedClasses", "useRounded", "rtlClasses", "useRtl", "isActive", "computed", "hasLabel", "hasFloatingLabel", "uid", "useId", "messagesId", "labelRef", "ref", "floatingLabelRef", "controlRef", "isPlainOrUnderlined", "backgroundColorClasses", "backgroundColorStyles", "useBackgroundColor", "toRef", "textColorClasses", "textColorStyles", "useTextColor", "watch", "val", "el", "$el", "targetEl", "requestAnimationFrame", "rect", "nullifyTransforms", "targetRect", "getBoundingClientRect", "x", "y", "height", "targetWidth", "width", "Math", "abs", "maxWidth", "convertToUnit", "style", "getComputedStyle", "targetStyle", "duration", "parseFloat", "transitionDuration", "scale", "getPropertyValue", "visibility", "animate", "transform", "easing", "standardEasing", "direction", "finished", "then", "removeProperty", "flush", "slotProps", "onClick", "e", "target", "document", "activeElement", "preventDefault", "useRender", "isOutlined", "hasPrepend", "hasClear", "clear", "hasAppend", "for", "_createVNode", "_mergeProps", "class", "LoaderSlot", "loading", "loader", "VFieldLabel", "VExpandXTransition", "_withDirectives", "stopPropagation", "VDefaultsProvider", "VIcon", "icon", "onFocus", "onBlur", "_vShow", "_Fragment", "fieldIconColor", "makeVMessagesProps", "propsFactory", "active", "Boolean", "color", "String", "messages", "type", "Array", "default", "makeComponentProps", "makeTransitionProps", "transition", "component", "VSlideYTransition", "leaveAbsolute", "group", "VMessages", "genericComponent", "name", "props", "setup", "_ref", "slots", "computed", "wrapInArray", "textColorClasses", "textColorStyles", "useTextColor", "useRender", "_createVNode", "MaybeTransition", "value", "class", "style", "map", "message", "i", "allowedDensities", "makeDensityProps", "propsFactory", "density", "type", "String", "default", "validator", "v", "includes", "useDensity", "props", "name", "arguments", "length", "undefined", "getCurrentInstanceName", "densityClasses", "computed", "makeDimensionProps", "propsFactory", "height", "Number", "String", "maxHeight", "maxWidth", "minHeight", "minWidth", "width", "useDimension", "props", "dimensionStyles", "computed", "styles", "convertToUnit", "FormKey", "Symbol", "for", "makeFormProps", "propsFactory", "disabled", "Boolean", "fastFail", "readonly", "modelValue", "type", "default", "validateOn", "String", "useForm", "props", "form", "inject", "FormKey", "isReadonly", "computed", "readonly", "value", "isDisabled", "disabled", "makeValidationProps", "propsFactory", "disabled", "type", "Boolean", "default", "error", "errorMessages", "Array", "String", "maxErrors", "Number", "name", "label", "readonly", "rules", "modelValue", "validateOn", "validationValue", "makeFocusProps", "useValidation", "props", "arguments", "length", "undefined", "getCurrentInstanceName", "id", "useId", "model", "useProxiedModel", "validationModel", "computed", "value", "form", "useForm", "internalErrorMessages", "ref", "isPristine", "shallowRef", "isDirty", "wrapInArray", "concat", "slice", "Math", "max", "set", "Set", "split", "input", "has", "blur", "invalidInput", "lazy", "eager", "isValid", "isValidating", "validationClasses", "isDisabled", "isReadonly", "vm", "getCurrentInstance", "uid", "unref", "onBeforeMount", "register", "validate", "reset", "resetValidation", "onBeforeUnmount", "unregister", "onMounted", "update", "useToggleScope", "watch", "focused", "unwatch", "val", "nextTick", "silent", "results", "rule", "handler", "result", "console", "warn", "push", "makeVInputProps", "propsFactory", "id", "String", "appendIcon", "IconValue", "baseColor", "centerAffix", "type", "Boolean", "default", "color", "glow", "iconColor", "prependIcon", "hideDetails", "hideSpinButtons", "hint", "persistentHint", "messages", "Array", "direction", "validator", "v", "includes", "EventProp", "makeComponentProps", "makeDensityProps", "pick", "makeDimensionProps", "makeThemeProps", "makeValidationProps", "VInput", "genericComponent", "name", "props", "emits", "value", "setup", "_ref", "attrs", "slots", "emit", "densityClasses", "useDensity", "dimensionStyles", "useDimension", "themeClasses", "provideTheme", "rtlClasses", "useRtl", "InputIcon", "useInputIcon", "uid", "useId", "computed", "messagesId", "errorMessages", "isDirty", "isDisabled", "isReadonly", "isPristine", "isValid", "isValidating", "reset", "resetValidation", "validate", "validationClasses", "useValidation", "slotProps", "error", "disabled", "undefined", "focused", "length", "useRender", "hasPrepend", "prepend", "hasAppend", "append", "hasMessages", "hasDetails", "details", "_createVNode", "class", "style", "VMessages", "message", "Refs", "Symbol", "getDescriptor", "obj", "key", "currentObj", "descriptor", "Reflect", "getOwnPropertyDescriptor", "Object", "getPrototypeOf", "undefined", "forwardRefs", "target", "_len", "arguments", "length", "refs", "Array", "_key", "Proxy", "get", "has", "startsWith", "ref", "value", "val", "bind", "set", "_", "setupState", "childRefs", "queue", "slice", "shift", "push", "mounted", "el", "binding", "SUPPORTS_INTERSECTION", "modifiers", "value", "handler", "options", "observer", "IntersectionObserver", "entries", "arguments", "length", "undefined", "_observe", "instance", "$", "uid", "isIntersecting", "some", "entry", "quiet", "init", "once", "unmounted", "Object", "observe", "unobserve", "Intersect", "activeTypes", "makeVTextFieldProps", "propsFactory", "autofocus", "Boolean", "counter", "Number", "String", "counterValue", "Function", "prefix", "placeholder", "persistentPlaceholder", "persistentCounter", "suffix", "role", "type", "default", "modelModifiers", "Object", "makeVInputProps", "makeVFieldProps", "VTextField", "genericComponent", "name", "directives", "Intersect", "inheritAttrs", "props", "emits", "e", "focused", "val", "setup", "_ref", "attrs", "emit", "slots", "model", "useProxiedModel", "isFocused", "focus", "blur", "useFocus", "computed", "value", "toString", "length", "max", "maxlength", "undefined", "isPlainOrUnderlined", "includes", "variant", "onIntersect", "isIntersecting", "entries", "target", "vInputRef", "ref", "vFieldRef", "inputRef", "isActive", "active", "onFocus", "document", "activeElement", "onControlMousedown", "preventDefault", "onControlClick", "onClear", "stopPropagation", "nextTick", "callEvent", "onInput", "el", "trim", "caretPosition", "selectionStart", "selectionEnd", "useRender", "hasCounter", "hasDetails", "details", "rootAttrs", "inputAttrs", "filterInputAttrs", "modelValue", "_", "inputProps", "VInput", "filterProps", "fieldProps", "VField", "_createVNode", "_mergeProps", "$event", "class", "style", "_ref2", "id", "isDisabled", "isDirty", "isReadonly", "isValid", "dirty", "_ref3", "fieldClass", "slotProps", "inputNode", "_withDirectives", "_resolveDirective", "handler", "once", "_Fragment", "cloneVNode", "VCounter", "disabled", "forwardRefs"]
}
